

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Aug 06 08:53:24 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 09/04/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	nvCOMRAM
    58  00000B                     __pnvCOMRAM:
    59                           	callstack 0
    60  00000B                     _disp2:
    61                           	callstack 0
    62  00000B                     	ds	1
    63  0000                     _INTCON3bits	set	4080
    64  0000                     _INTCONbits	set	4082
    65  0000                     _PORTB	set	3969
    66  0000                     _TRISD	set	3989
    67  0000                     _TRISBbits	set	3987
    68  0000                     _PORTD	set	3971
    69  0000                     _INT1IF	set	32640
    70  0000                     _INT0IF	set	32657
    71  0000                     _RB4	set	31756
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76  0001EC                     __pcinit:
    77                           	callstack 0
    78  0001EC                     start_initialization:
    79                           	callstack 0
    80  0001EC                     __initialization:
    81                           	callstack 0
    82                           
    83                           ; Clear objects allocated to COMRAM (4 bytes)
    84  0001EC  6A0A               	clrf	(__pbssCOMRAM+3)& (0+255),c
    85  0001EE  6A09               	clrf	(__pbssCOMRAM+2)& (0+255),c
    86  0001F0  6A08               	clrf	(__pbssCOMRAM+1)& (0+255),c
    87  0001F2  6A07               	clrf	__pbssCOMRAM& (0+255),c
    88  0001F4                     end_of_initialization:
    89                           	callstack 0
    90  0001F4                     __end_of__initialization:
    91                           	callstack 0
    92  0001F4  900C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    93  0001F6  920C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    94  0001F8  0100               	movlb	0
    95  0001FA  EFA1  F000         	goto	_main	;jump to C main() function
    96                           
    97                           	psect	bssCOMRAM
    98  000007                     __pbssCOMRAM:
    99                           	callstack 0
   100  000007                     _para:
   101                           	callstack 0
   102  000007                     	ds	2
   103  000009                     _contar:
   104                           	callstack 0
   105  000009                     	ds	1
   106  00000A                     _disp1:
   107                           	callstack 0
   108  00000A                     	ds	1
   109                           
   110                           	psect	cstackCOMRAM
   111  000001                     __pcstackCOMRAM:
   112                           	callstack 0
   113  000001                     buzzer@para:
   114                           	callstack 0
   115                           
   116                           ; 2 bytes @ 0x0
   117  000001                     	ds	2
   118  000003                     ??_buzzer:
   119                           
   120                           ; 1 bytes @ 0x2
   121  000003                     	ds	2
   122  000005                     ??_main:
   123                           
   124                           ; 1 bytes @ 0x4
   125  000005                     	ds	2
   126                           
   127 ;;
   128 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   129 ;;
   130 ;; *************** function _main *****************
   131 ;; Defined at:
   132 ;;		line 39 in file "timer_regressivo.c"
   133 ;; Parameters:    Size  Location     Type
   134 ;;		None
   135 ;; Auto vars:     Size  Location     Type
   136 ;;		None
   137 ;; Return value:  Size  Location     Type
   138 ;;                  2   38[None  ] int 
   139 ;; Registers used:
   140 ;;		wreg, status,2, status,0, cstack
   141 ;; Tracked objects:
   142 ;;		On entry : 0/0
   143 ;;		On exit  : 0/0
   144 ;;		Unchanged: 0/0
   145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   146 ;;      Params:         0       0       0       0       0       0       0       0       0
   147 ;;      Locals:         0       0       0       0       0       0       0       0       0
   148 ;;      Temps:          2       0       0       0       0       0       0       0       0
   149 ;;      Totals:         2       0       0       0       0       0       0       0       0
   150 ;;Total ram usage:        2 bytes
   151 ;; Hardware stack levels required when called:    3
   152 ;; This function calls:
   153 ;;		_atualiza_PORTD
   154 ;;		_conta
   155 ;;		_inicializar
   156 ;; This function is called by:
   157 ;;		Startup code after reset
   158 ;; This function uses a non-reentrant model
   159 ;;
   160                           
   161                           	psect	text0
   162  000142                     __ptext0:
   163                           	callstack 0
   164  000142                     _main:
   165                           	callstack 28
   166  000142                     
   167                           ;timer_regressivo.c: 40:     inicializar();
   168  000142  ECE2  F000         	call	_inicializar	;wreg free
   169  000146                     l864:
   170                           
   171                           ;timer_regressivo.c: 42:         if(contar) conta();
   172  000146  5009               	movf	_contar^0,w,c
   173  000148  B4D8               	btfsc	status,2,c
   174  00014A  EFA9  F000         	goto	u211
   175  00014E  EFAB  F000         	goto	u210
   176  000152                     u211:
   177  000152  EFAD  F000         	goto	l40
   178  000156                     u210:
   179  000156  EC5F  F000         	call	_conta	;wreg free
   180  00015A                     l40:
   181                           
   182                           ;timer_regressivo.c: 43:         atualiza_PORTD();
   183  00015A  ECFF  F000         	call	_atualiza_PORTD	;wreg free
   184  00015E                     
   185                           ;timer_regressivo.c: 46:        _delay((unsigned long)((30000)*(4000000/4000.0)));
   186  00015E  0E99               	movlw	153
   187  000160  6E06               	movwf	(??_main+1)^0,c
   188  000162  0E31               	movlw	49
   189  000164  6E05               	movwf	??_main^0,c
   190  000166  0EA2               	movlw	162
   191  000168                     u227:
   192  000168  2EE8               	decfsz	wreg,f,c
   193  00016A  D7FE               	bra	u227
   194  00016C  2E05               	decfsz	??_main^0,f,c
   195  00016E  D7FC               	bra	u227
   196  000170  2E06               	decfsz	(??_main+1)^0,f,c
   197  000172  D7FA               	bra	u227
   198  000174  D000               	nop2	
   199  000176                     
   200                           ;timer_regressivo.c: 47:        _delay((unsigned long)((30000)*(4000000/4000.0)));
   201  000176  0E99               	movlw	153
   202  000178  6E06               	movwf	(??_main+1)^0,c
   203  00017A  0E31               	movlw	49
   204  00017C  6E05               	movwf	??_main^0,c
   205  00017E  0EA2               	movlw	162
   206  000180                     u237:
   207  000180  2EE8               	decfsz	wreg,f,c
   208  000182  D7FE               	bra	u237
   209  000184  2E05               	decfsz	??_main^0,f,c
   210  000186  D7FC               	bra	u237
   211  000188  2E06               	decfsz	(??_main+1)^0,f,c
   212  00018A  D7FA               	bra	u237
   213  00018C  D000               	nop2	
   214  00018E  EFA3  F000         	goto	l864
   215  000192  EF07  F000         	goto	start
   216  000196                     __end_of_main:
   217                           	callstack 0
   218                           
   219 ;; *************** function _inicializar *****************
   220 ;; Defined at:
   221 ;;		line 88 in file "timer_regressivo.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;		None
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg, status,2
   230 ;; Tracked objects:
   231 ;;		On entry : 0/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   235 ;;      Params:         0       0       0       0       0       0       0       0       0
   236 ;;      Locals:         0       0       0       0       0       0       0       0       0
   237 ;;      Temps:          0       0       0       0       0       0       0       0       0
   238 ;;      Totals:         0       0       0       0       0       0       0       0       0
   239 ;;Total ram usage:        0 bytes
   240 ;; Hardware stack levels used:    1
   241 ;; Hardware stack levels required when called:    1
   242 ;; This function calls:
   243 ;;		Nothing
   244 ;; This function is called by:
   245 ;;		_main
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	text1
   250  0001C4                     __ptext1:
   251                           	callstack 0
   252  0001C4                     _inicializar:
   253                           	callstack 29
   254  0001C4                     
   255                           ;timer_regressivo.c: 90:     TRISBbits.RB0 = 1;
   256  0001C4  8093               	bsf	147,0,c	;volatile
   257                           
   258                           ;timer_regressivo.c: 91:     TRISBbits.RB1 = 1;
   259  0001C6  8293               	bsf	147,1,c	;volatile
   260                           
   261                           ;timer_regressivo.c: 92:     TRISBbits.RB4 = 0;
   262  0001C8  9893               	bcf	147,4,c	;volatile
   263  0001CA                     
   264                           ;timer_regressivo.c: 93:     TRISD = 0;
   265  0001CA  0E00               	movlw	0
   266  0001CC  6E95               	movwf	149,c	;volatile
   267                           
   268                           ;timer_regressivo.c: 94:     PORTB = 4;
   269  0001CE  0E04               	movlw	4
   270  0001D0  6E81               	movwf	129,c	;volatile
   271                           
   272                           ;timer_regressivo.c: 95:     PORTD = 0;
   273  0001D2  0E00               	movlw	0
   274  0001D4  6E83               	movwf	131,c	;volatile
   275  0001D6                     
   276                           ;timer_regressivo.c: 96:     INTCONbits.INT0IE = 1;
   277  0001D6  88F2               	bsf	242,4,c	;volatile
   278  0001D8                     
   279                           ;timer_regressivo.c: 97:     INTCON3bits.INT1IE = 1;
   280  0001D8  86F0               	bsf	240,3,c	;volatile
   281  0001DA                     
   282                           ;timer_regressivo.c: 98:     INTCONbits.GIE = 1;
   283  0001DA  8EF2               	bsf	242,7,c	;volatile
   284  0001DC                     
   285                           ;timer_regressivo.c: 99:     INTCONbits.PEIE = 1;
   286  0001DC  8CF2               	bsf	242,6,c	;volatile
   287                           
   288                           ;timer_regressivo.c: 100:     disp1 = 0;
   289  0001DE  0E00               	movlw	0
   290  0001E0  6E0A               	movwf	_disp1^0,c
   291                           
   292                           ;timer_regressivo.c: 101:     disp2 = 6;
   293  0001E2  0E06               	movlw	6
   294  0001E4  6E0B               	movwf	_disp2^0,c
   295                           
   296                           ;timer_regressivo.c: 102:     contar = 0;
   297  0001E6  0E00               	movlw	0
   298  0001E8  6E09               	movwf	_contar^0,c
   299  0001EA  0012               	return		;funcret
   300  0001EC                     __end_of_inicializar:
   301                           	callstack 0
   302                           
   303 ;; *************** function _conta *****************
   304 ;; Defined at:
   305 ;;		line 67 in file "timer_regressivo.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;		None
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg, status,2, status,0, cstack
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   319 ;;      Params:         0       0       0       0       0       0       0       0       0
   320 ;;      Locals:         0       0       0       0       0       0       0       0       0
   321 ;;      Temps:          0       0       0       0       0       0       0       0       0
   322 ;;      Totals:         0       0       0       0       0       0       0       0       0
   323 ;;Total ram usage:        0 bytes
   324 ;; Hardware stack levels used:    1
   325 ;; Hardware stack levels required when called:    2
   326 ;; This function calls:
   327 ;;		_buzzer
   328 ;; This function is called by:
   329 ;;		_main
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           	psect	text2
   334  0000BE                     __ptext2:
   335                           	callstack 0
   336  0000BE                     _conta:
   337                           	callstack 28
   338  0000BE                     
   339                           ;timer_regressivo.c: 70:      if(disp2 == 0 && disp1 == 0){
   340  0000BE  500B               	movf	_disp2^0,w,c
   341  0000C0  A4D8               	btfss	status,2,c
   342  0000C2  EF65  F000         	goto	u161
   343  0000C6  EF67  F000         	goto	u160
   344  0000CA                     u161:
   345  0000CA  EF8A  F000         	goto	l852
   346  0000CE                     u160:
   347  0000CE  500A               	movf	_disp1^0,w,c
   348  0000D0  A4D8               	btfss	status,2,c
   349  0000D2  EF6D  F000         	goto	u171
   350  0000D6  EF6F  F000         	goto	u170
   351  0000DA                     u171:
   352  0000DA  EF8A  F000         	goto	l852
   353  0000DE                     u170:
   354  0000DE                     
   355                           ;timer_regressivo.c: 71:         disp2 = 0;
   356  0000DE  0E00               	movlw	0
   357  0000E0  6E0B               	movwf	_disp2^0,c
   358                           
   359                           ;timer_regressivo.c: 72:         disp1 = 0;
   360  0000E2  0E00               	movlw	0
   361  0000E4  6E0A               	movwf	_disp1^0,c
   362                           
   363                           ;timer_regressivo.c: 73:         contar = 0;
   364  0000E6  0E00               	movlw	0
   365  0000E8  6E09               	movwf	_contar^0,c
   366                           
   367                           ;timer_regressivo.c: 74:         para = 1;
   368  0000EA  0E00               	movlw	0
   369  0000EC  6E08               	movwf	(_para+1)^0,c
   370  0000EE  0E01               	movlw	1
   371  0000F0  6E07               	movwf	_para^0,c
   372                           
   373                           ;timer_regressivo.c: 75:         while (para ==1) buzzer(para);
   374  0000F2  EF81  F000         	goto	l850
   375  0000F6                     l848:
   376  0000F6  C007  F001         	movff	_para,buzzer@para
   377  0000FA  C008  F002         	movff	_para+1,buzzer@para+1
   378  0000FE  ECCB  F000         	call	_buzzer	;wreg free
   379  000102                     l850:
   380  000102  0407               	decf	_para^0,w,c
   381  000104  1008               	iorwf	(_para+1)^0,w,c
   382  000106  B4D8               	btfsc	status,2,c
   383  000108  EF88  F000         	goto	u181
   384  00010C  EF8A  F000         	goto	u180
   385  000110                     u181:
   386  000110  EF7B  F000         	goto	l848
   387  000114                     u180:
   388  000114                     l852:
   389                           
   390                           ;timer_regressivo.c: 78:     if (disp1 !=0){
   391  000114  500A               	movf	_disp1^0,w,c
   392  000116  B4D8               	btfsc	status,2,c
   393  000118  EF90  F000         	goto	u191
   394  00011C  EF92  F000         	goto	u190
   395  000120                     u191:
   396  000120  EF95  F000         	goto	l856
   397  000124                     u190:
   398  000124                     
   399                           ;timer_regressivo.c: 79:         disp1--;
   400  000124  060A               	decf	_disp1^0,f,c
   401                           
   402                           ;timer_regressivo.c: 80:     } else {
   403  000126  EFA0  F000         	goto	l60
   404  00012A                     l856:
   405                           
   406                           ;timer_regressivo.c: 81:         if(contar == 1){
   407  00012A  0409               	decf	_contar^0,w,c
   408  00012C  A4D8               	btfss	status,2,c
   409  00012E  EF9B  F000         	goto	u201
   410  000132  EF9D  F000         	goto	u200
   411  000136                     u201:
   412  000136  EFA0  F000         	goto	l60
   413  00013A                     u200:
   414  00013A                     
   415                           ;timer_regressivo.c: 82:             disp2--;
   416  00013A  060B               	decf	_disp2^0,f,c
   417  00013C                     
   418                           ;timer_regressivo.c: 83:             disp1=9;
   419  00013C  0E09               	movlw	9
   420  00013E  6E0A               	movwf	_disp1^0,c
   421  000140                     l60:
   422  000140  0012               	return		;funcret
   423  000142                     __end_of_conta:
   424                           	callstack 0
   425                           
   426 ;; *************** function _buzzer *****************
   427 ;; Defined at:
   428 ;;		line 58 in file "timer_regressivo.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;  para            2    0[COMRAM] int 
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, status,2, status,0
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   442 ;;      Params:         2       0       0       0       0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0       0       0       0       0
   444 ;;      Temps:          2       0       0       0       0       0       0       0       0
   445 ;;      Totals:         4       0       0       0       0       0       0       0       0
   446 ;;Total ram usage:        4 bytes
   447 ;; Hardware stack levels used:    1
   448 ;; Hardware stack levels required when called:    1
   449 ;; This function calls:
   450 ;;		Nothing
   451 ;; This function is called by:
   452 ;;		_conta
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text3
   457  000196                     __ptext3:
   458                           	callstack 0
   459  000196                     _buzzer:
   460                           	callstack 28
   461  000196                     
   462                           ;timer_regressivo.c: 59:     if(para == 1){
   463  000196  0401               	decf	buzzer@para^0,w,c
   464  000198  1002               	iorwf	(buzzer@para+1)^0,w,c
   465  00019A  A4D8               	btfss	status,2,c
   466  00019C  EFD2  F000         	goto	u151
   467  0001A0  EFD4  F000         	goto	u150
   468  0001A4                     u151:
   469  0001A4  EFE1  F000         	goto	l50
   470  0001A8                     u150:
   471  0001A8                     
   472                           ;timer_regressivo.c: 60:         RB4 ^=1;
   473  0001A8  7881               	btg	3969,4,c	;volatile
   474  0001AA                     
   475                           ;timer_regressivo.c: 61:         _delay((unsigned long)((250)*(4000000/4000.0)));
   476  0001AA  0E02               	movlw	2
   477  0001AC  6E04               	movwf	(??_buzzer+1)^0,c
   478  0001AE  0E45               	movlw	69
   479  0001B0  6E03               	movwf	??_buzzer^0,c
   480  0001B2  0EAA               	movlw	170
   481  0001B4                     u247:
   482  0001B4  2EE8               	decfsz	wreg,f,c
   483  0001B6  D7FE               	bra	u247
   484  0001B8  2E03               	decfsz	??_buzzer^0,f,c
   485  0001BA  D7FC               	bra	u247
   486  0001BC  2E04               	decfsz	(??_buzzer+1)^0,f,c
   487  0001BE  D7FA               	bra	u247
   488  0001C0                     
   489                           ;timer_regressivo.c: 62:         TRISBbits.RB4 ^= 1;
   490  0001C0  7893               	btg	147,4,c	;volatile
   491  0001C2                     l50:
   492  0001C2  0012               	return		;funcret
   493  0001C4                     __end_of_buzzer:
   494                           	callstack 0
   495                           
   496 ;; *************** function _atualiza_PORTD *****************
   497 ;; Defined at:
   498 ;;		line 53 in file "timer_regressivo.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   512 ;;      Params:         0       0       0       0       0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0       0       0       0       0
   515 ;;      Totals:         0       0       0       0       0       0       0       0       0
   516 ;;Total ram usage:        0 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; Hardware stack levels required when called:    1
   519 ;; This function calls:
   520 ;;		Nothing
   521 ;; This function is called by:
   522 ;;		_main
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           	psect	text4
   527  0001FE                     __ptext4:
   528                           	callstack 0
   529  0001FE                     _atualiza_PORTD:
   530                           	callstack 29
   531  0001FE                     
   532                           ;timer_regressivo.c: 54:     PORTD = (disp2 << 4) | disp1;
   533  0001FE  380B               	swapf	_disp2^0,w,c
   534  000200  0BF0               	andlw	240
   535  000202  100A               	iorwf	_disp1^0,w,c
   536  000204  6E83               	movwf	131,c	;volatile
   537  000206  0012               	return		;funcret
   538  000208                     __end_of_atualiza_PORTD:
   539                           	callstack 0
   540                           
   541 ;; *************** function _ISR *****************
   542 ;; Defined at:
   543 ;;		line 105 in file "timer_regressivo.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, status,2, status,0
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   557 ;;      Params:         0       0       0       0       0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0       0       0
   560 ;;      Totals:         0       0       0       0       0       0       0       0       0
   561 ;;Total ram usage:        0 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; This function calls:
   564 ;;		Nothing
   565 ;; This function is called by:
   566 ;;		Interrupt level 2
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           	psect	intcode
   571  000008                     __pintcode:
   572                           	callstack 0
   573  000008                     _ISR:
   574                           	callstack 28
   575                           
   576                           ;incstack = 0
   577  000008  820C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   578  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   579                           
   580                           	psect	intcode_body
   581  000012                     __pintcode_body:
   582                           	callstack 28
   583  000012                     int_func:
   584                           	callstack 28
   585  000012  0006               	pop		; remove dummy address from shadow register refresh
   586  000014                     
   587                           ;timer_regressivo.c: 106:     if(INT0IF){
   588  000014  A2F2               	btfss	4082,1,c	;volatile
   589  000016  EF0F  F000         	goto	i2u8_41
   590  00001A  EF11  F000         	goto	i2u8_40
   591  00001E                     i2u8_41:
   592  00001E  EF2D  F000         	goto	i2l68
   593  000022                     i2u8_40:
   594  000022                     
   595                           ;timer_regressivo.c: 108:         INT0IF = 0;
   596  000022  92F2               	bcf	4082,1,c	;volatile
   597  000024                     
   598                           ;timer_regressivo.c: 111:         if(para == 1){
   599  000024  0407               	decf	_para^0,w,c
   600  000026  1008               	iorwf	(_para+1)^0,w,c
   601  000028  A4D8               	btfss	status,2,c
   602  00002A  EF19  F000         	goto	i2u9_41
   603  00002E  EF1B  F000         	goto	i2u9_40
   604  000032                     i2u9_41:
   605  000032  EF27  F000         	goto	i2l816
   606  000036                     i2u9_40:
   607  000036                     
   608                           ;timer_regressivo.c: 112:             TRISBbits.RB4 = 0;
   609  000036  9893               	bcf	147,4,c	;volatile
   610                           
   611                           ;timer_regressivo.c: 113:             TRISBbits.RB4 = 0;
   612  000038  9893               	bcf	147,4,c	;volatile
   613  00003A                     i2l814:
   614                           
   615                           ;timer_regressivo.c: 114:             disp2 = 6;
   616  00003A  0E06               	movlw	6
   617  00003C  6E0B               	movwf	_disp2^0,c
   618                           
   619                           ;timer_regressivo.c: 115:             disp1 = 0;
   620  00003E  0E00               	movlw	0
   621  000040  6E0A               	movwf	_disp1^0,c
   622                           
   623                           ;timer_regressivo.c: 116:             para = 0;
   624  000042  0E00               	movlw	0
   625  000044  6E08               	movwf	(_para+1)^0,c
   626  000046  0E00               	movlw	0
   627  000048  6E07               	movwf	_para^0,c
   628                           
   629                           ;timer_regressivo.c: 117:         }
   630  00004A  EF5D  F000         	goto	i2l78
   631  00004E                     i2l816:
   632  00004E  0E01               	movlw	1
   633  000050  6E09               	movwf	_contar^0,c
   634  000052  EF5D  F000         	goto	i2l78
   635  000056                     i2l70:
   636                           
   637                           ;timer_regressivo.c: 120:     } else if(INT1IF){
   638  000056  EF5D  F000         	goto	i2l78
   639  00005A                     i2l68:
   640  00005A  A0F0               	btfss	4080,0,c	;volatile
   641  00005C  EF32  F000         	goto	i2u10_41
   642  000060  EF34  F000         	goto	i2u10_40
   643  000064                     i2u10_41:
   644  000064  EF5D  F000         	goto	i2l78
   645  000068                     i2u10_40:
   646  000068                     
   647                           ;timer_regressivo.c: 122:         INT1IF = 0;
   648  000068  90F0               	bcf	4080,0,c	;volatile
   649  00006A                     
   650                           ;timer_regressivo.c: 125:         if(para == 0){
   651  00006A  5007               	movf	_para^0,w,c
   652  00006C  1008               	iorwf	(_para+1)^0,w,c
   653  00006E  A4D8               	btfss	status,2,c
   654  000070  EF3C  F000         	goto	i2u11_41
   655  000074  EF3E  F000         	goto	i2u11_40
   656  000078                     i2u11_41:
   657  000078  EF51  F000         	goto	i2l828
   658  00007C                     i2u11_40:
   659  00007C                     
   660                           ;timer_regressivo.c: 126:             if(contar==0){
   661  00007C  5009               	movf	_contar^0,w,c
   662  00007E  A4D8               	btfss	status,2,c
   663  000080  EF44  F000         	goto	i2u12_41
   664  000084  EF46  F000         	goto	i2u12_40
   665  000088                     i2u12_41:
   666  000088  EF5D  F000         	goto	i2l78
   667  00008C                     i2u12_40:
   668  00008C                     
   669                           ;timer_regressivo.c: 127:                 if(disp2<9) disp2 ++;
   670  00008C  0E09               	movlw	9
   671  00008E  600B               	cpfslt	_disp2^0,c
   672  000090  EF4C  F000         	goto	i2u13_41
   673  000094  EF4E  F000         	goto	i2u13_40
   674  000098                     i2u13_41:
   675  000098  EF2B  F000         	goto	i2l70
   676  00009C                     i2u13_40:
   677  00009C  2A0B               	incf	_disp2^0,f,c
   678  00009E  EF5D  F000         	goto	i2l78
   679  0000A2                     i2l828:
   680  0000A2  0407               	decf	_para^0,w,c
   681  0000A4  1008               	iorwf	(_para+1)^0,w,c
   682  0000A6  A4D8               	btfss	status,2,c
   683  0000A8  EF58  F000         	goto	i2u14_41
   684  0000AC  EF5A  F000         	goto	i2u14_40
   685  0000B0                     i2u14_41:
   686  0000B0  EF5D  F000         	goto	i2l78
   687  0000B4                     i2u14_40:
   688  0000B4                     
   689                           ;timer_regressivo.c: 133:             TRISBbits.RB4 = 0;
   690  0000B4  9893               	bcf	147,4,c	;volatile
   691  0000B6  EF1D  F000         	goto	i2l814
   692  0000BA                     i2l78:
   693  0000BA  920C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   694  0000BC  0011               	retfie		f
   695  0000BE                     __end_of_ISR:
   696                           	callstack 0
   697  0000                     
   698                           	psect	rparam
   699  0000                     
   700                           	psect	temp
   701  00000C                     btemp:
   702                           	callstack 0
   703  00000C                     	ds	1
   704  0000                     int$flags	set	btemp
   705  0000                     wtemp8	set	btemp+1
   706  0000                     ttemp5	set	btemp+1
   707  0000                     ttemp6	set	btemp+4
   708  0000                     ttemp7	set	btemp+8
   709                           
   710                           	psect	idloc
   711                           
   712                           ;Config register IDLOC0 @ 0x200000
   713                           ;	unspecified, using default values
   714  200000                     	org	2097152
   715  200000  FF                 	db	255
   716                           
   717                           ;Config register IDLOC1 @ 0x200001
   718                           ;	unspecified, using default values
   719  200001                     	org	2097153
   720  200001  FF                 	db	255
   721                           
   722                           ;Config register IDLOC2 @ 0x200002
   723                           ;	unspecified, using default values
   724  200002                     	org	2097154
   725  200002  FF                 	db	255
   726                           
   727                           ;Config register IDLOC3 @ 0x200003
   728                           ;	unspecified, using default values
   729  200003                     	org	2097155
   730  200003  FF                 	db	255
   731                           
   732                           ;Config register IDLOC4 @ 0x200004
   733                           ;	unspecified, using default values
   734  200004                     	org	2097156
   735  200004  FF                 	db	255
   736                           
   737                           ;Config register IDLOC5 @ 0x200005
   738                           ;	unspecified, using default values
   739  200005                     	org	2097157
   740  200005  FF                 	db	255
   741                           
   742                           ;Config register IDLOC6 @ 0x200006
   743                           ;	unspecified, using default values
   744  200006                     	org	2097158
   745  200006  FF                 	db	255
   746                           
   747                           ;Config register IDLOC7 @ 0x200007
   748                           ;	unspecified, using default values
   749  200007                     	org	2097159
   750  200007  FF                 	db	255
   751                           
   752                           	psect	config
   753                           
   754                           ;Config register CONFIG1L @ 0x300000
   755                           ;	unspecified, using default values
   756                           ;	PLL Prescaler Selection bits
   757                           ;	PLLDIV = 0x0, unprogrammed default
   758                           ;	System Clock Postscaler Selection bits
   759                           ;	CPUDIV = 0x0, unprogrammed default
   760                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   761                           ;	USBDIV = 0x0, unprogrammed default
   762  300000                     	org	3145728
   763  300000  00                 	db	0
   764                           
   765                           ;Config register CONFIG1H @ 0x300001
   766                           ;	unspecified, using default values
   767                           ;	Oscillator Selection bits
   768                           ;	FOSC = 0x5, unprogrammed default
   769                           ;	Fail-Safe Clock Monitor Enable bit
   770                           ;	FCMEN = 0x0, unprogrammed default
   771                           ;	Internal/External Oscillator Switchover bit
   772                           ;	IESO = 0x0, unprogrammed default
   773  300001                     	org	3145729
   774  300001  05                 	db	5
   775                           
   776                           ;Config register CONFIG2L @ 0x300002
   777                           ;	unspecified, using default values
   778                           ;	Power-up Timer Enable bit
   779                           ;	PWRT = 0x1, unprogrammed default
   780                           ;	Brown-out Reset Enable bits
   781                           ;	BOR = 0x3, unprogrammed default
   782                           ;	Brown-out Reset Voltage bits
   783                           ;	BORV = 0x3, unprogrammed default
   784                           ;	USB Voltage Regulator Enable bit
   785                           ;	VREGEN = 0x0, unprogrammed default
   786  300002                     	org	3145730
   787  300002  1F                 	db	31
   788                           
   789                           ;Config register CONFIG2H @ 0x300003
   790                           ;	unspecified, using default values
   791                           ;	Watchdog Timer Enable bit
   792                           ;	WDT = 0x1, unprogrammed default
   793                           ;	Watchdog Timer Postscale Select bits
   794                           ;	WDTPS = 0xF, unprogrammed default
   795  300003                     	org	3145731
   796  300003  1F                 	db	31
   797                           
   798                           ; Padding undefined space
   799  300004                     	org	3145732
   800  300004  FF                 	db	255
   801                           
   802                           ;Config register CONFIG3H @ 0x300005
   803                           ;	CCP2 MUX bit
   804                           ;	CCP2MX = 0x1, unprogrammed default
   805                           ;	PORTB A/D Enable bit
   806                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   807                           ;	Low-Power Timer 1 Oscillator Enable bit
   808                           ;	LPT1OSC = 0x0, unprogrammed default
   809                           ;	MCLR Pin Enable bit
   810                           ;	MCLRE = 0x1, unprogrammed default
   811  300005                     	org	3145733
   812  300005  81                 	db	129
   813                           
   814                           ;Config register CONFIG4L @ 0x300006
   815                           ;	unspecified, using default values
   816                           ;	Stack Full/Underflow Reset Enable bit
   817                           ;	STVREN = 0x1, unprogrammed default
   818                           ;	Single-Supply ICSP Enable bit
   819                           ;	LVP = 0x1, unprogrammed default
   820                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   821                           ;	ICPRT = 0x0, unprogrammed default
   822                           ;	Extended Instruction Set Enable bit
   823                           ;	XINST = 0x0, unprogrammed default
   824                           ;	Background Debugger Enable bit
   825                           ;	DEBUG = 0x1, unprogrammed default
   826  300006                     	org	3145734
   827  300006  85                 	db	133
   828                           
   829                           ; Padding undefined space
   830  300007                     	org	3145735
   831  300007  FF                 	db	255
   832                           
   833                           ;Config register CONFIG5L @ 0x300008
   834                           ;	unspecified, using default values
   835                           ;	Code Protection bit
   836                           ;	CP0 = 0x1, unprogrammed default
   837                           ;	Code Protection bit
   838                           ;	CP1 = 0x1, unprogrammed default
   839                           ;	Code Protection bit
   840                           ;	CP2 = 0x1, unprogrammed default
   841                           ;	Code Protection bit
   842                           ;	CP3 = 0x1, unprogrammed default
   843  300008                     	org	3145736
   844  300008  0F                 	db	15
   845                           
   846                           ;Config register CONFIG5H @ 0x300009
   847                           ;	unspecified, using default values
   848                           ;	Boot Block Code Protection bit
   849                           ;	CPB = 0x1, unprogrammed default
   850                           ;	Data EEPROM Code Protection bit
   851                           ;	CPD = 0x1, unprogrammed default
   852  300009                     	org	3145737
   853  300009  C0                 	db	192
   854                           
   855                           ;Config register CONFIG6L @ 0x30000A
   856                           ;	unspecified, using default values
   857                           ;	Write Protection bit
   858                           ;	WRT0 = 0x1, unprogrammed default
   859                           ;	Write Protection bit
   860                           ;	WRT1 = 0x1, unprogrammed default
   861                           ;	Write Protection bit
   862                           ;	WRT2 = 0x1, unprogrammed default
   863                           ;	Write Protection bit
   864                           ;	WRT3 = 0x1, unprogrammed default
   865  30000A                     	org	3145738
   866  30000A  0F                 	db	15
   867                           
   868                           ;Config register CONFIG6H @ 0x30000B
   869                           ;	unspecified, using default values
   870                           ;	Configuration Register Write Protection bit
   871                           ;	WRTC = 0x1, unprogrammed default
   872                           ;	Boot Block Write Protection bit
   873                           ;	WRTB = 0x1, unprogrammed default
   874                           ;	Data EEPROM Write Protection bit
   875                           ;	WRTD = 0x1, unprogrammed default
   876  30000B                     	org	3145739
   877  30000B  E0                 	db	224
   878                           
   879                           ;Config register CONFIG7L @ 0x30000C
   880                           ;	unspecified, using default values
   881                           ;	Table Read Protection bit
   882                           ;	EBTR0 = 0x1, unprogrammed default
   883                           ;	Table Read Protection bit
   884                           ;	EBTR1 = 0x1, unprogrammed default
   885                           ;	Table Read Protection bit
   886                           ;	EBTR2 = 0x1, unprogrammed default
   887                           ;	Table Read Protection bit
   888                           ;	EBTR3 = 0x1, unprogrammed default
   889  30000C                     	org	3145740
   890  30000C  0F                 	db	15
   891                           
   892                           ;Config register CONFIG7H @ 0x30000D
   893                           ;	unspecified, using default values
   894                           ;	Boot Block Table Read Protection bit
   895                           ;	EBTRB = 0x1, unprogrammed default
   896  30000D                     	org	3145741
   897  30000D  40                 	db	64
   898                           tosu	equ	0xFFF
   899                           tosh	equ	0xFFE
   900                           tosl	equ	0xFFD
   901                           stkptr	equ	0xFFC
   902                           pclatu	equ	0xFFB
   903                           pclath	equ	0xFFA
   904                           pcl	equ	0xFF9
   905                           tblptru	equ	0xFF8
   906                           tblptrh	equ	0xFF7
   907                           tblptrl	equ	0xFF6
   908                           tablat	equ	0xFF5
   909                           prodh	equ	0xFF4
   910                           prodl	equ	0xFF3
   911                           indf0	equ	0xFEF
   912                           postinc0	equ	0xFEE
   913                           postdec0	equ	0xFED
   914                           preinc0	equ	0xFEC
   915                           plusw0	equ	0xFEB
   916                           fsr0h	equ	0xFEA
   917                           fsr0l	equ	0xFE9
   918                           wreg	equ	0xFE8
   919                           indf1	equ	0xFE7
   920                           postinc1	equ	0xFE6
   921                           postdec1	equ	0xFE5
   922                           preinc1	equ	0xFE4
   923                           plusw1	equ	0xFE3
   924                           fsr1h	equ	0xFE2
   925                           fsr1l	equ	0xFE1
   926                           bsr	equ	0xFE0
   927                           indf2	equ	0xFDF
   928                           postinc2	equ	0xFDE
   929                           postdec2	equ	0xFDD
   930                           preinc2	equ	0xFDC
   931                           plusw2	equ	0xFDB
   932                           fsr2h	equ	0xFDA
   933                           fsr2l	equ	0xFD9
   934                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _conta->_buzzer

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      98
                                              4 COMRAM     2     2      0
                     _atualiza_PORTD
                              _conta
                        _inicializar
 ---------------------------------------------------------------------------------
 (1) _inicializar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conta                                                0     0      0      98
                             _buzzer
 ---------------------------------------------------------------------------------
 (2) _buzzer                                               4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _atualiza_PORTD                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atualiza_PORTD
   _conta
     _buzzer
   _inicializar

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      6       B       1       11.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      20        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Aug 06 08:53:24 2020

                     l40 015A                       l50 01C2                       l60 0140  
                     l46 0206                       l63 01EA                      l840 01C0  
                    l834 0196                      l850 0102                      l842 00BE  
                    l770 01DA                      l762 01C4                      l836 01A8  
                    l860 013C                      l844 00CE                      l852 0114  
                    l772 01DC                      l764 01CA                      l838 01AA  
                    l854 0124                      l846 00DE                      l766 01D6  
                    l870 0176                      l862 0142                      l856 012A  
                    l848 00F6                      l768 01D8                      l864 0146  
                    l794 01FE                      l858 013A                      l866 0156  
                    l868 015E                      _RB4 007C0C                      u200 013A  
                    u201 0136                      u210 0156                      u211 0152  
                    u150 01A8                      u151 01A4                      u160 00CE  
                    u161 00CA                      u170 00DE                      u171 00DA  
                    u227 0168                      u180 0114                      u181 0110  
                    u237 0180                      u190 0124                      u247 01B4  
                    u191 0120                      _ISR 0008                      wreg 000FE8  
                   ?_ISR 0001                     i2l70 0056                     i2l68 005A  
                   i2l78 00BA                     _main 0142                     _para 0007  
                   btemp 000C                     start 000E             ?_inicializar 0001  
           ___param_bank 000000                    ??_ISR 0001                    ?_main 0001  
                  i2l810 0024                    i2l820 006A                    i2l812 0036  
                  i2l830 00B4                    i2l822 007C                    i2l814 003A  
                  i2l806 0014                    i2l824 008C                    i2l816 004E  
                  i2l808 0022                    i2l826 009C                    i2l818 0068  
                  i2l828 00A2                    _PORTB 000F81                    _PORTD 000F83  
                  _TRISD 000F95                    _disp1 000A                    _disp2 000B  
                  _conta 00BE                    ttemp5 000D                    ttemp6 0010  
                  ttemp7 0014                    status 000FD8                    wtemp8 000D  
        __initialization 01EC           _atualiza_PORTD 01FE             __end_of_main 0196  
                 ??_main 0005            __activetblptr 000000                   ?_conta 0001  
                 _INT0IF 007F91                   _INT1IF 007F80                   i2u8_40 0022  
                 i2u8_41 001E                   i2u9_40 0036                   i2u9_41 0032  
 __end_of_atualiza_PORTD 0208                   _contar 0009                   _buzzer 0196  
             __accesstop 0060  __end_of__initialization 01F4            ___rparam_used 000001  
        ?_atualiza_PORTD 0001           __pcstackCOMRAM 0001     __size_of_inicializar 0028  
          __end_of_conta 0142                  ??_conta 0005               __pnvCOMRAM 000B  
                ?_buzzer 0001                  i2u10_40 0068                  i2u10_41 0064  
                i2u11_40 007C                  i2u11_41 0078                  i2u12_40 008C  
                i2u12_41 0088                  i2u13_40 009C                  i2u13_41 0098  
                i2u14_40 00B4                  i2u14_41 00B0                  __Hparam 0000  
                __Lparam 0000                  __pcinit 01EC          __size_of_buzzer 002E  
                __ramtop 0800                  __ptext0 0142                  __ptext1 01C4  
                __ptext2 00BE                  __ptext3 0196                  __ptext4 01FE  
           __size_of_ISR 00B6           __pintcode_body 0012     end_of_initialization 01F4  
                int_func 0012                _TRISBbits 000F93         ??_atualiza_PORTD 0001  
         __end_of_buzzer 01C4      start_initialization 01EC              __end_of_ISR 00BE  
          ??_inicializar 0001                 ??_buzzer 0003              __pbssCOMRAM 0007  
             buzzer@para 0001                __pintcode 0008      __end_of_inicializar 01EC  
         __size_of_conta 0084              _INTCON3bits 000FF0                 __Hrparam 0000  
            _inicializar 01C4                 __Lrparam 0000            __size_of_main 0054  
               int$flags 000C               _INTCONbits 000FF2                 intlevel2 0000  
__size_of_atualiza_PORTD 000A  
