

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Aug 06 08:55:10 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,inline
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.20
    58                           ; Generated 09/04/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4550 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     _ADRES	set	4035
    92  0000                     _PORTDbits	set	3971
    93  0000                     _ADCON0bits	set	4034
    94  0000                     _PIE1bits	set	3997
    95  0000                     _ADCON2bits	set	4032
    96  0000                     _ADCON1bits	set	4033
    97  0000                     _TRISB	set	3987
    98  0000                     _TRISD	set	3989
    99  0000                     _PORTD	set	3971
   100  0000                     _ADIF	set	31990
   101  0000                     _GIEL	set	32662
   102  0000                     _GIEH	set	32663
   103  0000                     _ADON	set	32272
   104                           
   105                           	psect	smallconst
   106  000800                     __psmallconst:
   107                           	callstack 0
   108  000800  00                 	db	0
   109  000801                     STR_1:
   110  000801  25                 	db	37
   111  000802  2E                 	db	46
   112  000803  32                 	db	50	;'2'
   113  000804  66                 	db	102	;'f'
   114  000805  20                 	db	32
   115  000806  56                 	db	86	;'V'
   116  000807  6F                 	db	111	;'o'
   117  000808  6C                 	db	108	;'l'
   118  000809  74                 	db	116	;'t'
   119  00080A  73                 	db	115	;'s'
   120  00080B  00                 	db	0
   121  00080C                     STR_2:
   122  00080C  49                 	db	73	;'I'
   123  00080D  4E                 	db	78	;'N'
   124  00080E  46                 	db	70	;'F'
   125  00080F  00                 	db	0
   126  000810                     STR_6:
   127  000810  4E                 	db	78	;'N'
   128  000811  41                 	db	65	;'A'
   129  000812  4E                 	db	78	;'N'
   130  000813  00                 	db	0
   131  000814                     STR_3:
   132  000814  69                 	db	105	;'i'
   133  000815  6E                 	db	110	;'n'
   134  000816  66                 	db	102	;'f'
   135  000817  00                 	db	0
   136  000818                     STR_7:
   137  000818  6E                 	db	110	;'n'
   138  000819  61                 	db	97	;'a'
   139  00081A  6E                 	db	110	;'n'
   140  00081B  00                 	db	0
   141  00081C                     STR_10:
   142  00081C  6C                 	db	108	;'l'
   143  00081D  66                 	db	102	;'f'
   144  00081E  00                 	db	0
   145  00081F  00                 	db	0	; dummy byte at the end
   146  0000                     
   147                           ; #config settings
   148                           
   149                           	psect	cinit
   150  003740                     __pcinit:
   151                           	callstack 0
   152  003740                     start_initialization:
   153                           	callstack 0
   154  003740                     __initialization:
   155                           	callstack 0
   156                           
   157                           ; Clear objects allocated to BANK1 (80 bytes)
   158  003740  EE01  F000         	lfsr	0,__pbssBANK1
   159  003744  0E50               	movlw	80
   160  003746                     clear_0:
   161  003746  6AEE               	clrf	postinc0,c
   162  003748  06E8               	decf	wreg,f,c
   163  00374A  E1FD               	bnz	clear_0
   164                           
   165                           ; Clear objects allocated to BANK0 (18 bytes)
   166  00374C  EE00  F0C9         	lfsr	0,__pbssBANK0
   167  003750  0E12               	movlw	18
   168  003752                     clear_1:
   169  003752  6AEE               	clrf	postinc0,c
   170  003754  06E8               	decf	wreg,f,c
   171  003756  E1FD               	bnz	clear_1
   172  003758                     end_of_initialization:
   173                           	callstack 0
   174  003758                     __end_of__initialization:
   175                           	callstack 0
   176  003758  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   177  00375A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   178  00375C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   179  00375E  6EF8               	movwf	tblptru,c
   180  003760  0100               	movlb	0
   181  003762  EFC0  F019         	goto	_main	;jump to C main() function
   182                           
   183                           	psect	bssBANK0
   184  0000C9                     __pbssBANK0:
   185                           	callstack 0
   186  0000C9                     floorf@F524:
   187                           	callstack 0
   188  0000C9                     	ds	4
   189  0000CD                     ___fpclassifyf@F463:
   190                           	callstack 0
   191  0000CD                     	ds	4
   192  0000D1                     _nout:
   193                           	callstack 0
   194  0000D1                     	ds	2
   195  0000D3                     _width:
   196                           	callstack 0
   197  0000D3                     	ds	2
   198  0000D5                     _prec:
   199                           	callstack 0
   200  0000D5                     	ds	2
   201  0000D7                     _flags:
   202                           	callstack 0
   203  0000D7                     	ds	2
   204  0000D9                     _resultado:
   205                           	callstack 0
   206  0000D9                     	ds	2
   207                           
   208                           	psect	bssBANK1
   209  000100                     __pbssBANK1:
   210                           	callstack 0
   211  000100                     _dbuf:
   212                           	callstack 0
   213  000100                     	ds	80
   214                           
   215                           	psect	cstackBANK0
   216  000060                     __pcstackBANK0:
   217                           	callstack 0
   218  000060                     ??_efgtoa:
   219                           
   220                           ; 1 bytes @ 0x0
   221  000060                     	ds	5
   222  000065                     efgtoa@ou:
   223                           	callstack 0
   224                           
   225                           ; 4 bytes @ 0x5
   226  000065                     	ds	4
   227  000069                     _efgtoa$897:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0x9
   231  000069                     	ds	2
   232  00006B                     _efgtoa$898:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0xB
   236  00006B                     	ds	2
   237  00006D                     _efgtoa$903:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0xD
   241  00006D                     	ds	2
   242  00006F                     _efgtoa$907:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0xF
   246  00006F                     	ds	2
   247  000071                     _efgtoa$908:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x11
   251  000071                     	ds	2
   252  000073                     _efgtoa$909:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x13
   256  000073                     	ds	2
   257  000075                     efgtoa@t:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x15
   261  000075                     	ds	2
   262  000077                     efgtoa@pp:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x17
   266  000077                     	ds	2
   267  000079                     efgtoa@m:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x19
   271  000079                     	ds	2
   272  00007B                     efgtoa@ne:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x1B
   276  00007B                     	ds	2
   277  00007D                     efgtoa@d:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x1D
   281  00007D                     	ds	2
   282  00007F                     efgtoa@sign:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x1F
   286  00007F                     	ds	2
   287  000081                     efgtoa@p:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x21
   291  000081                     	ds	2
   292  000083                     efgtoa@nmode:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x23
   296  000083                     	ds	1
   297  000084                     efgtoa@w:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x24
   301  000084                     	ds	2
   302  000086                     efgtoa@mode:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x26
   306  000086                     	ds	1
   307  000087                     efgtoa@h:
   308                           	callstack 0
   309                           
   310                           ; 4 bytes @ 0x27
   311  000087                     	ds	4
   312  00008B                     efgtoa@l:
   313                           	callstack 0
   314                           
   315                           ; 4 bytes @ 0x2B
   316  00008B                     	ds	4
   317  00008F                     efgtoa@i:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x2F
   321  00008F                     	ds	2
   322  000091                     efgtoa@g:
   323                           	callstack 0
   324                           
   325                           ; 4 bytes @ 0x31
   326  000091                     	ds	4
   327  000095                     efgtoa@e:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x35
   331  000095                     	ds	2
   332  000097                     efgtoa@n:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x37
   336  000097                     	ds	2
   337  000099                     efgtoa@u:
   338                           	callstack 0
   339                           
   340                           ; 4 bytes @ 0x39
   341  000099                     	ds	4
   342  00009D                     ?_vfpfcnvrt:
   343                           	callstack 0
   344  00009D                     vfpfcnvrt@fp:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x3D
   348  00009D                     	ds	2
   349  00009F                     vfpfcnvrt@fmt:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x3F
   353  00009F                     	ds	2
   354  0000A1                     vfpfcnvrt@ap:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x41
   358  0000A1                     	ds	2
   359  0000A3                     ??_vfpfcnvrt:
   360                           
   361                           ; 1 bytes @ 0x43
   362  0000A3                     	ds	4
   363  0000A7                     _vfpfcnvrt$923:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x47
   367  0000A7                     	ds	2
   368  0000A9                     _vfpfcnvrt$927:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x49
   372  0000A9                     	ds	2
   373  0000AB                     vfpfcnvrt@f:
   374                           	callstack 0
   375                           
   376                           ; 4 bytes @ 0x4B
   377  0000AB                     	ds	4
   378  0000AF                     vfpfcnvrt@ct:
   379                           	callstack 0
   380                           
   381                           ; 3 bytes @ 0x4F
   382  0000AF                     	ds	3
   383  0000B2                     vfpfcnvrt@c:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x52
   387  0000B2                     	ds	1
   388  0000B3                     ?_vfprintf:
   389                           	callstack 0
   390  0000B3                     vfprintf@fp:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x53
   394  0000B3                     	ds	2
   395  0000B5                     vfprintf@fmt:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x55
   399  0000B5                     	ds	2
   400  0000B7                     vfprintf@ap:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x57
   404  0000B7                     	ds	2
   405  0000B9                     ?_printf:
   406                           	callstack 0
   407  0000B9                     printf@fmt:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x59
   411  0000B9                     	ds	8
   412  0000C1                     printf@ap:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x61
   416  0000C1                     	ds	2
   417  0000C3                     mostra_resultado@resultado:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x63
   421  0000C3                     	ds	2
   422  0000C5                     _mostra_resultado$1250:
   423                           	callstack 0
   424                           
   425                           ; 4 bytes @ 0x65
   426  0000C5                     	ds	4
   427                           
   428                           	psect	cstackCOMRAM
   429  000001                     __pcstackCOMRAM:
   430                           	callstack 0
   431  000001                     ??_envia_nibble_lcd:
   432  000001                     ?_strlen:
   433                           	callstack 0
   434  000001                     ?___fpclassifyf:
   435                           	callstack 0
   436  000001                     ?_isupper:
   437                           	callstack 0
   438  000001                     ?_isdigit:
   439                           	callstack 0
   440  000001                     ?_strncmp:
   441                           	callstack 0
   442  000001                     ?_isspace:
   443                           	callstack 0
   444  000001                     ?___wmul:
   445                           	callstack 0
   446  000001                     ?___awdiv:
   447                           	callstack 0
   448  000001                     ?___awmod:
   449                           	callstack 0
   450  000001                     ?___fladd:
   451                           	callstack 0
   452  000001                     ?___flneg:
   453                           	callstack 0
   454  000001                     ?___fltol:
   455                           	callstack 0
   456  000001                     ?___xxtofl:
   457                           	callstack 0
   458  000001                     ___wmul@multiplier:
   459                           	callstack 0
   460  000001                     ___awdiv@dividend:
   461                           	callstack 0
   462  000001                     ___awmod@dividend:
   463                           	callstack 0
   464  000001                     isdigit@c:
   465                           	callstack 0
   466  000001                     isspace@c:
   467                           	callstack 0
   468  000001                     isupper@c:
   469                           	callstack 0
   470  000001                     strcpy@dest:
   471                           	callstack 0
   472  000001                     strlen@s:
   473                           	callstack 0
   474  000001                     strncmp@_l:
   475                           	callstack 0
   476  000001                     ___fleq@ff1:
   477                           	callstack 0
   478  000001                     ___flneg@f1:
   479                           	callstack 0
   480  000001                     ___fltol@f1:
   481                           	callstack 0
   482  000001                     ___fladd@b:
   483                           	callstack 0
   484  000001                     ___xxtofl@val:
   485                           	callstack 0
   486  000001                     ___fpclassifyf@x:
   487                           	callstack 0
   488                           
   489                           ; 4 bytes @ 0x0
   490  000001                     	ds	1
   491  000002                     envia_nibble_lcd@dado:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x1
   495  000002                     	ds	1
   496  000003                     ??_isupper:
   497  000003                     ??_isdigit:
   498  000003                     ??_isspace:
   499  000003                     envia_byte_lcd@dado:
   500                           	callstack 0
   501  000003                     ___wmul@multiplicand:
   502                           	callstack 0
   503  000003                     ___awdiv@divisor:
   504                           	callstack 0
   505  000003                     ___awmod@divisor:
   506                           	callstack 0
   507  000003                     strcpy@src:
   508                           	callstack 0
   509  000003                     strlen@a:
   510                           	callstack 0
   511  000003                     strncmp@_r:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x2
   515  000003                     	ds	1
   516  000004                     envia_byte_lcd@endereco:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x3
   520  000004                     	ds	1
   521  000005                     ??_inicializa_lcd:
   522  000005                     ??_limpa_lcd:
   523  000005                     ??___fpclassifyf:
   524  000005                     ??_strcpy:
   525  000005                     ??___fltol:
   526  000005                     ??___xxtofl:
   527  000005                     escreve_lcd@c:
   528                           	callstack 0
   529  000005                     caracter_inicio@coluna:
   530                           	callstack 0
   531  000005                     ___awdiv@counter:
   532                           	callstack 0
   533  000005                     ___awmod@counter:
   534                           	callstack 0
   535  000005                     ___wmul@product:
   536                           	callstack 0
   537  000005                     strncmp@n:
   538                           	callstack 0
   539  000005                     ___fleq@ff2:
   540                           	callstack 0
   541  000005                     ___fladd@a:
   542                           	callstack 0
   543                           
   544                           ; 4 bytes @ 0x4
   545  000005                     	ds	1
   546  000006                     putch@data:
   547                           	callstack 0
   548  000006                     caracter_inicio@linha:
   549                           	callstack 0
   550  000006                     ___awdiv@sign:
   551                           	callstack 0
   552  000006                     ___awmod@sign:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x5
   556  000006                     	ds	1
   557  000007                     ??_strncmp:
   558  000007                     ?_tolower:
   559                           	callstack 0
   560  000007                     caracter_inicio@posicao:
   561                           	callstack 0
   562  000007                     _isspace$992:
   563                           	callstack 0
   564  000007                     ___awdiv@quotient:
   565                           	callstack 0
   566  000007                     fputc@c:
   567                           	callstack 0
   568  000007                     strcpy@s:
   569                           	callstack 0
   570  000007                     tolower@c:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x6
   574  000007                     	ds	1
   575  000008                     ?_atoi:
   576                           	callstack 0
   577  000008                     atoi@s:
   578                           	callstack 0
   579  000008                     strncmp@l:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x7
   583  000008                     	ds	1
   584  000009                     ??___fladd:
   585  000009                     ??_tolower:
   586  000009                     ??___fleq:
   587  000009                     ___fltol@sign1:
   588                           	callstack 0
   589  000009                     ___xxtofl@sign:
   590                           	callstack 0
   591  000009                     ___fpclassifyf@e:
   592                           	callstack 0
   593  000009                     fputc@fp:
   594                           	callstack 0
   595  000009                     strcpy@d:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x8
   599  000009                     	ds	1
   600  00000A                     ??_atoi:
   601  00000A                     ___fltol@exp1:
   602                           	callstack 0
   603  00000A                     ___xxtofl@exp:
   604                           	callstack 0
   605  00000A                     strncmp@r:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x9
   609  00000A                     	ds	1
   610  00000B                     ??_fputc:
   611  00000B                     ___xxtofl@arg:
   612                           	callstack 0
   613  00000B                     ___fpclassifyf@u:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0xA
   617  00000B                     	ds	2
   618  00000D                     ___fladd@signs:
   619                           	callstack 0
   620  00000D                     _tolower$1050:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0xC
   624  00000D                     	ds	1
   625  00000E                     ___fladd@aexp:
   626                           	callstack 0
   627  00000E                     atoi@neg:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0xD
   631  00000E                     	ds	1
   632  00000F                     ?___flmul:
   633                           	callstack 0
   634  00000F                     ___fladd@bexp:
   635                           	callstack 0
   636  00000F                     ___flmul@b:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0xE
   640  00000F                     	ds	1
   641  000010                     ___fladd@grs:
   642                           	callstack 0
   643  000010                     _atoi$961:
   644                           	callstack 0
   645  000010                     fputs@s:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0xF
   649  000010                     	ds	2
   650  000012                     _atoi$963:
   651                           	callstack 0
   652  000012                     fputs@fp:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x11
   656  000012                     	ds	1
   657  000013                     ___flmul@a:
   658                           	callstack 0
   659                           
   660                           ; 4 bytes @ 0x12
   661  000013                     	ds	1
   662  000014                     _atoi$962:
   663                           	callstack 0
   664  000014                     fputs@c:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0x13
   668  000014                     	ds	1
   669  000015                     atoi@n:
   670                           	callstack 0
   671  000015                     fputs@i:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x14
   675  000015                     	ds	2
   676  000017                     ??___flmul:
   677  000017                     ?_pad:
   678                           	callstack 0
   679  000017                     pad@fp:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x16
   683  000017                     	ds	2
   684  000019                     pad@buf:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x18
   688  000019                     	ds	2
   689  00001B                     ___flmul@sign:
   690                           	callstack 0
   691  00001B                     pad@p:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x1A
   695  00001B                     	ds	1
   696  00001C                     ___flmul@grs:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0x1B
   700  00001C                     	ds	1
   701  00001D                     ??_pad:
   702                           
   703                           ; 1 bytes @ 0x1C
   704  00001D                     	ds	1
   705  00001E                     pad@i:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x1D
   709  00001E                     	ds	2
   710  000020                     ___flmul@aexp:
   711                           	callstack 0
   712  000020                     pad@w:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x1F
   716  000020                     	ds	1
   717  000021                     ___flmul@bexp:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x20
   721  000021                     	ds	1
   722  000022                     ___flmul@prod:
   723                           	callstack 0
   724                           
   725                           ; 4 bytes @ 0x21
   726  000022                     	ds	4
   727  000026                     ___flmul@temp:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x25
   731  000026                     	ds	2
   732  000028                     ?___fldiv:
   733                           	callstack 0
   734  000028                     ?___flsub:
   735                           	callstack 0
   736  000028                     ___flge@ff1:
   737                           	callstack 0
   738  000028                     ___flsub@b:
   739                           	callstack 0
   740  000028                     ___fldiv@b:
   741                           	callstack 0
   742                           
   743                           ; 4 bytes @ 0x27
   744  000028                     	ds	4
   745  00002C                     ___flge@ff2:
   746                           	callstack 0
   747  00002C                     ___flsub@a:
   748                           	callstack 0
   749  00002C                     ___fldiv@a:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x2B
   753  00002C                     	ds	4
   754  000030                     ??___fldiv:
   755  000030                     ??___flge:
   756                           
   757                           ; 1 bytes @ 0x2F
   758  000030                     	ds	4
   759  000034                     ___fldiv@rem:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0x33
   763  000034                     	ds	4
   764  000038                     ___fldiv@sign:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x37
   768  000038                     	ds	1
   769  000039                     ___fldiv@new_exp:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x38
   773  000039                     	ds	2
   774  00003B                     ___fldiv@grs:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x3A
   778  00003B                     	ds	4
   779  00003F                     ___fldiv@bexp:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x3E
   783  00003F                     	ds	1
   784  000040                     ___fldiv@aexp:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x3F
   788  000040                     	ds	1
   789  000041                     ?_floorf:
   790                           	callstack 0
   791  000041                     floorf@x:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x40
   795  000041                     	ds	4
   796  000045                     ??_floorf:
   797                           
   798                           ; 1 bytes @ 0x44
   799  000045                     	ds	6
   800  00004B                     floorf@m:
   801                           	callstack 0
   802                           
   803                           ; 4 bytes @ 0x4A
   804  00004B                     	ds	4
   805  00004F                     floorf@e:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x4E
   809  00004F                     	ds	2
   810  000051                     floorf@u:
   811                           	callstack 0
   812                           
   813                           ; 4 bytes @ 0x50
   814  000051                     	ds	4
   815  000055                     ?_efgtoa:
   816                           	callstack 0
   817  000055                     efgtoa@fp:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x54
   821  000055                     	ds	2
   822  000057                     efgtoa@f:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x56
   826  000057                     	ds	4
   827  00005B                     efgtoa@c:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x5A
   831  00005B                     	ds	1
   832  00005C                     vfprintf@cfmt:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x5B
   836  00005C                     	ds	2
   837  00005E                     ??_main:
   838                           
   839                           ; 1 bytes @ 0x5D
   840  00005E                     	ds	1
   841                           
   842 ;;
   843 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   844 ;;
   845 ;; *************** function _main *****************
   846 ;; Defined at:
   847 ;;		line 33 in file "main.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  2   44[None  ] int 
   854 ;; Registers used:
   855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   861 ;;      Params:         0       0       0       0       0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0       0       0       0       0
   863 ;;      Temps:          1       0       0       0       0       0       0       0       0
   864 ;;      Totals:         1       0       0       0       0       0       0       0       0
   865 ;;Total ram usage:        1 bytes
   866 ;; Hardware stack levels required when called:   13
   867 ;; This function calls:
   868 ;;		_caracter_inicio
   869 ;;		_inicializa_lcd
   870 ;;		_limpa_lcd
   871 ;;		_mostra_resultado
   872 ;; This function is called by:
   873 ;;		Startup code after reset
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text0
   878  003380                     __ptext0:
   879                           	callstack 0
   880  003380                     _main:
   881                           	callstack 18
   882  003380                     
   883                           ;main.c: 38:     PORTD = 0;
   884  003380  0E00               	movlw	0
   885  003382  6E83               	movwf	131,c	;volatile
   886                           
   887                           ;main.c: 39:     TRISD = 0x00;
   888  003384  0E00               	movlw	0
   889  003386  6E95               	movwf	149,c	;volatile
   890                           
   891                           ;main.c: 40:     TRISB = 0;
   892  003388  0E00               	movlw	0
   893  00338A  6E93               	movwf	147,c	;volatile
   894  00338C                     
   895                           ;main.c: 41:     ADON = 1;
   896  00338C  80C2               	bsf	4034,0,c	;volatile
   897                           
   898                           ;main.c: 42:     ADCON1bits.PCFG = 0b1110;
   899  00338E  50C1               	movf	193,w,c	;volatile
   900  003390  0BF0               	andlw	-16
   901  003392  090E               	iorlw	14
   902  003394  6EC1               	movwf	193,c	;volatile
   903  003396                     
   904                           ;main.c: 43:     ADCON2bits.ADFM = 1;
   905  003396  8EC0               	bsf	192,7,c	;volatile
   906                           
   907                           ;main.c: 44:     ADCON2bits.ADCS = 0b100;
   908  003398  50C0               	movf	192,w,c	;volatile
   909  00339A  0BF8               	andlw	-8
   910  00339C  0904               	iorlw	4
   911  00339E  6EC0               	movwf	192,c	;volatile
   912  0033A0                     
   913                           ;main.c: 45:     PIE1bits.ADIE = 1;
   914  0033A0  8C9D               	bsf	157,6,c	;volatile
   915  0033A2                     
   916                           ;main.c: 46:     GIEH = 1;
   917  0033A2  8EF2               	bsf	4082,7,c	;volatile
   918  0033A4                     
   919                           ;main.c: 47:     GIEL = 1;
   920  0033A4  8CF2               	bsf	4082,6,c	;volatile
   921  0033A6                     
   922                           ;main.c: 53:     inicializa_lcd();
   923  0033A6  EC7F  F019         	call	_inicializa_lcd	;wreg free
   924  0033AA                     
   925                           ;main.c: 54:     limpa_lcd();
   926  0033AA  ECE7  F01B         	call	_limpa_lcd	;wreg free
   927                           
   928                           ;main.c: 55:     resultado = 0;
   929  0033AE  0E00               	movlw	0
   930  0033B0  0100               	movlb	0	; () banked
   931  0033B2  6FDA               	movwf	(_resultado+1)& (0+255),b
   932  0033B4  0E00               	movlw	0
   933  0033B6  6FD9               	movwf	_resultado& (0+255),b
   934  0033B8                     l3863:
   935                           
   936                           ;main.c: 61:         caracter_inicio(1,3);
   937  0033B8  0E03               	movlw	3
   938  0033BA  6E05               	movwf	caracter_inicio@coluna^0,c
   939  0033BC  0E01               	movlw	1
   940  0033BE  ECFC  F01A         	call	_caracter_inicio
   941  0033C2                     
   942                           ;main.c: 62:         ADCON0bits.GO = 1;
   943  0033C2  82C2               	bsf	194,1,c	;volatile
   944  0033C4                     l46:
   945  0033C4  B2C2               	btfsc	194,1,c	;volatile
   946  0033C6  EFE7  F019         	goto	u4811
   947  0033CA  EFE9  F019         	goto	u4810
   948  0033CE                     u4811:
   949  0033CE  EFE2  F019         	goto	l46
   950  0033D2                     u4810:
   951  0033D2                     
   952                           ;main.c: 64:         resultado = ADRES;
   953  0033D2  CFC3 F0D9          	movff	4035,_resultado	;volatile
   954  0033D6  CFC4 F0DA          	movff	4036,_resultado+1	;volatile
   955  0033DA                     
   956                           ;main.c: 65:         mostra_resultado(resultado);
   957  0033DA  C0D9  F0C3         	movff	_resultado,mostra_resultado@resultado
   958  0033DE  C0DA  F0C4         	movff	_resultado+1,mostra_resultado@resultado+1
   959  0033E2  ECF3  F018         	call	_mostra_resultado	;wreg free
   960  0033E6                     
   961                           ;main.c: 66:         _delay((unsigned long)((50)*(4000000/4000.0)));
   962  0033E6  0E41               	movlw	65
   963  0033E8  6E5E               	movwf	??_main^0,c
   964  0033EA  0EEE               	movlw	238
   965  0033EC                     u4837:
   966  0033EC  2EE8               	decfsz	wreg,f,c
   967  0033EE  D7FE               	bra	u4837
   968  0033F0  2E5E               	decfsz	??_main^0,f,c
   969  0033F2  D7FC               	bra	u4837
   970  0033F4  D000               	nop2	
   971  0033F6  EFDC  F019         	goto	l3863
   972  0033FA  EF07  F000         	goto	start
   973  0033FE                     __end_of_main:
   974                           	callstack 0
   975                           
   976 ;; *************** function _mostra_resultado *****************
   977 ;; Defined at:
   978 ;;		line 71 in file "main.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  resultado       2   99[BANK0 ] int 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   992 ;;      Params:         0       2       0       0       0       0       0       0       0
   993 ;;      Locals:         0       4       0       0       0       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0       0       0       0       0
   995 ;;      Totals:         0       6       0       0       0       0       0       0       0
   996 ;;Total ram usage:        6 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; Hardware stack levels required when called:   12
   999 ;; This function calls:
  1000 ;;		___fldiv
  1001 ;;		___flmul
  1002 ;;		___xxtofl
  1003 ;;		_printf
  1004 ;; This function is called by:
  1005 ;;		_main
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text1
  1010  0031E6                     __ptext1:
  1011                           	callstack 0
  1012  0031E6                     _mostra_resultado:
  1013                           	callstack 18
  1014  0031E6                     
  1015                           ;main.c: 72:     printf("%.2f Volts",((5.0*resultado)/1023.0));
  1016  0031E6  0E00               	movlw	0
  1017  0031E8  6E13               	movwf	___flmul@a^0,c
  1018  0031EA  0E00               	movlw	0
  1019  0031EC  6E14               	movwf	(___flmul@a+1)^0,c
  1020  0031EE  0EA0               	movlw	160
  1021  0031F0  6E15               	movwf	(___flmul@a+2)^0,c
  1022  0031F2  0E40               	movlw	64
  1023  0031F4  6E16               	movwf	(___flmul@a+3)^0,c
  1024  0031F6  C0C3  F001         	movff	mostra_resultado@resultado,___xxtofl@val
  1025  0031FA  C0C4  F002         	movff	mostra_resultado@resultado+1,___xxtofl@val+1
  1026  0031FE  0E00               	movlw	0
  1027  003200  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1028  003202  0EFF               	movlw	-1
  1029  003204  6E03               	movwf	(___xxtofl@val+2)^0,c
  1030  003206  6E04               	movwf	(___xxtofl@val+3)^0,c
  1031  003208  0E01               	movlw	1
  1032  00320A  ECA5  F013         	call	___xxtofl
  1033  00320E  C001  F00F         	movff	?___xxtofl,___flmul@b
  1034  003212  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1035  003216  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1036  00321A  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1037  00321E  ECBA  F00E         	call	___flmul	;wreg free
  1038  003222  C00F  F028         	movff	?___flmul,___fldiv@b
  1039  003226  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1040  00322A  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1041  00322E  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1042  003232  0E00               	movlw	0
  1043  003234  6E2C               	movwf	___fldiv@a^0,c
  1044  003236  0EC0               	movlw	192
  1045  003238  6E2D               	movwf	(___fldiv@a+1)^0,c
  1046  00323A  0E7F               	movlw	127
  1047  00323C  6E2E               	movwf	(___fldiv@a+2)^0,c
  1048  00323E  0E44               	movlw	68
  1049  003240  6E2F               	movwf	(___fldiv@a+3)^0,c
  1050  003242  ECCF  F010         	call	___fldiv	;wreg free
  1051  003246  C028  F0C5         	movff	?___fldiv,_mostra_resultado$1250
  1052  00324A  C029  F0C6         	movff	?___fldiv+1,_mostra_resultado$1250+1
  1053  00324E  C02A  F0C7         	movff	?___fldiv+2,_mostra_resultado$1250+2
  1054  003252  C02B  F0C8         	movff	?___fldiv+3,_mostra_resultado$1250+3
  1055  003256                     
  1056                           ;main.c: 72:     printf("%.2f Volts",((5.0*resultado)/1023.0));
  1057  003256  0E01               	movlw	low STR_1
  1058  003258  0100               	movlb	0	; () banked
  1059  00325A  6FB9               	movwf	printf@fmt& (0+255),b
  1060  00325C  0E08               	movlw	high STR_1
  1061  00325E  6FBA               	movwf	(printf@fmt+1)& (0+255),b
  1062  003260  C0C5  F0BB         	movff	_mostra_resultado$1250,?_printf+2
  1063  003264  C0C6  F0BC         	movff	_mostra_resultado$1250+1,?_printf+3
  1064  003268  C0C7  F0BD         	movff	_mostra_resultado$1250+2,?_printf+4
  1065  00326C  C0C8  F0BE         	movff	_mostra_resultado$1250+3,?_printf+5
  1066  003270  EC8C  F01B         	call	_printf	;wreg free
  1067  003274  0012               	return		;funcret
  1068  003276                     __end_of_mostra_resultado:
  1069                           	callstack 0
  1070                           
  1071 ;; *************** function _printf *****************
  1072 ;; Defined at:
  1073 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  fmt             2   89[BANK0 ] PTR const unsigned char 
  1076 ;;		 -> STR_1(11), 
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  ap              2   97[BANK0 ] PTR void [1]
  1079 ;;		 -> ?_printf(2), 
  1080 ;;  ret             2    0        int 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  2   89[BANK0 ] int 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1090 ;;      Params:         0       6       0       0       0       0       0       0       0
  1091 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1093 ;;      Totals:         0      10       0       0       0       0       0       0       0
  1094 ;;Total ram usage:       10 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:   11
  1097 ;; This function calls:
  1098 ;;		_vfprintf
  1099 ;; This function is called by:
  1100 ;;		_mostra_resultado
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text2
  1105  003718                     __ptext2:
  1106                           	callstack 0
  1107  003718                     _printf:
  1108                           	callstack 18
  1109  003718  0EBB               	movlw	low (?_printf+2)
  1110  00371A  0100               	movlb	0	; () banked
  1111  00371C  6FC1               	movwf	printf@ap& (0+255),b
  1112  00371E  0E00               	movlw	high (?_printf+2)
  1113  003720  6FC2               	movwf	(printf@ap+1)& (0+255),b
  1114  003722                     
  1115                           ; BSR set to: 0
  1116  003722  0E00               	movlw	0
  1117  003724  6FB3               	movwf	vfprintf@fp& (0+255),b
  1118  003726  0E00               	movlw	0
  1119  003728  6FB4               	movwf	(vfprintf@fp+1)& (0+255),b
  1120  00372A  C0B9  F0B5         	movff	printf@fmt,vfprintf@fmt
  1121  00372E  C0BA  F0B6         	movff	printf@fmt+1,vfprintf@fmt+1
  1122  003732  0EC1               	movlw	low printf@ap
  1123  003734  6FB7               	movwf	vfprintf@ap& (0+255),b
  1124  003736  0E00               	movlw	high printf@ap
  1125  003738  6FB8               	movwf	(vfprintf@ap+1)& (0+255),b
  1126  00373A  ECFF  F019         	call	_vfprintf	;wreg free
  1127  00373E  0012               	return		;funcret
  1128  003740                     __end_of_printf:
  1129                           	callstack 0
  1130                           
  1131 ;; *************** function _vfprintf *****************
  1132 ;; Defined at:
  1133 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  fp              2   83[BANK0 ] PTR struct _IO_FILE
  1136 ;;		 -> NULL(0), 
  1137 ;;  fmt             2   85[BANK0 ] PTR const unsigned char 
  1138 ;;		 -> STR_1(11), 
  1139 ;;  ap              2   87[BANK0 ] PTR PTR void 
  1140 ;;		 -> printf@ap(2), 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  1143 ;;		 -> STR_1(11), 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  2   83[BANK0 ] int 
  1146 ;; Registers used:
  1147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1153 ;;      Params:         0       6       0       0       0       0       0       0       0
  1154 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1156 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1157 ;;Total ram usage:        8 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:   10
  1160 ;; This function calls:
  1161 ;;		_vfpfcnvrt
  1162 ;; This function is called by:
  1163 ;;		_printf
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text3
  1168  0033FE                     __ptext3:
  1169                           	callstack 0
  1170  0033FE                     _vfprintf:
  1171                           	callstack 18
  1172  0033FE                     
  1173                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1174  0033FE  C0B5  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  1175  003402  C0B6  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1176  003406                     
  1177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1178  003406  0E00               	movlw	0
  1179  003408  0100               	movlb	0	; () banked
  1180  00340A  6FD2               	movwf	(_nout+1)& (0+255),b
  1181  00340C  0E00               	movlw	0
  1182  00340E  6FD1               	movwf	_nout& (0+255),b
  1183                           
  1184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1185  003410  EF1D  F01A         	goto	l3749
  1186  003414                     l3747:
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1190  003414  C0B3  F09D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1191  003418  C0B4  F09E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1192  00341C  0E5C               	movlw	low vfprintf@cfmt
  1193  00341E  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  1194  003420  0E00               	movlw	high vfprintf@cfmt
  1195  003422  6FA0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1196  003424  C0B7  F0A1         	movff	vfprintf@ap,vfpfcnvrt@ap
  1197  003428  C0B8  F0A2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1198  00342C  EC6F  F00C         	call	_vfpfcnvrt	;wreg free
  1199  003430  0100               	movlb	0	; () banked
  1200  003432  519D               	movf	?_vfpfcnvrt& (0+255),w,b
  1201  003434  27D1               	addwf	_nout& (0+255),f,b
  1202  003436  519E               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1203  003438  23D2               	addwfc	(_nout+1)& (0+255),f,b
  1204  00343A                     l3749:
  1205                           
  1206                           ; BSR set to: 0
  1207                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1208  00343A  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1209  00343E  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1210  003442                     	if	0	;tblptru may be non-zero
  1211  003442                     	endif
  1212  003442                     	if	0	;tblptru may be non-zero
  1213  003442                     	endif
  1214  003442  0008               	tblrd		*
  1215  003444  50F5               	movf	tablat,w,c
  1216  003446  0900               	iorlw	0
  1217  003448  A4D8               	btfss	status,2,c
  1218  00344A  EF29  F01A         	goto	u4681
  1219  00344E  EF2B  F01A         	goto	u4680
  1220  003452                     u4681:
  1221  003452  EF0A  F01A         	goto	l3747
  1222  003456                     u4680:
  1223  003456                     
  1224                           ; BSR set to: 0
  1225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1226  003456  C0D1  F0B3         	movff	_nout,?_vfprintf
  1227  00345A  C0D2  F0B4         	movff	_nout+1,?_vfprintf+1
  1228  00345E                     
  1229                           ; BSR set to: 0
  1230  00345E  0012               	return		;funcret
  1231  003460                     __end_of_vfprintf:
  1232                           	callstack 0
  1233                           
  1234 ;; *************** function _vfpfcnvrt *****************
  1235 ;; Defined at:
  1236 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  1239 ;;		 -> NULL(0), 
  1240 ;;  fmt             2   63[BANK0 ] PTR PTR unsigned char 
  1241 ;;		 -> vfprintf@cfmt(2), 
  1242 ;;  ap              2   65[BANK0 ] PTR PTR void 
  1243 ;;		 -> printf@ap(2), 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  llu             8    0        unsigned long long 
  1246 ;;  ll              8    0        long long 
  1247 ;;  f               4   75[BANK0 ] long long 
  1248 ;;  ct              3   79[BANK0 ] unsigned char [3]
  1249 ;;  vp              3    0        PTR void 
  1250 ;;  cp              3    0        PTR unsigned char 
  1251 ;;  i               2    0        int 
  1252 ;;  done            2    0        int 
  1253 ;;  c               1   82[BANK0 ] unsigned char 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  2   61[BANK0 ] int 
  1256 ;; Registers used:
  1257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1263 ;;      Params:         0       6       0       0       0       0       0       0       0
  1264 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1265 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1266 ;;      Totals:         0      22       0       0       0       0       0       0       0
  1267 ;;Total ram usage:       22 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    9
  1270 ;; This function calls:
  1271 ;;		_atoi
  1272 ;;		_efgtoa
  1273 ;;		_fputc
  1274 ;;		_isdigit
  1275 ;;		_isupper
  1276 ;;		_strncmp
  1277 ;;		_tolower
  1278 ;; This function is called by:
  1279 ;;		_vfprintf
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text4
  1284  0018DE                     __ptext4:
  1285                           	callstack 0
  1286  0018DE                     _vfpfcnvrt:
  1287                           	callstack 18
  1288  0018DE                     
  1289                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1290  0018DE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1291  0018E2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1292  0018E6  CFDE FFF6          	movff	postinc2,tblptrl
  1293  0018EA  CFDD FFF7          	movff	postdec2,tblptrh
  1294  0018EE                     	if	0	;tblptru may be non-zero
  1295  0018EE                     	endif
  1296  0018EE                     	if	0	;tblptru may be non-zero
  1297  0018EE                     	endif
  1298  0018EE  0008               	tblrd		*
  1299  0018F0  50F5               	movf	tablat,w,c
  1300  0018F2  0A25               	xorlw	37
  1301  0018F4  A4D8               	btfss	status,2,c
  1302  0018F6  EF7F  F00C         	goto	u4541
  1303  0018FA  EF81  F00C         	goto	u4540
  1304  0018FE                     u4541:
  1305  0018FE  EF9E  F00E         	goto	l3735
  1306  001902                     u4540:
  1307  001902                     
  1308                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1309  001902  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1310  001906  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1311  00190A  2ADE               	incf	postinc2,f,c
  1312  00190C  0E00               	movlw	0
  1313  00190E  22DD               	addwfc	postdec2,f,c
  1314  001910                     
  1315                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1316  001910  0E00               	movlw	0
  1317  001912  0100               	movlb	0	; () banked
  1318  001914  6FD4               	movwf	(_width+1)& (0+255),b
  1319  001916  0E00               	movlw	0
  1320  001918  6FD3               	movwf	_width& (0+255),b
  1321  00191A  C0D3  F0D7         	movff	_width,_flags
  1322  00191E  C0D4  F0D8         	movff	_width+1,_flags+1
  1323  001922                     
  1324                           ; BSR set to: 0
  1325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1326  001922  69D5               	setf	_prec& (0+255),b
  1327  001924  69D6               	setf	(_prec+1)& (0+255),b
  1328  001926                     
  1329                           ; BSR set to: 0
  1330                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  1331  001926  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1332  00192A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1333  00192E  CFDE FFF6          	movff	postinc2,tblptrl
  1334  001932  CFDD FFF7          	movff	postdec2,tblptrh
  1335  001936                     	if	0	;tblptru may be non-zero
  1336  001936                     	endif
  1337  001936                     	if	0	;tblptru may be non-zero
  1338  001936                     	endif
  1339  001936  0008               	tblrd		*
  1340  001938  50F5               	movf	tablat,w,c
  1341  00193A  0A2E               	xorlw	46
  1342  00193C  A4D8               	btfss	status,2,c
  1343  00193E  EFA3  F00C         	goto	u4551
  1344  001942  EFA5  F00C         	goto	u4550
  1345  001946                     u4551:
  1346  001946  EF23  F00D         	goto	l3681
  1347  00194A                     u4550:
  1348  00194A                     
  1349                           ; BSR set to: 0
  1350                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  1351  00194A  0E00               	movlw	0
  1352  00194C  6FD6               	movwf	(_prec+1)& (0+255),b
  1353  00194E  0E00               	movlw	0
  1354  001950  6FD5               	movwf	_prec& (0+255),b
  1355  001952                     
  1356                           ; BSR set to: 0
  1357                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  1358  001952  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1359  001956  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1360  00195A  2ADE               	incf	postinc2,f,c
  1361  00195C  0E00               	movlw	0
  1362  00195E  22DD               	addwfc	postdec2,f,c
  1363  001960                     
  1364                           ; BSR set to: 0
  1365                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  1366  001960  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1367  001964  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1368  001968  CFDE FFF6          	movff	postinc2,tblptrl
  1369  00196C  CFDD FFF7          	movff	postdec2,tblptrh
  1370  001970                     	if	0	;tblptru may be non-zero
  1371  001970                     	endif
  1372  001970                     	if	0	;tblptru may be non-zero
  1373  001970                     	endif
  1374  001970  0008               	tblrd		*
  1375  001972  50F5               	movf	tablat,w,c
  1376  001974  0A2A               	xorlw	42
  1377  001976  A4D8               	btfss	status,2,c
  1378  001978  EFC0  F00C         	goto	u4561
  1379  00197C  EFC2  F00C         	goto	u4560
  1380  001980                     u4561:
  1381  001980  EFDF  F00C         	goto	l3671
  1382  001984                     u4560:
  1383  001984                     
  1384                           ; BSR set to: 0
  1385                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  1386  001984  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1387  001988  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1388  00198C  2ADE               	incf	postinc2,f,c
  1389  00198E  0E00               	movlw	0
  1390  001990  22DD               	addwfc	postdec2,f,c
  1391                           
  1392                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1393  001992  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1394  001996  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1395  00199A  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  1396  00199E  0E02               	movlw	2
  1397  0019A0  26DE               	addwf	postinc2,f,c
  1398  0019A2  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  1399  0019A6  0E00               	movlw	0
  1400  0019A8  22DD               	addwfc	postdec2,f,c
  1401  0019AA  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1402  0019AE  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1403  0019B2  CFDE F0D5          	movff	postinc2,_prec
  1404  0019B6  CFDD F0D6          	movff	postdec2,_prec+1
  1405                           
  1406                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  1407  0019BA  EF23  F00D         	goto	l3681
  1408  0019BE                     l3671:
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  1412  0019BE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1413  0019C2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1414  0019C6  CFDE F008          	movff	postinc2,atoi@s
  1415  0019CA  CFDD F009          	movff	postdec2,atoi@s+1
  1416  0019CE  EC7F  F014         	call	_atoi	;wreg free
  1417  0019D2  C008  F0D5         	movff	?_atoi,_prec
  1418  0019D6  C009  F0D6         	movff	?_atoi+1,_prec+1
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1421  0019DA  EFF6  F00C         	goto	l3675
  1422  0019DE                     l3673:
  1423                           
  1424                           ; BSR set to: 0
  1425                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  1426  0019DE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1427  0019E2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1428  0019E6  2ADE               	incf	postinc2,f,c
  1429  0019E8  0E00               	movlw	0
  1430  0019EA  22DD               	addwfc	postdec2,f,c
  1431  0019EC                     l3675:
  1432  0019EC  0ED0               	movlw	208
  1433  0019EE  0100               	movlb	0	; () banked
  1434  0019F0  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  1435  0019F2  0EFF               	movlw	255
  1436  0019F4  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1437  0019F6  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1438  0019FA  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1439  0019FE  CFDE FFF6          	movff	postinc2,tblptrl
  1440  001A02  CFDD FFF7          	movff	postdec2,tblptrh
  1441  001A06                     	if	0	;tblptru may be non-zero
  1442  001A06                     	endif
  1443  001A06                     	if	0	;tblptru may be non-zero
  1444  001A06                     	endif
  1445  001A06  0008               	tblrd		*
  1446  001A08  50F5               	movf	tablat,w,c
  1447  001A0A  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1448  001A0C  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1449  001A0E  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  1450  001A10  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1451  001A12  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1452  001A14  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1453  001A16  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1454  001A18  E10A               	bnz	u4570
  1455  001A1A  0E0A               	movlw	10
  1456  001A1C  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1457  001A1E  A0D8               	btfss	status,0,c
  1458  001A20  EF14  F00D         	goto	u4571
  1459  001A24  EF17  F00D         	goto	u4570
  1460  001A28                     u4571:
  1461  001A28  0E01               	movlw	1
  1462  001A2A  EF18  F00D         	goto	u4580
  1463  001A2E                     u4570:
  1464  001A2E  0E00               	movlw	0
  1465  001A30                     u4580:
  1466  001A30  6FA7               	movwf	_vfpfcnvrt$923& (0+255),b
  1467  001A32  6BA8               	clrf	(_vfpfcnvrt$923+1)& (0+255),b
  1468  001A34                     
  1469                           ; BSR set to: 0
  1470  001A34  51A7               	movf	_vfpfcnvrt$923& (0+255),w,b
  1471  001A36  11A8               	iorwf	(_vfpfcnvrt$923+1)& (0+255),w,b
  1472  001A38  A4D8               	btfss	status,2,c
  1473  001A3A  EF21  F00D         	goto	u4591
  1474  001A3E  EF23  F00D         	goto	u4590
  1475  001A42                     u4591:
  1476  001A42  EFEF  F00C         	goto	l3673
  1477  001A46                     u4590:
  1478  001A46                     l3681:
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  1482  001A46  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1483  001A4A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1484  001A4E  CFDE FFF6          	movff	postinc2,tblptrl
  1485  001A52  CFDD FFF7          	movff	postdec2,tblptrh
  1486  001A56                     	if	0	;tblptru may be non-zero
  1487  001A56                     	endif
  1488  001A56                     	if	0	;tblptru may be non-zero
  1489  001A56                     	endif
  1490  001A56  0008               	tblrd		*
  1491  001A58  50F5               	movf	tablat,w,c
  1492  001A5A  6E07               	movwf	tolower@c^0,c
  1493  001A5C  6A08               	clrf	(tolower@c+1)^0,c
  1494  001A5E  EC30  F01A         	call	_tolower	;wreg free
  1495  001A62  5007               	movf	?_tolower^0,w,c
  1496  001A64  0100               	movlb	0	; () banked
  1497  001A66  6FAF               	movwf	vfpfcnvrt@ct& (0+255),b
  1498  001A68                     
  1499                           ; BSR set to: 0
  1500                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  1501  001A68  51AF               	movf	vfpfcnvrt@ct& (0+255),w,b
  1502  001A6A  B4D8               	btfsc	status,2,c
  1503  001A6C  EF3A  F00D         	goto	u4601
  1504  001A70  EF3C  F00D         	goto	u4600
  1505  001A74                     u4601:
  1506  001A74  EF76  F00D         	goto	l3691
  1507  001A78                     u4600:
  1508  001A78                     
  1509                           ; BSR set to: 0
  1510                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  1511  001A78  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1512  001A7C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1513  001A80  CFDE F0A3          	movff	postinc2,??_vfpfcnvrt
  1514  001A84  CFDD F0A4          	movff	postdec2,??_vfpfcnvrt+1
  1515  001A88  0E01               	movlw	1
  1516  001A8A  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  1517  001A8C  0E00               	movlw	0
  1518  001A8E  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1519  001A90  C0A3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1520  001A94  C0A4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1521  001A98                     	if	0	;tblptru may be non-zero
  1522  001A98                     	endif
  1523  001A98                     	if	0	;tblptru may be non-zero
  1524  001A98                     	endif
  1525  001A98  0008               	tblrd		*
  1526  001A9A  50F5               	movf	tablat,w,c
  1527  001A9C  6E07               	movwf	tolower@c^0,c
  1528  001A9E  6A08               	clrf	(tolower@c+1)^0,c
  1529  001AA0  EC30  F01A         	call	_tolower	;wreg free
  1530  001AA4  5007               	movf	?_tolower^0,w,c
  1531  001AA6  0100               	movlb	0	; () banked
  1532  001AA8  6FB0               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1533  001AAA                     
  1534                           ; BSR set to: 0
  1535                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  1536  001AAA  51B0               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1537  001AAC  B4D8               	btfsc	status,2,c
  1538  001AAE  EF5B  F00D         	goto	u4611
  1539  001AB2  EF5D  F00D         	goto	u4610
  1540  001AB6                     u4611:
  1541  001AB6  EF76  F00D         	goto	l3691
  1542  001ABA                     u4610:
  1543  001ABA                     
  1544                           ; BSR set to: 0
  1545                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  1546  001ABA  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1547  001ABE  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1548  001AC2  CFDE F0A3          	movff	postinc2,??_vfpfcnvrt
  1549  001AC6  CFDD F0A4          	movff	postdec2,??_vfpfcnvrt+1
  1550  001ACA  0E02               	movlw	2
  1551  001ACC  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  1552  001ACE  0E00               	movlw	0
  1553  001AD0  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1554  001AD2  C0A3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1555  001AD6  C0A4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1556  001ADA                     	if	0	;tblptru may be non-zero
  1557  001ADA                     	endif
  1558  001ADA                     	if	0	;tblptru may be non-zero
  1559  001ADA                     	endif
  1560  001ADA  0008               	tblrd		*
  1561  001ADC  50F5               	movf	tablat,w,c
  1562  001ADE  6E07               	movwf	tolower@c^0,c
  1563  001AE0  6A08               	clrf	(tolower@c+1)^0,c
  1564  001AE2  EC30  F01A         	call	_tolower	;wreg free
  1565  001AE6  5007               	movf	?_tolower^0,w,c
  1566  001AE8  0100               	movlb	0	; () banked
  1567  001AEA  6FB1               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1568  001AEC                     l3691:
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  1572  001AEC  0E66               	movlw	102
  1573  001AEE  19AF               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1574  001AF0  A4D8               	btfss	status,2,c
  1575  001AF2  EF7D  F00D         	goto	u4621
  1576  001AF6  EF7F  F00D         	goto	u4620
  1577  001AFA                     u4621:
  1578  001AFA  EFBF  F00D         	goto	l3703
  1579  001AFE                     u4620:
  1580  001AFE                     
  1581                           ; BSR set to: 0
  1582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  1583  001AFE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1584  001B02  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1585  001B06  CFDE FFF6          	movff	postinc2,tblptrl
  1586  001B0A  CFDD FFF7          	movff	postdec2,tblptrh
  1587  001B0E                     	if	0	;tblptru may be non-zero
  1588  001B0E                     	endif
  1589  001B0E                     	if	0	;tblptru may be non-zero
  1590  001B0E                     	endif
  1591  001B0E  0008               	tblrd		*
  1592  001B10  CFF5 F0B2          	movff	tablat,vfpfcnvrt@c
  1593  001B14                     
  1594                           ; BSR set to: 0
  1595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  1596  001B14  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1597  001B18  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1598  001B1C  2ADE               	incf	postinc2,f,c
  1599  001B1E  0E00               	movlw	0
  1600  001B20  22DD               	addwfc	postdec2,f,c
  1601  001B22                     
  1602                           ; BSR set to: 0
  1603                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1604  001B22  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1605  001B26  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1606  001B2A  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  1607  001B2E  0E04               	movlw	4
  1608  001B30  26DE               	addwf	postinc2,f,c
  1609  001B32  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  1610  001B36  0E00               	movlw	0
  1611  001B38  22DD               	addwfc	postdec2,f,c
  1612  001B3A  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1613  001B3E  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1614  001B42  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f
  1615  001B46  CFDE F0AC          	movff	postinc2,vfpfcnvrt@f+1
  1616  001B4A  CFDE F0AD          	movff	postinc2,vfpfcnvrt@f+2
  1617  001B4E  CFDE F0AE          	movff	postinc2,vfpfcnvrt@f+3
  1618  001B52                     
  1619                           ; BSR set to: 0
  1620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  1621  001B52  C09D  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1622  001B56  C09E  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1623  001B5A  C0AB  F057         	movff	vfpfcnvrt@f,efgtoa@f
  1624  001B5E  C0AC  F058         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1625  001B62  C0AD  F059         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1626  001B66  C0AE  F05A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1627  001B6A  C0B2  F05B         	movff	vfpfcnvrt@c,efgtoa@c
  1628  001B6E  EC10  F004         	call	_efgtoa	;wreg free
  1629  001B72  C055  F09D         	movff	?_efgtoa,?_vfpfcnvrt
  1630  001B76  C056  F09E         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1631  001B7A  EFB9  F00E         	goto	l922
  1632  001B7E                     l3703:
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1636  001B7E  0EAF               	movlw	low vfpfcnvrt@ct
  1637  001B80  6E01               	movwf	strncmp@_l^0,c
  1638  001B82  0E00               	movlw	high vfpfcnvrt@ct
  1639  001B84  6E02               	movwf	(strncmp@_l+1)^0,c
  1640  001B86  0E1C               	movlw	low STR_10
  1641  001B88  6E03               	movwf	strncmp@_r^0,c
  1642  001B8A  0E08               	movlw	high STR_10
  1643  001B8C  6E04               	movwf	(strncmp@_r+1)^0,c
  1644  001B8E  0E00               	movlw	0
  1645  001B90  6E06               	movwf	(strncmp@n+1)^0,c
  1646  001B92  0E02               	movlw	2
  1647  001B94  6E05               	movwf	strncmp@n^0,c
  1648  001B96  ECCB  F016         	call	_strncmp	;wreg free
  1649  001B9A  5001               	movf	?_strncmp^0,w,c
  1650  001B9C  1002               	iorwf	(?_strncmp+1)^0,w,c
  1651  001B9E  A4D8               	btfss	status,2,c
  1652  001BA0  EFD4  F00D         	goto	u4631
  1653  001BA4  EFD6  F00D         	goto	u4630
  1654  001BA8                     u4631:
  1655  001BA8  EF66  F00E         	goto	l3719
  1656  001BAC                     u4630:
  1657  001BAC                     
  1658                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1659  001BAC  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1660  001BB0  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1661  001BB4  CFDE F0A3          	movff	postinc2,??_vfpfcnvrt
  1662  001BB8  CFDD F0A4          	movff	postdec2,??_vfpfcnvrt+1
  1663  001BBC  0E01               	movlw	1
  1664  001BBE  0100               	movlb	0	; () banked
  1665  001BC0  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  1666  001BC2  0E00               	movlw	0
  1667  001BC4  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1668  001BC6  C0A3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1669  001BCA  C0A4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1670  001BCE                     	if	0	;tblptru may be non-zero
  1671  001BCE                     	endif
  1672  001BCE                     	if	0	;tblptru may be non-zero
  1673  001BCE                     	endif
  1674  001BCE  0008               	tblrd		*
  1675  001BD0  CFF5 F0B2          	movff	tablat,vfpfcnvrt@c
  1676  001BD4  0EBF               	movlw	191
  1677  001BD6  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  1678  001BD8  0EFF               	movlw	255
  1679  001BDA  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1680  001BDC  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1681  001BE0  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1682  001BE4  CFDE FFF6          	movff	postinc2,tblptrl
  1683  001BE8  CFDD FFF7          	movff	postdec2,tblptrh
  1684  001BEC                     	if	0	;tblptru may be non-zero
  1685  001BEC                     	endif
  1686  001BEC                     	if	0	;tblptru may be non-zero
  1687  001BEC                     	endif
  1688  001BEC  0008               	tblrd		*
  1689  001BEE  50F5               	movf	tablat,w,c
  1690  001BF0  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1691  001BF2  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1692  001BF4  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  1693  001BF6  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1694  001BF8  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1695  001BFA  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1696  001BFC  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1697  001BFE  E10A               	bnz	u4640
  1698  001C00  0E1A               	movlw	26
  1699  001C02  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1700  001C04  A0D8               	btfss	status,0,c
  1701  001C06  EF07  F00E         	goto	u4641
  1702  001C0A  EF0A  F00E         	goto	u4640
  1703  001C0E                     u4641:
  1704  001C0E  0E01               	movlw	1
  1705  001C10  EF0B  F00E         	goto	u4650
  1706  001C14                     u4640:
  1707  001C14  0E00               	movlw	0
  1708  001C16                     u4650:
  1709  001C16  6FA9               	movwf	_vfpfcnvrt$927& (0+255),b
  1710  001C18  6BAA               	clrf	(_vfpfcnvrt$927+1)& (0+255),b
  1711  001C1A                     
  1712                           ; BSR set to: 0
  1713  001C1A  51A9               	movf	_vfpfcnvrt$927& (0+255),w,b
  1714  001C1C  11AA               	iorwf	(_vfpfcnvrt$927+1)& (0+255),w,b
  1715  001C1E  B4D8               	btfsc	status,2,c
  1716  001C20  EF14  F00E         	goto	u4661
  1717  001C24  EF16  F00E         	goto	u4660
  1718  001C28                     u4661:
  1719  001C28  EF30  F00E         	goto	l3713
  1720  001C2C                     u4660:
  1721  001C2C                     
  1722                           ; BSR set to: 0
  1723                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1724  001C2C  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1725  001C30  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1726  001C34  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  1727  001C38  0E04               	movlw	4
  1728  001C3A  26DE               	addwf	postinc2,f,c
  1729  001C3C  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  1730  001C40  0E00               	movlw	0
  1731  001C42  22DD               	addwfc	postdec2,f,c
  1732  001C44  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1733  001C48  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1734  001C4C  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f
  1735  001C50  CFDE F0AC          	movff	postinc2,vfpfcnvrt@f+1
  1736  001C54  CFDE F0AD          	movff	postinc2,vfpfcnvrt@f+2
  1737  001C58  CFDE F0AE          	movff	postinc2,vfpfcnvrt@f+3
  1738                           
  1739                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  1740  001C5C  EF48  F00E         	goto	l929
  1741  001C60                     l3713:
  1742                           
  1743                           ; BSR set to: 0
  1744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1745  001C60  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1746  001C64  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1747  001C68  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  1748  001C6C  0E04               	movlw	4
  1749  001C6E  26DE               	addwf	postinc2,f,c
  1750  001C70  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  1751  001C74  0E00               	movlw	0
  1752  001C76  22DD               	addwfc	postdec2,f,c
  1753  001C78  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1754  001C7C  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1755  001C80  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f
  1756  001C84  CFDE F0AC          	movff	postinc2,vfpfcnvrt@f+1
  1757  001C88  CFDE F0AD          	movff	postinc2,vfpfcnvrt@f+2
  1758  001C8C  CFDE F0AE          	movff	postinc2,vfpfcnvrt@f+3
  1759  001C90                     l929:
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1763  001C90  0E02               	movlw	2
  1764  001C92  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1765  001C96  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1766  001C9A  26DE               	addwf	postinc2,f,c
  1767  001C9C  0E00               	movlw	0
  1768  001C9E  22DD               	addwfc	postdec2,f,c
  1769  001CA0                     
  1770                           ; BSR set to: 0
  1771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 938:             
      +                          return efgtoa(fp, f, c);
  1772  001CA0  C09D  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1773  001CA4  C09E  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1774  001CA8  C0AB  F057         	movff	vfpfcnvrt@f,efgtoa@f
  1775  001CAC  C0AC  F058         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1776  001CB0  C0AD  F059         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1777  001CB4  C0AE  F05A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1778  001CB8  C0B2  F05B         	movff	vfpfcnvrt@c,efgtoa@c
  1779  001CBC  EC10  F004         	call	_efgtoa	;wreg free
  1780  001CC0  C055  F09D         	movff	?_efgtoa,?_vfpfcnvrt
  1781  001CC4  C056  F09E         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1782  001CC8  EFB9  F00E         	goto	l922
  1783  001CCC                     l3719:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  1786  001CCC  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1787  001CD0  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1788  001CD4  CFDE FFF6          	movff	postinc2,tblptrl
  1789  001CD8  CFDD FFF7          	movff	postdec2,tblptrh
  1790  001CDC                     	if	0	;tblptru may be non-zero
  1791  001CDC                     	endif
  1792  001CDC                     	if	0	;tblptru may be non-zero
  1793  001CDC                     	endif
  1794  001CDC  0008               	tblrd		*
  1795  001CDE  50F5               	movf	tablat,w,c
  1796  001CE0  0A25               	xorlw	37
  1797  001CE2  A4D8               	btfss	status,2,c
  1798  001CE4  EF76  F00E         	goto	u4671
  1799  001CE8  EF78  F00E         	goto	u4670
  1800  001CEC                     u4671:
  1801  001CEC  EF90  F00E         	goto	l3729
  1802  001CF0                     u4670:
  1803  001CF0                     
  1804                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  1805  001CF0  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1806  001CF4  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1807  001CF8  2ADE               	incf	postinc2,f,c
  1808  001CFA  0E00               	movlw	0
  1809  001CFC  22DD               	addwfc	postdec2,f,c
  1810  001CFE                     
  1811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  1812  001CFE  0E00               	movlw	0
  1813  001D00  6E08               	movwf	(fputc@c+1)^0,c
  1814  001D02  0E25               	movlw	37
  1815  001D04  6E07               	movwf	fputc@c^0,c
  1816  001D06  C09D  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1817  001D0A  C09E  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1818  001D0E  ECA8  F018         	call	_fputc	;wreg free
  1819  001D12                     l3725:
  1820                           
  1821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  1822  001D12  0E00               	movlw	0
  1823  001D14  0100               	movlb	0	; () banked
  1824  001D16  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1825  001D18  0E01               	movlw	1
  1826  001D1A  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  1827  001D1C  EFB9  F00E         	goto	l922
  1828  001D20                     l3729:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  1831  001D20  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1832  001D24  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1833  001D28  2ADE               	incf	postinc2,f,c
  1834  001D2A  0E00               	movlw	0
  1835  001D2C  22DD               	addwfc	postdec2,f,c
  1836  001D2E                     
  1837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  1838  001D2E  0E00               	movlw	0
  1839  001D30  0100               	movlb	0	; () banked
  1840  001D32  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1841  001D34  0E00               	movlw	0
  1842  001D36  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  1843  001D38  EFB9  F00E         	goto	l922
  1844  001D3C                     l3735:
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  1847  001D3C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1848  001D40  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1849  001D44  CFDE FFF6          	movff	postinc2,tblptrl
  1850  001D48  CFDD FFF7          	movff	postdec2,tblptrh
  1851  001D4C                     	if	0	;tblptru may be non-zero
  1852  001D4C                     	endif
  1853  001D4C                     	if	0	;tblptru may be non-zero
  1854  001D4C                     	endif
  1855  001D4C  0008               	tblrd		*
  1856  001D4E  50F5               	movf	tablat,w,c
  1857  001D50  6E07               	movwf	fputc@c^0,c
  1858  001D52  6A08               	clrf	(fputc@c+1)^0,c
  1859  001D54  C09D  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1860  001D58  C09E  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1861  001D5C  ECA8  F018         	call	_fputc	;wreg free
  1862  001D60                     
  1863                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  1864  001D60  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1865  001D64  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1866  001D68  2ADE               	incf	postinc2,f,c
  1867  001D6A  0E00               	movlw	0
  1868  001D6C  22DD               	addwfc	postdec2,f,c
  1869  001D6E  EF89  F00E         	goto	l3725
  1870  001D72                     l922:
  1871  001D72  0012               	return		;funcret
  1872  001D74                     __end_of_vfpfcnvrt:
  1873                           	callstack 0
  1874                           
  1875 ;; *************** function _strncmp *****************
  1876 ;; Defined at:
  1877 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1880 ;;		 -> vfpfcnvrt@ct(3), 
  1881 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1882 ;;		 -> STR_12(3), 
  1883 ;;  n               2    4[COMRAM] unsigned int 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1886 ;;		 -> STR_12(3), 
  1887 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1888 ;;		 -> vfpfcnvrt@ct(3), 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  2    0[COMRAM] int 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1898 ;;      Params:         6       0       0       0       0       0       0       0       0
  1899 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1900 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1901 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1902 ;;Total ram usage:       11 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    1
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_vfpfcnvrt
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text5
  1913  002D96                     __ptext5:
  1914                           	callstack 0
  1915  002D96                     _strncmp:
  1916                           	callstack 25
  1917  002D96  C001  F008         	movff	strncmp@_l,strncmp@l
  1918  002D9A  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1919  002D9E  C003  F00A         	movff	strncmp@_r,strncmp@r
  1920  002DA2  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1921  002DA6  0605               	decf	strncmp@n^0,f,c
  1922  002DA8  A0D8               	btfss	status,0,c
  1923  002DAA  0606               	decf	(strncmp@n+1)^0,f,c
  1924  002DAC  2805               	incf	strncmp@n^0,w,c
  1925  002DAE  E106               	bnz	u4491
  1926  002DB0  2806               	incf	(strncmp@n+1)^0,w,c
  1927  002DB2  A4D8               	btfss	status,2,c
  1928  002DB4  EFDE  F016         	goto	u4491
  1929  002DB8  EFE0  F016         	goto	u4490
  1930  002DBC                     u4491:
  1931  002DBC  EFED  F016         	goto	l3641
  1932  002DC0                     u4490:
  1933  002DC0  0E00               	movlw	0
  1934  002DC2  6E02               	movwf	(?_strncmp+1)^0,c
  1935  002DC4  0E00               	movlw	0
  1936  002DC6  6E01               	movwf	?_strncmp^0,c
  1937  002DC8  EF35  F017         	goto	l1047
  1938  002DCC                     l3639:
  1939  002DCC  4A08               	infsnz	strncmp@l^0,f,c
  1940  002DCE  2A09               	incf	(strncmp@l+1)^0,f,c
  1941  002DD0  4A0A               	infsnz	strncmp@r^0,f,c
  1942  002DD2  2A0B               	incf	(strncmp@r+1)^0,f,c
  1943  002DD4  0605               	decf	strncmp@n^0,f,c
  1944  002DD6  A0D8               	btfss	status,0,c
  1945  002DD8  0606               	decf	(strncmp@n+1)^0,f,c
  1946  002DDA                     l3641:
  1947  002DDA  C008  FFD9         	movff	strncmp@l,fsr2l
  1948  002DDE  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1949  002DE2  50DF               	movf	indf2,w,c
  1950  002DE4  B4D8               	btfsc	status,2,c
  1951  002DE6  EFF7  F016         	goto	u4501
  1952  002DEA  EFF9  F016         	goto	u4500
  1953  002DEE                     u4501:
  1954  002DEE  EF24  F017         	goto	l3649
  1955  002DF2                     u4500:
  1956  002DF2  C00A  FFF6         	movff	strncmp@r,tblptrl
  1957  002DF6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1958  002DFA                     	if	0	;tblptru may be non-zero
  1959  002DFA                     	endif
  1960  002DFA                     	if	0	;tblptru may be non-zero
  1961  002DFA                     	endif
  1962  002DFA  0008               	tblrd		*
  1963  002DFC  50F5               	movf	tablat,w,c
  1964  002DFE  0900               	iorlw	0
  1965  002E00  B4D8               	btfsc	status,2,c
  1966  002E02  EF05  F017         	goto	u4511
  1967  002E06  EF07  F017         	goto	u4510
  1968  002E0A                     u4511:
  1969  002E0A  EF24  F017         	goto	l3649
  1970  002E0E                     u4510:
  1971  002E0E  5005               	movf	strncmp@n^0,w,c
  1972  002E10  1006               	iorwf	(strncmp@n+1)^0,w,c
  1973  002E12  B4D8               	btfsc	status,2,c
  1974  002E14  EF0E  F017         	goto	u4521
  1975  002E18  EF10  F017         	goto	u4520
  1976  002E1C                     u4521:
  1977  002E1C  EF24  F017         	goto	l3649
  1978  002E20                     u4520:
  1979  002E20  C008  FFD9         	movff	strncmp@l,fsr2l
  1980  002E24  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1981  002E28  50DF               	movf	indf2,w,c
  1982  002E2A  6E07               	movwf	??_strncmp^0,c
  1983  002E2C  C00A  FFF6         	movff	strncmp@r,tblptrl
  1984  002E30  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1985  002E34                     	if	0	;tblptru may be non-zero
  1986  002E34                     	endif
  1987  002E34                     	if	0	;tblptru may be non-zero
  1988  002E34                     	endif
  1989  002E34  0008               	tblrd		*
  1990  002E36  50F5               	movf	tablat,w,c
  1991  002E38  1807               	xorwf	??_strncmp^0,w,c
  1992  002E3A  B4D8               	btfsc	status,2,c
  1993  002E3C  EF22  F017         	goto	u4531
  1994  002E40  EF24  F017         	goto	u4530
  1995  002E44                     u4531:
  1996  002E44  EFE6  F016         	goto	l3639
  1997  002E48                     u4530:
  1998  002E48                     l3649:
  1999  002E48  C008  FFD9         	movff	strncmp@l,fsr2l
  2000  002E4C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2001  002E50  50DF               	movf	indf2,w,c
  2002  002E52  6E07               	movwf	??_strncmp^0,c
  2003  002E54  C00A  FFF6         	movff	strncmp@r,tblptrl
  2004  002E58  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2005  002E5C                     	if	0	;tblptru may be non-zero
  2006  002E5C                     	endif
  2007  002E5C                     	if	0	;tblptru may be non-zero
  2008  002E5C                     	endif
  2009  002E5C  0008               	tblrd		*
  2010  002E5E  50F5               	movf	tablat,w,c
  2011  002E60  5C07               	subwf	??_strncmp^0,w,c
  2012  002E62  6E01               	movwf	?_strncmp^0,c
  2013  002E64  6A02               	clrf	(?_strncmp+1)^0,c
  2014  002E66  A0D8               	btfss	status,0,c
  2015  002E68  0602               	decf	(?_strncmp+1)^0,f,c
  2016  002E6A                     l1047:
  2017  002E6A  0012               	return		;funcret
  2018  002E6C                     __end_of_strncmp:
  2019                           	callstack 0
  2020                           
  2021 ;; *************** function _efgtoa *****************
  2022 ;; Defined at:
  2023 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  2026 ;;		 -> NULL(0), 
  2027 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  2028 ;;  c               1   90[COMRAM] unsigned char 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  u               4   57[BANK0 ] unsigned char 
  2031 ;;  g               4   49[BANK0 ] unsigned char 
  2032 ;;  l               4   43[BANK0 ] unsigned char 
  2033 ;;  h               4   39[BANK0 ] unsigned char 
  2034 ;;  ou              4    5[BANK0 ] unsigned char 
  2035 ;;  n               2   55[BANK0 ] int 
  2036 ;;  e               2   53[BANK0 ] int 
  2037 ;;  i               2   47[BANK0 ] int 
  2038 ;;  w               2   36[BANK0 ] int 
  2039 ;;  p               2   33[BANK0 ] int 
  2040 ;;  sign            2   31[BANK0 ] int 
  2041 ;;  d               2   29[BANK0 ] int 
  2042 ;;  ne              2   27[BANK0 ] int 
  2043 ;;  m               2   25[BANK0 ] int 
  2044 ;;  pp              2   23[BANK0 ] int 
  2045 ;;  t               2   21[BANK0 ] int 
  2046 ;;  mode            1   38[BANK0 ] unsigned char 
  2047 ;;  nmode           1   35[BANK0 ] unsigned char 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  2   84[COMRAM] int 
  2050 ;; Registers used:
  2051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2057 ;;      Params:         7       0       0       0       0       0       0       0       0
  2058 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2059 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2060 ;;      Totals:         7      61       0       0       0       0       0       0       0
  2061 ;;Total ram usage:       68 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:    8
  2064 ;; This function calls:
  2065 ;;		___awdiv
  2066 ;;		___awmod
  2067 ;;		___fladd
  2068 ;;		___fldiv
  2069 ;;		___fleq
  2070 ;;		___flge
  2071 ;;		___flmul
  2072 ;;		___flneg
  2073 ;;		___flsub
  2074 ;;		___fltol
  2075 ;;		___fpclassifyf
  2076 ;;		_floorf
  2077 ;;		_isupper
  2078 ;;		_pad
  2079 ;;		_strcpy
  2080 ;;		_tolower
  2081 ;; This function is called by:
  2082 ;;		_vfpfcnvrt
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text6
  2087  000820                     __ptext6:
  2088                           	callstack 0
  2089  000820                     _efgtoa:
  2090                           	callstack 18
  2091  000820                     
  2092                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  2093  000820  0E00               	movlw	0
  2094  000822  0100               	movlb	0	; () banked
  2095  000824  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2096  000826  0E00               	movlw	0
  2097  000828  6F7F               	movwf	efgtoa@sign& (0+255),b
  2098  00082A                     
  2099                           ; BSR set to: 0
  2100                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  2101  00082A  C057  F091         	movff	efgtoa@f,efgtoa@g
  2102  00082E  C058  F092         	movff	efgtoa@f+1,efgtoa@g+1
  2103  000832  C059  F093         	movff	efgtoa@f+2,efgtoa@g+2
  2104  000836  C05A  F094         	movff	efgtoa@f+3,efgtoa@g+3
  2105  00083A                     
  2106                           ; BSR set to: 0
  2107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  2108  00083A  BF94               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2109  00083C  EF24  F004         	goto	u3900
  2110  000840  EF22  F004         	goto	u3901
  2111  000844                     u3901:
  2112  000844  EF3A  F004         	goto	l3303
  2113  000848                     u3900:
  2114  000848                     
  2115                           ; BSR set to: 0
  2116                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  2117  000848  0E00               	movlw	0
  2118  00084A  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2119  00084C  0E01               	movlw	1
  2120  00084E  6F7F               	movwf	efgtoa@sign& (0+255),b
  2121  000850                     
  2122                           ; BSR set to: 0
  2123                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  2124  000850  C091  F001         	movff	efgtoa@g,___flneg@f1
  2125  000854  C092  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2126  000858  C093  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2127  00085C  C094  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2128  000860  EC39  F01B         	call	___flneg	;wreg free
  2129  000864  C001  F091         	movff	?___flneg,efgtoa@g
  2130  000868  C002  F092         	movff	?___flneg+1,efgtoa@g+1
  2131  00086C  C003  F093         	movff	?___flneg+2,efgtoa@g+2
  2132  000870  C004  F094         	movff	?___flneg+3,efgtoa@g+3
  2133  000874                     l3303:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  2136  000874  0E00               	movlw	0
  2137  000876  0100               	movlb	0	; () banked
  2138  000878  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  2139  00087A  0E00               	movlw	0
  2140  00087C  6F97               	movwf	efgtoa@n& (0+255),b
  2141  00087E                     
  2142                           ; BSR set to: 0
  2143                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  2144  00087E  C0D3  F084         	movff	_width,efgtoa@w
  2145  000882  C0D4  F085         	movff	_width+1,efgtoa@w+1
  2146  000886                     
  2147                           ; BSR set to: 0
  2148                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  2149  000886  517F               	movf	efgtoa@sign& (0+255),w,b
  2150  000888  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2151  00088A  A4D8               	btfss	status,2,c
  2152  00088C  EF4A  F004         	goto	u3911
  2153  000890  EF4C  F004         	goto	u3910
  2154  000894                     u3911:
  2155  000894  EF53  F004         	goto	l3311
  2156  000898                     u3910:
  2157  000898                     
  2158                           ; BSR set to: 0
  2159  000898  A5D7               	btfss	_flags& (0+255),2,b
  2160  00089A  EF51  F004         	goto	u3921
  2161  00089E  EF53  F004         	goto	u3920
  2162  0008A2                     u3921:
  2163  0008A2  EF6D  F004         	goto	l3323
  2164  0008A6                     u3920:
  2165  0008A6                     l3311:
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  2169  0008A6  517F               	movf	efgtoa@sign& (0+255),w,b
  2170  0008A8  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2171  0008AA  A4D8               	btfss	status,2,c
  2172  0008AC  EF5A  F004         	goto	u3931
  2173  0008B0  EF5C  F004         	goto	u3930
  2174  0008B4                     u3931:
  2175  0008B4  EF62  F004         	goto	l3315
  2176  0008B8                     u3930:
  2177  0008B8                     
  2178                           ; BSR set to: 0
  2179  0008B8  0E00               	movlw	0
  2180  0008BA  6F6A               	movwf	(_efgtoa$897+1)& (0+255),b
  2181  0008BC  0E2B               	movlw	43
  2182  0008BE  6F69               	movwf	_efgtoa$897& (0+255),b
  2183  0008C0  EF66  F004         	goto	l3317
  2184  0008C4                     l3315:
  2185                           
  2186                           ; BSR set to: 0
  2187  0008C4  0E00               	movlw	0
  2188  0008C6  6F6A               	movwf	(_efgtoa$897+1)& (0+255),b
  2189  0008C8  0E2D               	movlw	45
  2190  0008CA  6F69               	movwf	_efgtoa$897& (0+255),b
  2191  0008CC                     l3317:
  2192                           
  2193                           ; BSR set to: 0
  2194  0008CC  C069  F100         	movff	_efgtoa$897,_dbuf
  2195  0008D0                     
  2196                           ; BSR set to: 0
  2197                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  2198  0008D0  4B97               	infsnz	efgtoa@n& (0+255),f,b
  2199  0008D2  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  2200  0008D4                     
  2201                           ; BSR set to: 0
  2202                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  2203  0008D4  0784               	decf	efgtoa@w& (0+255),f,b
  2204  0008D6  A0D8               	btfss	status,0,c
  2205  0008D8  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  2206  0008DA                     l3323:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2210  0008DA  C091  F001         	movff	efgtoa@g,___fpclassifyf@x
  2211  0008DE  C092  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2212  0008E2  C093  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2213  0008E6  C094  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2214  0008EA  EC4C  F016         	call	___fpclassifyf	;wreg free
  2215  0008EE  0401               	decf	?___fpclassifyf^0,w,c
  2216  0008F0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2217  0008F2  A4D8               	btfss	status,2,c
  2218  0008F4  EF7E  F004         	goto	u3941
  2219  0008F8  EF80  F004         	goto	u3940
  2220  0008FC                     u3941:
  2221  0008FC  EFD7  F004         	goto	l3341
  2222  000900                     u3940:
  2223  000900  0EBF               	movlw	191
  2224  000902  0100               	movlb	0	; () banked
  2225  000904  6F60               	movwf	??_efgtoa& (0+255),b
  2226  000906  0EFF               	movlw	255
  2227  000908  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2228  00090A  505B               	movf	efgtoa@c^0,w,c
  2229  00090C  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2230  00090E  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2231  000910  5160               	movf	??_efgtoa& (0+255),w,b
  2232  000912  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2233  000914  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2234  000916  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2235  000918  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2236  00091A  E10A               	bnz	u3950
  2237  00091C  0E1A               	movlw	26
  2238  00091E  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2239  000920  A0D8               	btfss	status,0,c
  2240  000922  EF95  F004         	goto	u3951
  2241  000926  EF98  F004         	goto	u3950
  2242  00092A                     u3951:
  2243  00092A  0E01               	movlw	1
  2244  00092C  EF99  F004         	goto	u3960
  2245  000930                     u3950:
  2246  000930  0E00               	movlw	0
  2247  000932                     u3960:
  2248  000932  6F6B               	movwf	_efgtoa$898& (0+255),b
  2249  000934  6B6C               	clrf	(_efgtoa$898+1)& (0+255),b
  2250  000936                     
  2251                           ; BSR set to: 0
  2252  000936  516B               	movf	_efgtoa$898& (0+255),w,b
  2253  000938  116C               	iorwf	(_efgtoa$898+1)& (0+255),w,b
  2254  00093A  B4D8               	btfsc	status,2,c
  2255  00093C  EFA2  F004         	goto	u3971
  2256  000940  EFA4  F004         	goto	u3970
  2257  000944                     u3971:
  2258  000944  EFB2  F004         	goto	l3333
  2259  000948                     u3970:
  2260  000948                     
  2261                           ; BSR set to: 0
  2262                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  2263  000948  0E00               	movlw	low _dbuf
  2264  00094A  2597               	addwf	efgtoa@n& (0+255),w,b
  2265  00094C  6E01               	movwf	strcpy@dest^0,c
  2266  00094E  0E01               	movlw	high _dbuf
  2267  000950  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2268  000952  6E02               	movwf	(strcpy@dest+1)^0,c
  2269  000954  0E0C               	movlw	low STR_2
  2270  000956  6E03               	movwf	strcpy@src^0,c
  2271  000958  0E08               	movlw	high STR_2
  2272  00095A  6E04               	movwf	(strcpy@src+1)^0,c
  2273  00095C  EC60  F01A         	call	_strcpy	;wreg free
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  2276  000960  EFBE  F004         	goto	l3335
  2277  000964                     l3333:
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  2281  000964  0E00               	movlw	low _dbuf
  2282  000966  2597               	addwf	efgtoa@n& (0+255),w,b
  2283  000968  6E01               	movwf	strcpy@dest^0,c
  2284  00096A  0E01               	movlw	high _dbuf
  2285  00096C  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2286  00096E  6E02               	movwf	(strcpy@dest+1)^0,c
  2287  000970  0E14               	movlw	low STR_3
  2288  000972  6E03               	movwf	strcpy@src^0,c
  2289  000974  0E08               	movlw	high STR_3
  2290  000976  6E04               	movwf	(strcpy@src+1)^0,c
  2291  000978  EC60  F01A         	call	_strcpy	;wreg free
  2292  00097C                     l3335:
  2293                           
  2294                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2295  00097C  0100               	movlb	0	; () banked
  2296  00097E  0EFD               	movlw	253
  2297  000980  2784               	addwf	efgtoa@w& (0+255),f,b
  2298  000982  0EFF               	movlw	255
  2299  000984  2385               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2300  000986                     
  2301                           ; BSR set to: 0
  2302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2303  000986  C055  F017         	movff	efgtoa@fp,pad@fp
  2304  00098A  C056  F018         	movff	efgtoa@fp+1,pad@fp+1
  2305  00098E  0E00               	movlw	low _dbuf
  2306  000990  6E19               	movwf	pad@buf^0,c
  2307  000992  0E01               	movlw	high _dbuf
  2308  000994  6E1A               	movwf	(pad@buf+1)^0,c
  2309  000996  C084  F01B         	movff	efgtoa@w,pad@p
  2310  00099A  C085  F01C         	movff	efgtoa@w+1,pad@p+1
  2311  00099E  EC36  F017         	call	_pad	;wreg free
  2312  0009A2  C017  F055         	movff	?_pad,?_efgtoa
  2313  0009A6  C018  F056         	movff	?_pad+1,?_efgtoa+1
  2314  0009AA  EF0E  F00A         	goto	l832
  2315  0009AE                     l3341:
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2318  0009AE  C091  F001         	movff	efgtoa@g,___fpclassifyf@x
  2319  0009B2  C092  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2320  0009B6  C093  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2321  0009BA  C094  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2322  0009BE  EC4C  F016         	call	___fpclassifyf	;wreg free
  2323  0009C2  5001               	movf	?___fpclassifyf^0,w,c
  2324  0009C4  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2325  0009C6  A4D8               	btfss	status,2,c
  2326  0009C8  EFE8  F004         	goto	u3981
  2327  0009CC  EFEA  F004         	goto	u3980
  2328  0009D0                     u3981:
  2329  0009D0  EF41  F005         	goto	l3359
  2330  0009D4                     u3980:
  2331  0009D4  0EBF               	movlw	191
  2332  0009D6  0100               	movlb	0	; () banked
  2333  0009D8  6F60               	movwf	??_efgtoa& (0+255),b
  2334  0009DA  0EFF               	movlw	255
  2335  0009DC  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2336  0009DE  505B               	movf	efgtoa@c^0,w,c
  2337  0009E0  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2338  0009E2  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2339  0009E4  5160               	movf	??_efgtoa& (0+255),w,b
  2340  0009E6  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2341  0009E8  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2342  0009EA  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2343  0009EC  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2344  0009EE  E10A               	bnz	u3990
  2345  0009F0  0E1A               	movlw	26
  2346  0009F2  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2347  0009F4  A0D8               	btfss	status,0,c
  2348  0009F6  EFFF  F004         	goto	u3991
  2349  0009FA  EF02  F005         	goto	u3990
  2350  0009FE                     u3991:
  2351  0009FE  0E01               	movlw	1
  2352  000A00  EF03  F005         	goto	u4000
  2353  000A04                     u3990:
  2354  000A04  0E00               	movlw	0
  2355  000A06                     u4000:
  2356  000A06  6F6D               	movwf	_efgtoa$903& (0+255),b
  2357  000A08  6B6E               	clrf	(_efgtoa$903+1)& (0+255),b
  2358  000A0A                     
  2359                           ; BSR set to: 0
  2360  000A0A  516D               	movf	_efgtoa$903& (0+255),w,b
  2361  000A0C  116E               	iorwf	(_efgtoa$903+1)& (0+255),w,b
  2362  000A0E  B4D8               	btfsc	status,2,c
  2363  000A10  EF0C  F005         	goto	u4011
  2364  000A14  EF0E  F005         	goto	u4010
  2365  000A18                     u4011:
  2366  000A18  EF1C  F005         	goto	l3351
  2367  000A1C                     u4010:
  2368  000A1C                     
  2369                           ; BSR set to: 0
  2370                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  2371  000A1C  0E00               	movlw	low _dbuf
  2372  000A1E  2597               	addwf	efgtoa@n& (0+255),w,b
  2373  000A20  6E01               	movwf	strcpy@dest^0,c
  2374  000A22  0E01               	movlw	high _dbuf
  2375  000A24  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2376  000A26  6E02               	movwf	(strcpy@dest+1)^0,c
  2377  000A28  0E10               	movlw	low STR_6
  2378  000A2A  6E03               	movwf	strcpy@src^0,c
  2379  000A2C  0E08               	movlw	high STR_6
  2380  000A2E  6E04               	movwf	(strcpy@src+1)^0,c
  2381  000A30  EC60  F01A         	call	_strcpy	;wreg free
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  2384  000A34  EF28  F005         	goto	l3353
  2385  000A38                     l3351:
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  2389  000A38  0E00               	movlw	low _dbuf
  2390  000A3A  2597               	addwf	efgtoa@n& (0+255),w,b
  2391  000A3C  6E01               	movwf	strcpy@dest^0,c
  2392  000A3E  0E01               	movlw	high _dbuf
  2393  000A40  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2394  000A42  6E02               	movwf	(strcpy@dest+1)^0,c
  2395  000A44  0E18               	movlw	low STR_7
  2396  000A46  6E03               	movwf	strcpy@src^0,c
  2397  000A48  0E08               	movlw	high STR_7
  2398  000A4A  6E04               	movwf	(strcpy@src+1)^0,c
  2399  000A4C  EC60  F01A         	call	_strcpy	;wreg free
  2400  000A50                     l3353:
  2401                           
  2402                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 358:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2403  000A50  0100               	movlb	0	; () banked
  2404  000A52  0EFD               	movlw	253
  2405  000A54  2784               	addwf	efgtoa@w& (0+255),f,b
  2406  000A56  0EFF               	movlw	255
  2407  000A58  2385               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2408  000A5A                     
  2409                           ; BSR set to: 0
  2410                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 359:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2411  000A5A  C055  F017         	movff	efgtoa@fp,pad@fp
  2412  000A5E  C056  F018         	movff	efgtoa@fp+1,pad@fp+1
  2413  000A62  0E00               	movlw	low _dbuf
  2414  000A64  6E19               	movwf	pad@buf^0,c
  2415  000A66  0E01               	movlw	high _dbuf
  2416  000A68  6E1A               	movwf	(pad@buf+1)^0,c
  2417  000A6A  C084  F01B         	movff	efgtoa@w,pad@p
  2418  000A6E  C085  F01C         	movff	efgtoa@w+1,pad@p+1
  2419  000A72  EC36  F017         	call	_pad	;wreg free
  2420  000A76  C017  F055         	movff	?_pad,?_efgtoa
  2421  000A7A  C018  F056         	movff	?_pad+1,?_efgtoa+1
  2422  000A7E  EF0E  F00A         	goto	l832
  2423  000A82                     l3359:
  2424                           
  2425                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  2426  000A82  0E00               	movlw	0
  2427  000A84  0100               	movlb	0	; () banked
  2428  000A86  6F99               	movwf	efgtoa@u& (0+255),b
  2429  000A88  0E00               	movlw	0
  2430  000A8A  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  2431  000A8C  0E80               	movlw	128
  2432  000A8E  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  2433  000A90  0E3F               	movlw	63
  2434  000A92  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  2435                           
  2436                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  2437  000A94  0E00               	movlw	0
  2438  000A96  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  2439  000A98  0E00               	movlw	0
  2440  000A9A  6F95               	movwf	efgtoa@e& (0+255),b
  2441  000A9C                     
  2442                           ; BSR set to: 0
  2443                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  2444  000A9C  C091  F001         	movff	efgtoa@g,___fleq@ff1
  2445  000AA0  C092  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2446  000AA4  C093  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2447  000AA8  C094  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2448  000AAC  0E00               	movlw	0
  2449  000AAE  6E05               	movwf	___fleq@ff2^0,c
  2450  000AB0  0E00               	movlw	0
  2451  000AB2  6E06               	movwf	(___fleq@ff2+1)^0,c
  2452  000AB4  0E00               	movlw	0
  2453  000AB6  6E07               	movwf	(___fleq@ff2+2)^0,c
  2454  000AB8  0E00               	movlw	0
  2455  000ABA  6E08               	movwf	(___fleq@ff2+3)^0,c
  2456  000ABC  EC53  F018         	call	___fleq	;wreg free
  2457  000AC0  B0D8               	btfsc	status,0,c
  2458  000AC2  EF65  F005         	goto	u4021
  2459  000AC6  EF67  F005         	goto	u4020
  2460  000ACA                     u4021:
  2461  000ACA  EFEA  F005         	goto	l3377
  2462  000ACE                     u4020:
  2463  000ACE  EF86  F005         	goto	l3369
  2464  000AD2                     l3365:
  2465                           
  2466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  2467  000AD2  C099  F00F         	movff	efgtoa@u,___flmul@b
  2468  000AD6  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  2469  000ADA  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  2470  000ADE  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  2471  000AE2  0E00               	movlw	0
  2472  000AE4  6E13               	movwf	___flmul@a^0,c
  2473  000AE6  0E00               	movlw	0
  2474  000AE8  6E14               	movwf	(___flmul@a+1)^0,c
  2475  000AEA  0E20               	movlw	32
  2476  000AEC  6E15               	movwf	(___flmul@a+2)^0,c
  2477  000AEE  0E41               	movlw	65
  2478  000AF0  6E16               	movwf	(___flmul@a+3)^0,c
  2479  000AF2  ECBA  F00E         	call	___flmul	;wreg free
  2480  000AF6  C00F  F099         	movff	?___flmul,efgtoa@u
  2481  000AFA  C010  F09A         	movff	?___flmul+1,efgtoa@u+1
  2482  000AFE  C011  F09B         	movff	?___flmul+2,efgtoa@u+2
  2483  000B02  C012  F09C         	movff	?___flmul+3,efgtoa@u+3
  2484  000B06                     
  2485                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  2486  000B06  0100               	movlb	0	; () banked
  2487  000B08  4B95               	infsnz	efgtoa@e& (0+255),f,b
  2488  000B0A  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  2489  000B0C                     l3369:
  2490                           
  2491                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  2492  000B0C  C091  F028         	movff	efgtoa@g,___flge@ff1
  2493  000B10  C092  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2494  000B14  C093  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2495  000B18  C094  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2496  000B1C  0E00               	movlw	0
  2497  000B1E  6E13               	movwf	___flmul@a^0,c
  2498  000B20  0E00               	movlw	0
  2499  000B22  6E14               	movwf	(___flmul@a+1)^0,c
  2500  000B24  0E20               	movlw	32
  2501  000B26  6E15               	movwf	(___flmul@a+2)^0,c
  2502  000B28  0E41               	movlw	65
  2503  000B2A  6E16               	movwf	(___flmul@a+3)^0,c
  2504  000B2C  C099  F00F         	movff	efgtoa@u,___flmul@b
  2505  000B30  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  2506  000B34  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  2507  000B38  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  2508  000B3C  ECBA  F00E         	call	___flmul	;wreg free
  2509  000B40  C00F  F02C         	movff	?___flmul,___flge@ff2
  2510  000B44  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2511  000B48  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2512  000B4C  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2513  000B50  ECCA  F015         	call	___flge	;wreg free
  2514  000B54  B0D8               	btfsc	status,0,c
  2515  000B56  EFAF  F005         	goto	u4031
  2516  000B5A  EFB1  F005         	goto	u4030
  2517  000B5E                     u4031:
  2518  000B5E  EF69  F005         	goto	l3365
  2519  000B62                     u4030:
  2520  000B62  EFD1  F005         	goto	l3375
  2521  000B66                     l3371:
  2522                           
  2523                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  2524  000B66  C099  F028         	movff	efgtoa@u,___fldiv@b
  2525  000B6A  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2526  000B6E  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2527  000B72  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2528  000B76  0E00               	movlw	0
  2529  000B78  6E2C               	movwf	___fldiv@a^0,c
  2530  000B7A  0E00               	movlw	0
  2531  000B7C  6E2D               	movwf	(___fldiv@a+1)^0,c
  2532  000B7E  0E20               	movlw	32
  2533  000B80  6E2E               	movwf	(___fldiv@a+2)^0,c
  2534  000B82  0E41               	movlw	65
  2535  000B84  6E2F               	movwf	(___fldiv@a+3)^0,c
  2536  000B86  ECCF  F010         	call	___fldiv	;wreg free
  2537  000B8A  C028  F099         	movff	?___fldiv,efgtoa@u
  2538  000B8E  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  2539  000B92  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  2540  000B96  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  2541  000B9A                     
  2542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  2543  000B9A  0100               	movlb	0	; () banked
  2544  000B9C  0795               	decf	efgtoa@e& (0+255),f,b
  2545  000B9E  A0D8               	btfss	status,0,c
  2546  000BA0  0796               	decf	(efgtoa@e+1)& (0+255),f,b
  2547  000BA2                     l3375:
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  2550  000BA2  C091  F028         	movff	efgtoa@g,___flge@ff1
  2551  000BA6  C092  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2552  000BAA  C093  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2553  000BAE  C094  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2554  000BB2  C099  F02C         	movff	efgtoa@u,___flge@ff2
  2555  000BB6  C09A  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2556  000BBA  C09B  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2557  000BBE  C09C  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2558  000BC2  ECCA  F015         	call	___flge	;wreg free
  2559  000BC6  A0D8               	btfss	status,0,c
  2560  000BC8  EFE8  F005         	goto	u4041
  2561  000BCC  EFEA  F005         	goto	u4040
  2562  000BD0                     u4041:
  2563  000BD0  EFB3  F005         	goto	l3371
  2564  000BD4                     u4040:
  2565  000BD4                     l3377:
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  2568  000BD4  C05B  F007         	movff	efgtoa@c,tolower@c
  2569  000BD8  6A08               	clrf	(tolower@c+1)^0,c
  2570  000BDA  EC30  F01A         	call	_tolower	;wreg free
  2571  000BDE  5007               	movf	?_tolower^0,w,c
  2572  000BE0  0100               	movlb	0	; () banked
  2573  000BE2  6F86               	movwf	efgtoa@mode& (0+255),b
  2574  000BE4                     
  2575                           ; BSR set to: 0
  2576                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  2577  000BE4  C086  F083         	movff	efgtoa@mode,efgtoa@nmode
  2578  000BE8                     
  2579                           ; BSR set to: 0
  2580                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  2581  000BE8  0E67               	movlw	103
  2582  000BEA  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2583  000BEC  A4D8               	btfss	status,2,c
  2584  000BEE  EFFB  F005         	goto	u4051
  2585  000BF2  EFFD  F005         	goto	u4050
  2586  000BF6                     u4051:
  2587  000BF6  EF23  F006         	goto	l3391
  2588  000BFA                     u4050:
  2589  000BFA                     
  2590                           ; BSR set to: 0
  2591                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  2592  000BFA  51D5               	movf	_prec& (0+255),w,b
  2593  000BFC  11D6               	iorwf	(_prec+1)& (0+255),w,b
  2594  000BFE  A4D8               	btfss	status,2,c
  2595  000C00  EF04  F006         	goto	u4061
  2596  000C04  EF06  F006         	goto	u4060
  2597  000C08                     u4061:
  2598  000C08  EF0A  F006         	goto	l3387
  2599  000C0C                     u4060:
  2600  000C0C                     
  2601                           ; BSR set to: 0
  2602                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  2603  000C0C  0E00               	movlw	0
  2604  000C0E  6FD6               	movwf	(_prec+1)& (0+255),b
  2605  000C10  0E01               	movlw	1
  2606  000C12  6FD5               	movwf	_prec& (0+255),b
  2607  000C14                     l3387:
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  2611  000C14  BFD6               	btfsc	(_prec+1)& (0+255),7,b
  2612  000C16  EF17  F006         	goto	u4070
  2613  000C1A  51D6               	movf	(_prec+1)& (0+255),w,b
  2614  000C1C  E106               	bnz	u4071
  2615  000C1E  05D5               	decf	_prec& (0+255),w,b
  2616  000C20  B0D8               	btfsc	status,0,c
  2617  000C22  EF15  F006         	goto	u4071
  2618  000C26  EF17  F006         	goto	u4070
  2619  000C2A                     u4071:
  2620  000C2A  EF1D  F006         	goto	l850
  2621  000C2E                     u4070:
  2622  000C2E                     l3389:
  2623                           
  2624                           ; BSR set to: 0
  2625  000C2E  0E00               	movlw	0
  2626  000C30  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  2627  000C32  0E06               	movlw	6
  2628  000C34  6F81               	movwf	efgtoa@p& (0+255),b
  2629  000C36  EF2C  F006         	goto	l3397
  2630  000C3A                     l850:
  2631                           
  2632                           ; BSR set to: 0
  2633  000C3A  C0D5  F081         	movff	_prec,efgtoa@p
  2634  000C3E  C0D6  F082         	movff	_prec+1,efgtoa@p+1
  2635  000C42  EF2C  F006         	goto	l3397
  2636  000C46                     l3391:
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  2640  000C46  BFD6               	btfsc	(_prec+1)& (0+255),7,b
  2641  000C48  EF28  F006         	goto	u4081
  2642  000C4C  EF2A  F006         	goto	u4080
  2643  000C50                     u4081:
  2644  000C50  EF17  F006         	goto	l3389
  2645  000C54                     u4080:
  2646  000C54  EF1D  F006         	goto	l850
  2647  000C58                     l3397:
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  2651  000C58  0E67               	movlw	103
  2652  000C5A  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2653  000C5C  A4D8               	btfss	status,2,c
  2654  000C5E  EF33  F006         	goto	u4091
  2655  000C62  EF35  F006         	goto	u4090
  2656  000C66                     u4091:
  2657  000C66  EF64  F006         	goto	l3407
  2658  000C6A                     u4090:
  2659  000C6A                     
  2660                           ; BSR set to: 0
  2661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2662  000C6A  AF96               	btfss	(efgtoa@e+1)& (0+255),7,b
  2663  000C6C  EF43  F006         	goto	u4100
  2664  000C70  0EFC               	movlw	252
  2665  000C72  5D95               	subwf	efgtoa@e& (0+255),w,b
  2666  000C74  0EFF               	movlw	255
  2667  000C76  5996               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2668  000C78  A0D8               	btfss	status,0,c
  2669  000C7A  EF41  F006         	goto	u4101
  2670  000C7E  EF43  F006         	goto	u4100
  2671  000C82                     u4101:
  2672  000C82  EF62  F006         	goto	l3405
  2673  000C86                     u4100:
  2674  000C86                     
  2675                           ; BSR set to: 0
  2676  000C86  0EFF               	movlw	255
  2677  000C88  6F60               	movwf	??_efgtoa& (0+255),b
  2678  000C8A  0EFF               	movlw	255
  2679  000C8C  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2680  000C8E  C081  F062         	movff	efgtoa@p,??_efgtoa+2
  2681  000C92  C082  F063         	movff	efgtoa@p+1,??_efgtoa+3
  2682  000C96  5160               	movf	??_efgtoa& (0+255),w,b
  2683  000C98  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2684  000C9A  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2685  000C9C  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2686  000C9E  5195               	movf	efgtoa@e& (0+255),w,b
  2687  000CA0  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2688  000CA2  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2689  000CA4  0A80               	xorlw	128
  2690  000CA6  6F64               	movwf	(??_efgtoa+4)& (0+255),b
  2691  000CA8  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  2692  000CAA  0A80               	xorlw	128
  2693  000CAC  5964               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2694  000CAE  A0D8               	btfss	status,0,c
  2695  000CB0  EF5C  F006         	goto	u4111
  2696  000CB4  EF5E  F006         	goto	u4110
  2697  000CB8                     u4111:
  2698  000CB8  EF62  F006         	goto	l3405
  2699  000CBC                     u4110:
  2700  000CBC                     
  2701                           ; BSR set to: 0
  2702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  2703  000CBC  0E66               	movlw	102
  2704  000CBE  6F83               	movwf	efgtoa@nmode& (0+255),b
  2705                           
  2706                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  2707  000CC0  EF64  F006         	goto	l3407
  2708  000CC4                     l3405:
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  2712  000CC4  0E65               	movlw	101
  2713  000CC6  6F83               	movwf	efgtoa@nmode& (0+255),b
  2714  000CC8                     l3407:
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  2718  000CC8  C081  F079         	movff	efgtoa@p,efgtoa@m
  2719  000CCC  C082  F07A         	movff	efgtoa@p+1,efgtoa@m+1
  2720  000CD0                     
  2721                           ; BSR set to: 0
  2722                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2723  000CD0  0E67               	movlw	103
  2724  000CD2  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2725  000CD4  A4D8               	btfss	status,2,c
  2726  000CD6  EF6F  F006         	goto	u4121
  2727  000CDA  EF71  F006         	goto	u4120
  2728  000CDE                     u4121:
  2729  000CDE  EF81  F006         	goto	l3415
  2730  000CE2                     u4120:
  2731  000CE2                     
  2732                           ; BSR set to: 0
  2733  000CE2  0E66               	movlw	102
  2734  000CE4  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  2735  000CE6  A4D8               	btfss	status,2,c
  2736  000CE8  EF78  F006         	goto	u4131
  2737  000CEC  EF7A  F006         	goto	u4130
  2738  000CF0                     u4131:
  2739  000CF0  EF83  F006         	goto	l3417
  2740  000CF4                     u4130:
  2741  000CF4                     
  2742                           ; BSR set to: 0
  2743  000CF4  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2744  000CF6  EF81  F006         	goto	u4140
  2745  000CFA  EF7F  F006         	goto	u4141
  2746  000CFE                     u4141:
  2747  000CFE  EF83  F006         	goto	l3417
  2748  000D02                     u4140:
  2749  000D02                     l3415:
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  2753  000D02  4B79               	infsnz	efgtoa@m& (0+255),f,b
  2754  000D04  2B7A               	incf	(efgtoa@m+1)& (0+255),f,b
  2755  000D06                     l3417:
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  2759  000D06  0E66               	movlw	102
  2760  000D08  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  2761  000D0A  A4D8               	btfss	status,2,c
  2762  000D0C  EF8A  F006         	goto	u4151
  2763  000D10  EF8C  F006         	goto	u4150
  2764  000D14                     u4151:
  2765  000D14  EFAC  F006         	goto	l3427
  2766  000D18                     u4150:
  2767  000D18                     
  2768                           ; BSR set to: 0
  2769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  2770  000D18  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2771  000D1A  EF93  F006         	goto	u4160
  2772  000D1E  EF91  F006         	goto	u4161
  2773  000D22                     u4161:
  2774  000D22  EF9F  F006         	goto	l3423
  2775  000D26                     u4160:
  2776  000D26                     
  2777                           ; BSR set to: 0
  2778                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  2779  000D26  0E00               	movlw	0
  2780  000D28  6F99               	movwf	efgtoa@u& (0+255),b
  2781  000D2A  0E00               	movlw	0
  2782  000D2C  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  2783  000D2E  0E80               	movlw	128
  2784  000D30  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  2785  000D32  0E3F               	movlw	63
  2786  000D34  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  2787                           
  2788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  2789  000D36  0E00               	movlw	0
  2790  000D38  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  2791  000D3A  0E00               	movlw	0
  2792  000D3C  6F95               	movwf	efgtoa@e& (0+255),b
  2793  000D3E                     l3423:
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  2797  000D3E  0E67               	movlw	103
  2798  000D40  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2799  000D42  B4D8               	btfsc	status,2,c
  2800  000D44  EFA6  F006         	goto	u4171
  2801  000D48  EFA8  F006         	goto	u4170
  2802  000D4C                     u4171:
  2803  000D4C  EFAC  F006         	goto	l3427
  2804  000D50                     u4170:
  2805  000D50                     
  2806                           ; BSR set to: 0
  2807                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  2808  000D50  5195               	movf	efgtoa@e& (0+255),w,b
  2809  000D52  2779               	addwf	efgtoa@m& (0+255),f,b
  2810  000D54  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  2811  000D56  237A               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2812  000D58                     l3427:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  2816  000D58  0E00               	movlw	0
  2817  000D5A  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  2818  000D5C  0E00               	movlw	0
  2819  000D5E  6F8F               	movwf	efgtoa@i& (0+255),b
  2820  000D60                     
  2821                           ; BSR set to: 0
  2822                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  2823  000D60  C091  F087         	movff	efgtoa@g,efgtoa@h
  2824  000D64  C092  F088         	movff	efgtoa@g+1,efgtoa@h+1
  2825  000D68  C093  F089         	movff	efgtoa@g+2,efgtoa@h+2
  2826  000D6C  C094  F08A         	movff	efgtoa@g+3,efgtoa@h+3
  2827  000D70                     
  2828                           ; BSR set to: 0
  2829                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  2830  000D70  C099  F065         	movff	efgtoa@u,efgtoa@ou
  2831  000D74  C09A  F066         	movff	efgtoa@u+1,efgtoa@ou+1
  2832  000D78  C09B  F067         	movff	efgtoa@u+2,efgtoa@ou+2
  2833  000D7C  C09C  F068         	movff	efgtoa@u+3,efgtoa@ou+3
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  2836  000D80  EF3D  F007         	goto	l3441
  2837  000D84                     l3433:
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  2841  000D84  C087  F028         	movff	efgtoa@h,___fldiv@b
  2842  000D88  C088  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2843  000D8C  C089  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2844  000D90  C08A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2845  000D94  C099  F02C         	movff	efgtoa@u,___fldiv@a
  2846  000D98  C09A  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2847  000D9C  C09B  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2848  000DA0  C09C  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2849  000DA4  ECCF  F010         	call	___fldiv	;wreg free
  2850  000DA8  C028  F041         	movff	?___fldiv,floorf@x
  2851  000DAC  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2852  000DB0  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2853  000DB4  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2854  000DB8  EC9C  F012         	call	_floorf	;wreg free
  2855  000DBC  C041  F08B         	movff	?_floorf,efgtoa@l
  2856  000DC0  C042  F08C         	movff	?_floorf+1,efgtoa@l+1
  2857  000DC4  C043  F08D         	movff	?_floorf+2,efgtoa@l+2
  2858  000DC8  C044  F08E         	movff	?_floorf+3,efgtoa@l+3
  2859                           
  2860                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  2861  000DCC  C08B  F001         	movff	efgtoa@l,___fltol@f1
  2862  000DD0  C08C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2863  000DD4  C08D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2864  000DD8  C08E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2865  000DDC  EC47  F015         	call	___fltol	;wreg free
  2866  000DE0  C001  F07D         	movff	?___fltol,efgtoa@d
  2867  000DE4  C002  F07E         	movff	?___fltol+1,efgtoa@d+1
  2868  000DE8                     
  2869                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  2870  000DE8  C087  F028         	movff	efgtoa@h,___flsub@b
  2871  000DEC  C088  F029         	movff	efgtoa@h+1,___flsub@b+1
  2872  000DF0  C089  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2873  000DF4  C08A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2874  000DF8  C099  F013         	movff	efgtoa@u,___flmul@a
  2875  000DFC  C09A  F014         	movff	efgtoa@u+1,___flmul@a+1
  2876  000E00  C09B  F015         	movff	efgtoa@u+2,___flmul@a+2
  2877  000E04  C09C  F016         	movff	efgtoa@u+3,___flmul@a+3
  2878  000E08  C08B  F00F         	movff	efgtoa@l,___flmul@b
  2879  000E0C  C08C  F010         	movff	efgtoa@l+1,___flmul@b+1
  2880  000E10  C08D  F011         	movff	efgtoa@l+2,___flmul@b+2
  2881  000E14  C08E  F012         	movff	efgtoa@l+3,___flmul@b+3
  2882  000E18  ECBA  F00E         	call	___flmul	;wreg free
  2883  000E1C  C00F  F02C         	movff	?___flmul,___flsub@a
  2884  000E20  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2885  000E24  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2886  000E28  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2887  000E2C  ECB7  F01A         	call	___flsub	;wreg free
  2888  000E30  C028  F087         	movff	?___flsub,efgtoa@h
  2889  000E34  C029  F088         	movff	?___flsub+1,efgtoa@h+1
  2890  000E38  C02A  F089         	movff	?___flsub+2,efgtoa@h+2
  2891  000E3C  C02B  F08A         	movff	?___flsub+3,efgtoa@h+3
  2892  000E40                     
  2893                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  2894  000E40  C099  F028         	movff	efgtoa@u,___fldiv@b
  2895  000E44  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2896  000E48  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2897  000E4C  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2898  000E50  0E00               	movlw	0
  2899  000E52  6E2C               	movwf	___fldiv@a^0,c
  2900  000E54  0E00               	movlw	0
  2901  000E56  6E2D               	movwf	(___fldiv@a+1)^0,c
  2902  000E58  0E20               	movlw	32
  2903  000E5A  6E2E               	movwf	(___fldiv@a+2)^0,c
  2904  000E5C  0E41               	movlw	65
  2905  000E5E  6E2F               	movwf	(___fldiv@a+3)^0,c
  2906  000E60  ECCF  F010         	call	___fldiv	;wreg free
  2907  000E64  C028  F099         	movff	?___fldiv,efgtoa@u
  2908  000E68  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  2909  000E6C  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  2910  000E70  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  2911  000E74                     
  2912                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  2913  000E74  0100               	movlb	0	; () banked
  2914  000E76  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  2915  000E78  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  2916  000E7A                     l3441:
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  2920  000E7A  5179               	movf	efgtoa@m& (0+255),w,b
  2921  000E7C  5D8F               	subwf	efgtoa@i& (0+255),w,b
  2922  000E7E  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  2923  000E80  0A80               	xorlw	128
  2924  000E82  6F60               	movwf	??_efgtoa& (0+255),b
  2925  000E84  517A               	movf	(efgtoa@m+1)& (0+255),w,b
  2926  000E86  0A80               	xorlw	128
  2927  000E88  5960               	subwfb	??_efgtoa& (0+255),w,b
  2928  000E8A  A0D8               	btfss	status,0,c
  2929  000E8C  EF4A  F007         	goto	u4181
  2930  000E90  EF4C  F007         	goto	u4180
  2931  000E94                     u4181:
  2932  000E94  EFC2  F006         	goto	l3433
  2933  000E98                     u4180:
  2934  000E98                     
  2935                           ; BSR set to: 0
  2936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  2937  000E98  C099  F00F         	movff	efgtoa@u,___flmul@b
  2938  000E9C  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  2939  000EA0  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  2940  000EA4  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  2941  000EA8  0E00               	movlw	0
  2942  000EAA  6E13               	movwf	___flmul@a^0,c
  2943  000EAC  0E00               	movlw	0
  2944  000EAE  6E14               	movwf	(___flmul@a+1)^0,c
  2945  000EB0  0EA0               	movlw	160
  2946  000EB2  6E15               	movwf	(___flmul@a+2)^0,c
  2947  000EB4  0E40               	movlw	64
  2948  000EB6  6E16               	movwf	(___flmul@a+3)^0,c
  2949  000EB8  ECBA  F00E         	call	___flmul	;wreg free
  2950  000EBC  C00F  F08B         	movff	?___flmul,efgtoa@l
  2951  000EC0  C010  F08C         	movff	?___flmul+1,efgtoa@l+1
  2952  000EC4  C011  F08D         	movff	?___flmul+2,efgtoa@l+2
  2953  000EC8  C012  F08E         	movff	?___flmul+3,efgtoa@l+3
  2954  000ECC                     
  2955                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  2956  000ECC  C087  F028         	movff	efgtoa@h,___flge@ff1
  2957  000ED0  C088  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2958  000ED4  C089  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2959  000ED8  C08A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2960  000EDC  C08B  F02C         	movff	efgtoa@l,___flge@ff2
  2961  000EE0  C08C  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2962  000EE4  C08D  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2963  000EE8  C08E  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2964  000EEC  ECCA  F015         	call	___flge	;wreg free
  2965  000EF0  B0D8               	btfsc	status,0,c
  2966  000EF2  EF7D  F007         	goto	u4191
  2967  000EF6  EF7F  F007         	goto	u4190
  2968  000EFA                     u4191:
  2969  000EFA  EF8A  F007         	goto	l3449
  2970  000EFE                     u4190:
  2971  000EFE                     
  2972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  2973  000EFE  0E00               	movlw	0
  2974  000F00  0100               	movlb	0	; () banked
  2975  000F02  6F8B               	movwf	efgtoa@l& (0+255),b
  2976  000F04  0E00               	movlw	0
  2977  000F06  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  2978  000F08  0E00               	movlw	0
  2979  000F0A  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  2980  000F0C  0E00               	movlw	0
  2981  000F0E  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  2982                           
  2983                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  2984  000F10  EFB3  F007         	goto	l3455
  2985  000F14                     l3449:
  2986                           
  2987                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  2988  000F14  C087  F001         	movff	efgtoa@h,___fleq@ff1
  2989  000F18  C088  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2990  000F1C  C089  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2991  000F20  C08A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2992  000F24  C08B  F005         	movff	efgtoa@l,___fleq@ff2
  2993  000F28  C08C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2994  000F2C  C08D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2995  000F30  C08E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2996  000F34  EC53  F018         	call	___fleq	;wreg free
  2997  000F38  A0D8               	btfss	status,0,c
  2998  000F3A  EFA1  F007         	goto	u4201
  2999  000F3E  EFA3  F007         	goto	u4200
  3000  000F42                     u4201:
  3001  000F42  EFB3  F007         	goto	l3455
  3002  000F46                     u4200:
  3003  000F46  0100               	movlb	0	; () banked
  3004  000F48  B17D               	btfsc	efgtoa@d& (0+255),0,b
  3005  000F4A  EFA9  F007         	goto	u4211
  3006  000F4E  EFAB  F007         	goto	u4210
  3007  000F52                     u4211:
  3008  000F52  EFB3  F007         	goto	l3455
  3009  000F56                     u4210:
  3010  000F56                     
  3011                           ; BSR set to: 0
  3012                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  3013  000F56  0E00               	movlw	0
  3014  000F58  6F8B               	movwf	efgtoa@l& (0+255),b
  3015  000F5A  0E00               	movlw	0
  3016  000F5C  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  3017  000F5E  0E00               	movlw	0
  3018  000F60  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  3019  000F62  0E00               	movlw	0
  3020  000F64  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  3021  000F66                     l3455:
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  3024  000F66  C091  F001         	movff	efgtoa@g,___fladd@b
  3025  000F6A  C092  F002         	movff	efgtoa@g+1,___fladd@b+1
  3026  000F6E  C093  F003         	movff	efgtoa@g+2,___fladd@b+2
  3027  000F72  C094  F004         	movff	efgtoa@g+3,___fladd@b+3
  3028  000F76  C08B  F005         	movff	efgtoa@l,___fladd@a
  3029  000F7A  C08C  F006         	movff	efgtoa@l+1,___fladd@a+1
  3030  000F7E  C08D  F007         	movff	efgtoa@l+2,___fladd@a+2
  3031  000F82  C08E  F008         	movff	efgtoa@l+3,___fladd@a+3
  3032  000F86  EC0F  F00A         	call	___fladd	;wreg free
  3033  000F8A  C001  F087         	movff	?___fladd,efgtoa@h
  3034  000F8E  C002  F088         	movff	?___fladd+1,efgtoa@h+1
  3035  000F92  C003  F089         	movff	?___fladd+2,efgtoa@h+2
  3036  000F96  C004  F08A         	movff	?___fladd+3,efgtoa@h+3
  3037  000F9A                     
  3038                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  3039  000F9A  C065  F099         	movff	efgtoa@ou,efgtoa@u
  3040  000F9E  C066  F09A         	movff	efgtoa@ou+1,efgtoa@u+1
  3041  000FA2  C067  F09B         	movff	efgtoa@ou+2,efgtoa@u+2
  3042  000FA6  C068  F09C         	movff	efgtoa@ou+3,efgtoa@u+3
  3043  000FAA                     
  3044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3045  000FAA  0E65               	movlw	101
  3046  000FAC  0100               	movlb	0	; () banked
  3047  000FAE  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3048  000FB0  B4D8               	btfsc	status,2,c
  3049  000FB2  EFDD  F007         	goto	u4221
  3050  000FB6  EFDF  F007         	goto	u4220
  3051  000FBA                     u4221:
  3052  000FBA  EFE5  F007         	goto	l3463
  3053  000FBE                     u4220:
  3054  000FBE                     
  3055                           ; BSR set to: 0
  3056  000FBE  C095  F07B         	movff	efgtoa@e,efgtoa@ne
  3057  000FC2  C096  F07C         	movff	efgtoa@e+1,efgtoa@ne+1
  3058  000FC6  EFE9  F007         	goto	l876
  3059  000FCA                     l3463:
  3060                           
  3061                           ; BSR set to: 0
  3062  000FCA  0E00               	movlw	0
  3063  000FCC  6F7C               	movwf	(efgtoa@ne+1)& (0+255),b
  3064  000FCE  0E00               	movlw	0
  3065  000FD0  6F7B               	movwf	efgtoa@ne& (0+255),b
  3066  000FD2                     l876:
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  3070  000FD2  0E00               	movlw	0
  3071  000FD4  6F78               	movwf	(efgtoa@pp+1)& (0+255),b
  3072  000FD6  0E00               	movlw	0
  3073  000FD8  6F77               	movwf	efgtoa@pp& (0+255),b
  3074                           
  3075                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  3076  000FDA  0E00               	movlw	0
  3077  000FDC  6F76               	movwf	(efgtoa@t+1)& (0+255),b
  3078  000FDE  0E00               	movlw	0
  3079  000FE0  6F75               	movwf	efgtoa@t& (0+255),b
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  3082  000FE2  0E00               	movlw	0
  3083  000FE4  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3084  000FE6  0E00               	movlw	0
  3085  000FE8  6F8F               	movwf	efgtoa@i& (0+255),b
  3086                           
  3087                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3088  000FEA  EFE4  F008         	goto	l3513
  3089  000FEE                     l3465:
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  3093  000FEE  C087  F028         	movff	efgtoa@h,___fldiv@b
  3094  000FF2  C088  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3095  000FF6  C089  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3096  000FFA  C08A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3097  000FFE  C099  F02C         	movff	efgtoa@u,___fldiv@a
  3098  001002  C09A  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3099  001006  C09B  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3100  00100A  C09C  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3101  00100E  ECCF  F010         	call	___fldiv	;wreg free
  3102  001012  C028  F041         	movff	?___fldiv,floorf@x
  3103  001016  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3104  00101A  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3105  00101E  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3106  001022  EC9C  F012         	call	_floorf	;wreg free
  3107  001026  C041  F08B         	movff	?_floorf,efgtoa@l
  3108  00102A  C042  F08C         	movff	?_floorf+1,efgtoa@l+1
  3109  00102E  C043  F08D         	movff	?_floorf+2,efgtoa@l+2
  3110  001032  C044  F08E         	movff	?_floorf+3,efgtoa@l+3
  3111                           
  3112                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  3113  001036  C08B  F001         	movff	efgtoa@l,___fltol@f1
  3114  00103A  C08C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3115  00103E  C08D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3116  001042  C08E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3117  001046  EC47  F015         	call	___fltol	;wreg free
  3118  00104A  C001  F07D         	movff	?___fltol,efgtoa@d
  3119  00104E  C002  F07E         	movff	?___fltol+1,efgtoa@d+1
  3120  001052                     
  3121                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3122  001052  0100               	movlb	0	; () banked
  3123  001054  B9D7               	btfsc	_flags& (0+255),4,b
  3124  001056  EF2F  F008         	goto	u4231
  3125  00105A  EF31  F008         	goto	u4230
  3126  00105E                     u4231:
  3127  00105E  EF4E  F008         	goto	l3477
  3128  001062                     u4230:
  3129  001062                     
  3130                           ; BSR set to: 0
  3131  001062  517D               	movf	efgtoa@d& (0+255),w,b
  3132  001064  117E               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3133  001066  A4D8               	btfss	status,2,c
  3134  001068  EF38  F008         	goto	u4241
  3135  00106C  EF3A  F008         	goto	u4240
  3136  001070                     u4241:
  3137  001070  EF4E  F008         	goto	l3477
  3138  001074                     u4240:
  3139  001074                     
  3140                           ; BSR set to: 0
  3141  001074  0E67               	movlw	103
  3142  001076  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3143  001078  A4D8               	btfss	status,2,c
  3144  00107A  EF41  F008         	goto	u4251
  3145  00107E  EF43  F008         	goto	u4250
  3146  001082                     u4251:
  3147  001082  EF4E  F008         	goto	l3477
  3148  001086                     u4250:
  3149  001086                     
  3150                           ; BSR set to: 0
  3151  001086  BF7C               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3152  001088  EF4A  F008         	goto	u4260
  3153  00108C  EF48  F008         	goto	u4261
  3154  001090                     u4261:
  3155  001090  EF4E  F008         	goto	l3477
  3156  001094                     u4260:
  3157  001094                     
  3158                           ; BSR set to: 0
  3159                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  3160  001094  4B75               	infsnz	efgtoa@t& (0+255),f,b
  3161  001096  2B76               	incf	(efgtoa@t+1)& (0+255),f,b
  3162                           
  3163                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  3164  001098  EF98  F008         	goto	l3505
  3165  00109C                     l3477:
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  3169  00109C  5177               	movf	efgtoa@pp& (0+255),w,b
  3170  00109E  1178               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3171  0010A0  A4D8               	btfss	status,2,c
  3172  0010A2  EF55  F008         	goto	u4271
  3173  0010A6  EF57  F008         	goto	u4270
  3174  0010AA                     u4271:
  3175  0010AA  EF81  F008         	goto	l3497
  3176  0010AE                     u4270:
  3177  0010AE                     
  3178                           ; BSR set to: 0
  3179  0010AE  BF7C               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3180  0010B0  EF5E  F008         	goto	u4280
  3181  0010B4  EF5C  F008         	goto	u4281
  3182  0010B8                     u4281:
  3183  0010B8  EF81  F008         	goto	l3497
  3184  0010BC                     u4280:
  3185  0010BC                     
  3186                           ; BSR set to: 0
  3187                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  3188  0010BC  0E00               	movlw	low _dbuf
  3189  0010BE  2597               	addwf	efgtoa@n& (0+255),w,b
  3190  0010C0  6ED9               	movwf	fsr2l,c
  3191  0010C2  0E01               	movlw	high _dbuf
  3192  0010C4  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3193  0010C6  6EDA               	movwf	fsr2h,c
  3194  0010C8  0E2E               	movlw	46
  3195  0010CA  6EDF               	movwf	indf2,c
  3196  0010CC                     
  3197                           ; BSR set to: 0
  3198  0010CC  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3199  0010CE  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3200  0010D0                     
  3201                           ; BSR set to: 0
  3202                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  3203  0010D0  0784               	decf	efgtoa@w& (0+255),f,b
  3204  0010D2  A0D8               	btfss	status,0,c
  3205  0010D4  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3206  0010D6                     
  3207                           ; BSR set to: 0
  3208                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  3209  0010D6  0E00               	movlw	0
  3210  0010D8  6F78               	movwf	(efgtoa@pp+1)& (0+255),b
  3211  0010DA  0E01               	movlw	1
  3212  0010DC  6F77               	movwf	efgtoa@pp& (0+255),b
  3213  0010DE  EF81  F008         	goto	l3497
  3214  0010E2                     l3489:
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  3218  0010E2  0E00               	movlw	low _dbuf
  3219  0010E4  2597               	addwf	efgtoa@n& (0+255),w,b
  3220  0010E6  6ED9               	movwf	fsr2l,c
  3221  0010E8  0E01               	movlw	high _dbuf
  3222  0010EA  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3223  0010EC  6EDA               	movwf	fsr2h,c
  3224  0010EE  0E30               	movlw	48
  3225  0010F0  6EDF               	movwf	indf2,c
  3226  0010F2                     
  3227                           ; BSR set to: 0
  3228  0010F2  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3229  0010F4  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3230  0010F6                     
  3231                           ; BSR set to: 0
  3232                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  3233  0010F6  0784               	decf	efgtoa@w& (0+255),f,b
  3234  0010F8  A0D8               	btfss	status,0,c
  3235  0010FA  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3236  0010FC                     
  3237                           ; BSR set to: 0
  3238                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  3239  0010FC  0775               	decf	efgtoa@t& (0+255),f,b
  3240  0010FE  A0D8               	btfss	status,0,c
  3241  001100  0776               	decf	(efgtoa@t+1)& (0+255),f,b
  3242  001102                     l3497:
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  3246  001102  5175               	movf	efgtoa@t& (0+255),w,b
  3247  001104  1176               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3248  001106  A4D8               	btfss	status,2,c
  3249  001108  EF88  F008         	goto	u4291
  3250  00110C  EF8A  F008         	goto	u4290
  3251  001110                     u4291:
  3252  001110  EF71  F008         	goto	l3489
  3253  001114                     u4290:
  3254  001114                     
  3255                           ; BSR set to: 0
  3256                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  3257  001114  0E00               	movlw	low _dbuf
  3258  001116  2597               	addwf	efgtoa@n& (0+255),w,b
  3259  001118  6ED9               	movwf	fsr2l,c
  3260  00111A  0E01               	movlw	high _dbuf
  3261  00111C  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3262  00111E  6EDA               	movwf	fsr2h,c
  3263  001120  517D               	movf	efgtoa@d& (0+255),w,b
  3264  001122  0F30               	addlw	48
  3265  001124  6EDF               	movwf	indf2,c
  3266  001126                     
  3267                           ; BSR set to: 0
  3268  001126  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3269  001128  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3270  00112A                     
  3271                           ; BSR set to: 0
  3272                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  3273  00112A  0784               	decf	efgtoa@w& (0+255),f,b
  3274  00112C  A0D8               	btfss	status,0,c
  3275  00112E  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3276  001130                     l3505:
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  3280  001130  C087  F028         	movff	efgtoa@h,___flsub@b
  3281  001134  C088  F029         	movff	efgtoa@h+1,___flsub@b+1
  3282  001138  C089  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3283  00113C  C08A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3284  001140  C099  F013         	movff	efgtoa@u,___flmul@a
  3285  001144  C09A  F014         	movff	efgtoa@u+1,___flmul@a+1
  3286  001148  C09B  F015         	movff	efgtoa@u+2,___flmul@a+2
  3287  00114C  C09C  F016         	movff	efgtoa@u+3,___flmul@a+3
  3288  001150  C08B  F00F         	movff	efgtoa@l,___flmul@b
  3289  001154  C08C  F010         	movff	efgtoa@l+1,___flmul@b+1
  3290  001158  C08D  F011         	movff	efgtoa@l+2,___flmul@b+2
  3291  00115C  C08E  F012         	movff	efgtoa@l+3,___flmul@b+3
  3292  001160  ECBA  F00E         	call	___flmul	;wreg free
  3293  001164  C00F  F02C         	movff	?___flmul,___flsub@a
  3294  001168  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3295  00116C  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3296  001170  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3297  001174  ECB7  F01A         	call	___flsub	;wreg free
  3298  001178  C028  F087         	movff	?___flsub,efgtoa@h
  3299  00117C  C029  F088         	movff	?___flsub+1,efgtoa@h+1
  3300  001180  C02A  F089         	movff	?___flsub+2,efgtoa@h+2
  3301  001184  C02B  F08A         	movff	?___flsub+3,efgtoa@h+3
  3302  001188                     
  3303                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  3304  001188  C099  F028         	movff	efgtoa@u,___fldiv@b
  3305  00118C  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3306  001190  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3307  001194  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3308  001198  0E00               	movlw	0
  3309  00119A  6E2C               	movwf	___fldiv@a^0,c
  3310  00119C  0E00               	movlw	0
  3311  00119E  6E2D               	movwf	(___fldiv@a+1)^0,c
  3312  0011A0  0E20               	movlw	32
  3313  0011A2  6E2E               	movwf	(___fldiv@a+2)^0,c
  3314  0011A4  0E41               	movlw	65
  3315  0011A6  6E2F               	movwf	(___fldiv@a+3)^0,c
  3316  0011A8  ECCF  F010         	call	___fldiv	;wreg free
  3317  0011AC  C028  F099         	movff	?___fldiv,efgtoa@u
  3318  0011B0  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3319  0011B4  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3320  0011B8  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3321  0011BC                     
  3322                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  3323  0011BC  0100               	movlb	0	; () banked
  3324  0011BE  077B               	decf	efgtoa@ne& (0+255),f,b
  3325  0011C0  A0D8               	btfss	status,0,c
  3326  0011C2  077C               	decf	(efgtoa@ne+1)& (0+255),f,b
  3327  0011C4                     
  3328                           ; BSR set to: 0
  3329                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  3330  0011C4  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  3331  0011C6  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  3332  0011C8                     l3513:
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3336  0011C8  5179               	movf	efgtoa@m& (0+255),w,b
  3337  0011CA  5D8F               	subwf	efgtoa@i& (0+255),w,b
  3338  0011CC  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  3339  0011CE  0A80               	xorlw	128
  3340  0011D0  6F60               	movwf	??_efgtoa& (0+255),b
  3341  0011D2  517A               	movf	(efgtoa@m+1)& (0+255),w,b
  3342  0011D4  0A80               	xorlw	128
  3343  0011D6  5960               	subwfb	??_efgtoa& (0+255),w,b
  3344  0011D8  B0D8               	btfsc	status,0,c
  3345  0011DA  EFF1  F008         	goto	u4301
  3346  0011DE  EFF3  F008         	goto	u4300
  3347  0011E2                     u4301:
  3348  0011E2  EF01  F009         	goto	l3517
  3349  0011E6                     u4300:
  3350  0011E6                     
  3351                           ; BSR set to: 0
  3352  0011E6  BF98               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3353  0011E8  EFFF  F008         	goto	u4311
  3354  0011EC  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  3355  0011EE  E109               	bnz	u4310
  3356  0011F0  0E4B               	movlw	75
  3357  0011F2  5D97               	subwf	efgtoa@n& (0+255),w,b
  3358  0011F4  A0D8               	btfss	status,0,c
  3359  0011F6  EFFF  F008         	goto	u4311
  3360  0011FA  EF01  F009         	goto	u4310
  3361  0011FE                     u4311:
  3362  0011FE  EFF7  F007         	goto	l3465
  3363  001202                     u4310:
  3364  001202                     l3517:
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3368  001202  5177               	movf	efgtoa@pp& (0+255),w,b
  3369  001204  1178               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3370  001206  A4D8               	btfss	status,2,c
  3371  001208  EF08  F009         	goto	u4321
  3372  00120C  EF0A  F009         	goto	u4320
  3373  001210                     u4321:
  3374  001210  EF1B  F009         	goto	l3525
  3375  001214                     u4320:
  3376  001214                     
  3377                           ; BSR set to: 0
  3378  001214  A9D7               	btfss	_flags& (0+255),4,b
  3379  001216  EF0F  F009         	goto	u4331
  3380  00121A  EF11  F009         	goto	u4330
  3381  00121E                     u4331:
  3382  00121E  EF1B  F009         	goto	l3525
  3383  001222                     u4330:
  3384  001222                     
  3385                           ; BSR set to: 0
  3386                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  3387  001222  0E00               	movlw	low _dbuf
  3388  001224  2597               	addwf	efgtoa@n& (0+255),w,b
  3389  001226  6ED9               	movwf	fsr2l,c
  3390  001228  0E01               	movlw	high _dbuf
  3391  00122A  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3392  00122C  6EDA               	movwf	fsr2h,c
  3393  00122E  0E2E               	movlw	46
  3394  001230  6EDF               	movwf	indf2,c
  3395  001232                     
  3396                           ; BSR set to: 0
  3397  001232  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3398  001234  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3399  001236                     l3525:
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  3403  001236  0E00               	movlw	low _dbuf
  3404  001238  2597               	addwf	efgtoa@n& (0+255),w,b
  3405  00123A  6ED9               	movwf	fsr2l,c
  3406  00123C  0E01               	movlw	high _dbuf
  3407  00123E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3408  001240  6EDA               	movwf	fsr2h,c
  3409  001242  0E00               	movlw	0
  3410  001244  6EDF               	movwf	indf2,c
  3411  001246                     
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  3414  001246  0E65               	movlw	101
  3415  001248  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3416  00124A  A4D8               	btfss	status,2,c
  3417  00124C  EF2A  F009         	goto	u4341
  3418  001250  EF2C  F009         	goto	u4340
  3419  001254                     u4341:
  3420  001254  EFFC  F009         	goto	l3587
  3421  001258                     u4340:
  3422  001258                     
  3423                           ; BSR set to: 0
  3424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  3425  001258  0E00               	movlw	0
  3426  00125A  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3427  00125C  0E4F               	movlw	79
  3428  00125E  6F8F               	movwf	efgtoa@i& (0+255),b
  3429  001260                     
  3430                           ; BSR set to: 0
  3431                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  3432  001260  0E00               	movlw	low _dbuf
  3433  001262  258F               	addwf	efgtoa@i& (0+255),w,b
  3434  001264  6ED9               	movwf	fsr2l,c
  3435  001266  0E01               	movlw	high _dbuf
  3436  001268  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3437  00126A  6EDA               	movwf	fsr2h,c
  3438  00126C  0E00               	movlw	0
  3439  00126E  6EDF               	movwf	indf2,c
  3440  001270                     
  3441                           ; BSR set to: 0
  3442                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  3443  001270  0E00               	movlw	0
  3444  001272  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  3445  001274  0E00               	movlw	0
  3446  001276  6F7F               	movwf	efgtoa@sign& (0+255),b
  3447  001278                     
  3448                           ; BSR set to: 0
  3449                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  3450  001278  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3451  00127A  EF43  F009         	goto	u4350
  3452  00127E  EF41  F009         	goto	u4351
  3453  001282                     u4351:
  3454  001282  EF4B  F009         	goto	l3541
  3455  001286                     u4350:
  3456  001286                     
  3457                           ; BSR set to: 0
  3458                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  3459  001286  0E00               	movlw	0
  3460  001288  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  3461  00128A  0E01               	movlw	1
  3462  00128C  6F7F               	movwf	efgtoa@sign& (0+255),b
  3463  00128E                     
  3464                           ; BSR set to: 0
  3465                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  3466  00128E  6D95               	negf	efgtoa@e& (0+255),b
  3467  001290  1F96               	comf	(efgtoa@e+1)& (0+255),f,b
  3468  001292  B0D8               	btfsc	status,0,c
  3469  001294  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  3470  001296                     l3541:
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  3474  001296  0E00               	movlw	0
  3475  001298  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  3476  00129A  0E02               	movlw	2
  3477  00129C  6F81               	movwf	efgtoa@p& (0+255),b
  3478                           
  3479                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3480  00129E  EF7C  F009         	goto	l3553
  3481  0012A2                     l3543:
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  3485  0012A2  078F               	decf	efgtoa@i& (0+255),f,b
  3486  0012A4  A0D8               	btfss	status,0,c
  3487  0012A6  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  3488  0012A8                     
  3489                           ; BSR set to: 0
  3490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  3491  0012A8  0E00               	movlw	low _dbuf
  3492  0012AA  258F               	addwf	efgtoa@i& (0+255),w,b
  3493  0012AC  6ED9               	movwf	fsr2l,c
  3494  0012AE  0E01               	movlw	high _dbuf
  3495  0012B0  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3496  0012B2  6EDA               	movwf	fsr2h,c
  3497  0012B4  C095  F001         	movff	efgtoa@e,___awmod@dividend
  3498  0012B8  C096  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3499  0012BC  0E00               	movlw	0
  3500  0012BE  6E04               	movwf	(___awmod@divisor+1)^0,c
  3501  0012C0  0E0A               	movlw	10
  3502  0012C2  6E03               	movwf	___awmod@divisor^0,c
  3503  0012C4  ECFB  F017         	call	___awmod	;wreg free
  3504  0012C8  5001               	movf	?___awmod^0,w,c
  3505  0012CA  0F30               	addlw	48
  3506  0012CC  6EDF               	movwf	indf2,c
  3507  0012CE                     
  3508                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  3509  0012CE  C095  F001         	movff	efgtoa@e,___awdiv@dividend
  3510  0012D2  C096  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3511  0012D6  0E00               	movlw	0
  3512  0012D8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3513  0012DA  0E0A               	movlw	10
  3514  0012DC  6E03               	movwf	___awdiv@divisor^0,c
  3515  0012DE  EC99  F017         	call	___awdiv	;wreg free
  3516  0012E2  C001  F095         	movff	?___awdiv,efgtoa@e
  3517  0012E6  C002  F096         	movff	?___awdiv+1,efgtoa@e+1
  3518  0012EA                     
  3519                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  3520  0012EA  0100               	movlb	0	; () banked
  3521  0012EC  0781               	decf	efgtoa@p& (0+255),f,b
  3522  0012EE  A0D8               	btfss	status,0,c
  3523  0012F0  0782               	decf	(efgtoa@p+1)& (0+255),f,b
  3524  0012F2                     
  3525                           ; BSR set to: 0
  3526                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  3527  0012F2  0784               	decf	efgtoa@w& (0+255),f,b
  3528  0012F4  A0D8               	btfss	status,0,c
  3529  0012F6  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3530  0012F8                     l3553:
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3534  0012F8  5195               	movf	efgtoa@e& (0+255),w,b
  3535  0012FA  1196               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3536  0012FC  A4D8               	btfss	status,2,c
  3537  0012FE  EF83  F009         	goto	u4361
  3538  001302  EF85  F009         	goto	u4360
  3539  001306                     u4361:
  3540  001306  EF51  F009         	goto	l3543
  3541  00130A                     u4360:
  3542  00130A                     
  3543                           ; BSR set to: 0
  3544  00130A  BF82               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3545  00130C  EF92  F009         	goto	u4370
  3546  001310  5182               	movf	(efgtoa@p+1)& (0+255),w,b
  3547  001312  E106               	bnz	u4371
  3548  001314  0581               	decf	efgtoa@p& (0+255),w,b
  3549  001316  B0D8               	btfsc	status,0,c
  3550  001318  EF90  F009         	goto	u4371
  3551  00131C  EF92  F009         	goto	u4370
  3552  001320                     u4371:
  3553  001320  EF51  F009         	goto	l3543
  3554  001324                     u4370:
  3555  001324                     
  3556                           ; BSR set to: 0
  3557                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  3558  001324  078F               	decf	efgtoa@i& (0+255),f,b
  3559  001326  A0D8               	btfss	status,0,c
  3560  001328  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  3561  00132A                     
  3562                           ; BSR set to: 0
  3563                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  3564  00132A  517F               	movf	efgtoa@sign& (0+255),w,b
  3565  00132C  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3566  00132E  A4D8               	btfss	status,2,c
  3567  001330  EF9C  F009         	goto	u4381
  3568  001334  EF9E  F009         	goto	u4380
  3569  001338                     u4381:
  3570  001338  EFA4  F009         	goto	l3563
  3571  00133C                     u4380:
  3572  00133C                     
  3573                           ; BSR set to: 0
  3574  00133C  0E00               	movlw	0
  3575  00133E  6F70               	movwf	(_efgtoa$907+1)& (0+255),b
  3576  001340  0E2B               	movlw	43
  3577  001342  6F6F               	movwf	_efgtoa$907& (0+255),b
  3578  001344  EFA8  F009         	goto	l3565
  3579  001348                     l3563:
  3580                           
  3581                           ; BSR set to: 0
  3582  001348  0E00               	movlw	0
  3583  00134A  6F70               	movwf	(_efgtoa$907+1)& (0+255),b
  3584  00134C  0E2D               	movlw	45
  3585  00134E  6F6F               	movwf	_efgtoa$907& (0+255),b
  3586  001350                     l3565:
  3587                           
  3588                           ; BSR set to: 0
  3589  001350  0E00               	movlw	low _dbuf
  3590  001352  258F               	addwf	efgtoa@i& (0+255),w,b
  3591  001354  6ED9               	movwf	fsr2l,c
  3592  001356  0E01               	movlw	high _dbuf
  3593  001358  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3594  00135A  6EDA               	movwf	fsr2h,c
  3595  00135C  C06F  FFDF         	movff	_efgtoa$907,indf2
  3596  001360                     
  3597                           ; BSR set to: 0
  3598                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  3599  001360  0784               	decf	efgtoa@w& (0+255),f,b
  3600  001362  A0D8               	btfss	status,0,c
  3601  001364  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3602  001366                     
  3603                           ; BSR set to: 0
  3604                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3605  001366  078F               	decf	efgtoa@i& (0+255),f,b
  3606  001368  A0D8               	btfss	status,0,c
  3607  00136A  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  3608  00136C                     
  3609                           ; BSR set to: 0
  3610  00136C  0EBF               	movlw	191
  3611  00136E  6F60               	movwf	??_efgtoa& (0+255),b
  3612  001370  0EFF               	movlw	255
  3613  001372  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  3614  001374  505B               	movf	efgtoa@c^0,w,c
  3615  001376  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  3616  001378  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  3617  00137A  5160               	movf	??_efgtoa& (0+255),w,b
  3618  00137C  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  3619  00137E  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  3620  001380  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3621  001382  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  3622  001384  E10A               	bnz	u4390
  3623  001386  0E1A               	movlw	26
  3624  001388  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  3625  00138A  A0D8               	btfss	status,0,c
  3626  00138C  EFCA  F009         	goto	u4391
  3627  001390  EFCD  F009         	goto	u4390
  3628  001394                     u4391:
  3629  001394  0E01               	movlw	1
  3630  001396  EFCE  F009         	goto	u4400
  3631  00139A                     u4390:
  3632  00139A  0E00               	movlw	0
  3633  00139C                     u4400:
  3634  00139C  6F73               	movwf	_efgtoa$909& (0+255),b
  3635  00139E  6B74               	clrf	(_efgtoa$909+1)& (0+255),b
  3636  0013A0                     
  3637                           ; BSR set to: 0
  3638  0013A0  5173               	movf	_efgtoa$909& (0+255),w,b
  3639  0013A2  1174               	iorwf	(_efgtoa$909+1)& (0+255),w,b
  3640  0013A4  A4D8               	btfss	status,2,c
  3641  0013A6  EFD7  F009         	goto	u4411
  3642  0013AA  EFD9  F009         	goto	u4410
  3643  0013AE                     u4411:
  3644  0013AE  EFDF  F009         	goto	l3579
  3645  0013B2                     u4410:
  3646  0013B2                     
  3647                           ; BSR set to: 0
  3648  0013B2  0E00               	movlw	0
  3649  0013B4  6F72               	movwf	(_efgtoa$908+1)& (0+255),b
  3650  0013B6  0E65               	movlw	101
  3651  0013B8  6F71               	movwf	_efgtoa$908& (0+255),b
  3652  0013BA  EFE3  F009         	goto	l3581
  3653  0013BE                     l3579:
  3654                           
  3655                           ; BSR set to: 0
  3656  0013BE  0E00               	movlw	0
  3657  0013C0  6F72               	movwf	(_efgtoa$908+1)& (0+255),b
  3658  0013C2  0E45               	movlw	69
  3659  0013C4  6F71               	movwf	_efgtoa$908& (0+255),b
  3660  0013C6                     l3581:
  3661                           
  3662                           ; BSR set to: 0
  3663  0013C6  0E00               	movlw	low _dbuf
  3664  0013C8  258F               	addwf	efgtoa@i& (0+255),w,b
  3665  0013CA  6ED9               	movwf	fsr2l,c
  3666  0013CC  0E01               	movlw	high _dbuf
  3667  0013CE  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3668  0013D0  6EDA               	movwf	fsr2h,c
  3669  0013D2  C071  FFDF         	movff	_efgtoa$908,indf2
  3670  0013D6                     
  3671                           ; BSR set to: 0
  3672                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  3673  0013D6  0784               	decf	efgtoa@w& (0+255),f,b
  3674  0013D8  A0D8               	btfss	status,0,c
  3675  0013DA  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3676  0013DC                     
  3677                           ; BSR set to: 0
  3678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3679  0013DC  0E00               	movlw	low _dbuf
  3680  0013DE  2597               	addwf	efgtoa@n& (0+255),w,b
  3681  0013E0  6E01               	movwf	strcpy@dest^0,c
  3682  0013E2  0E01               	movlw	high _dbuf
  3683  0013E4  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3684  0013E6  6E02               	movwf	(strcpy@dest+1)^0,c
  3685  0013E8  0E00               	movlw	low _dbuf
  3686  0013EA  258F               	addwf	efgtoa@i& (0+255),w,b
  3687  0013EC  6E03               	movwf	strcpy@src^0,c
  3688  0013EE  0E01               	movlw	high _dbuf
  3689  0013F0  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3690  0013F2  6E04               	movwf	(strcpy@src+1)^0,c
  3691  0013F4  EC60  F01A         	call	_strcpy	;wreg free
  3692  0013F8                     l3587:
  3693                           
  3694                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 502:     return p
      +                          ad(fp, &dbuf[0], w);
  3695  0013F8  C055  F017         	movff	efgtoa@fp,pad@fp
  3696  0013FC  C056  F018         	movff	efgtoa@fp+1,pad@fp+1
  3697  001400  0E00               	movlw	low _dbuf
  3698  001402  6E19               	movwf	pad@buf^0,c
  3699  001404  0E01               	movlw	high _dbuf
  3700  001406  6E1A               	movwf	(pad@buf+1)^0,c
  3701  001408  C084  F01B         	movff	efgtoa@w,pad@p
  3702  00140C  C085  F01C         	movff	efgtoa@w+1,pad@p+1
  3703  001410  EC36  F017         	call	_pad	;wreg free
  3704  001414  C017  F055         	movff	?_pad,?_efgtoa
  3705  001418  C018  F056         	movff	?_pad+1,?_efgtoa+1
  3706  00141C                     l832:
  3707  00141C  0012               	return		;funcret
  3708  00141E                     __end_of_efgtoa:
  3709                           	callstack 0
  3710                           
  3711 ;; *************** function _tolower *****************
  3712 ;; Defined at:
  3713 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  c               2    6[COMRAM] int 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  2    6[COMRAM] int 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3727 ;;      Params:         2       0       0       0       0       0       0       0       0
  3728 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3729 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3730 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3731 ;;Total ram usage:        8 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    2
  3734 ;; This function calls:
  3735 ;;		_isupper
  3736 ;; This function is called by:
  3737 ;;		_efgtoa
  3738 ;;		_vfpfcnvrt
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text7
  3743  003460                     __ptext7:
  3744                           	callstack 0
  3745  003460                     _tolower:
  3746                           	callstack 24
  3747  003460  0EBF               	movlw	191
  3748  003462  6E09               	movwf	??_tolower^0,c
  3749  003464  0EFF               	movlw	255
  3750  003466  6E0A               	movwf	(??_tolower+1)^0,c
  3751  003468  C007  F00B         	movff	tolower@c,??_tolower+2
  3752  00346C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3753  003470  5009               	movf	??_tolower^0,w,c
  3754  003472  260B               	addwf	(??_tolower+2)^0,f,c
  3755  003474  500A               	movf	(??_tolower+1)^0,w,c
  3756  003476  220C               	addwfc	(??_tolower+3)^0,f,c
  3757  003478  500C               	movf	(??_tolower+3)^0,w,c
  3758  00347A  E10A               	bnz	u3730
  3759  00347C  0E1A               	movlw	26
  3760  00347E  5C0B               	subwf	(??_tolower+2)^0,w,c
  3761  003480  A0D8               	btfss	status,0,c
  3762  003482  EF45  F01A         	goto	u3731
  3763  003486  EF48  F01A         	goto	u3730
  3764  00348A                     u3731:
  3765  00348A  0E01               	movlw	1
  3766  00348C  EF49  F01A         	goto	u3740
  3767  003490                     u3730:
  3768  003490  0E00               	movlw	0
  3769  003492                     u3740:
  3770  003492  6E0D               	movwf	_tolower$1050^0,c
  3771  003494  6A0E               	clrf	(_tolower$1050+1)^0,c
  3772  003496  500D               	movf	_tolower$1050^0,w,c
  3773  003498  100E               	iorwf	(_tolower$1050+1)^0,w,c
  3774  00349A  B4D8               	btfsc	status,2,c
  3775  00349C  EF52  F01A         	goto	u3751
  3776  0034A0  EF54  F01A         	goto	u3750
  3777  0034A4                     u3751:
  3778  0034A4  EF5B  F01A         	goto	l1057
  3779  0034A8                     u3750:
  3780  0034A8  0E20               	movlw	32
  3781  0034AA  1007               	iorwf	tolower@c^0,w,c
  3782  0034AC  6E07               	movwf	?_tolower^0,c
  3783  0034AE  5008               	movf	(tolower@c+1)^0,w,c
  3784  0034B0  6E08               	movwf	(?_tolower+1)^0,c
  3785  0034B2  EF5F  F01A         	goto	l1062
  3786  0034B6                     l1057:
  3787  0034B6  C007  F007         	movff	tolower@c,?_tolower
  3788  0034BA  C008  F008         	movff	tolower@c+1,?_tolower+1
  3789  0034BE                     l1062:
  3790  0034BE  0012               	return		;funcret
  3791  0034C0                     __end_of_tolower:
  3792                           	callstack 0
  3793                           
  3794 ;; *************** function _isupper *****************
  3795 ;; Defined at:
  3796 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  c               2    0[COMRAM] int 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  2    0[COMRAM] int 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3810 ;;      Params:         2       0       0       0       0       0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3812 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3813 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3814 ;;Total ram usage:        6 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    1
  3817 ;; This function calls:
  3818 ;;		Nothing
  3819 ;; This function is called by:
  3820 ;;		_efgtoa
  3821 ;;		_vfpfcnvrt
  3822 ;;		_tolower
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           	psect	text8
  3827  00363A                     __ptext8:
  3828                           	callstack 0
  3829  00363A                     _isupper:
  3830                           	callstack 24
  3831  00363A  0EBF               	movlw	191
  3832  00363C  6E03               	movwf	??_isupper^0,c
  3833  00363E  0EFF               	movlw	255
  3834  003640  6E04               	movwf	(??_isupper+1)^0,c
  3835  003642  C001  F005         	movff	isupper@c,??_isupper+2
  3836  003646  C002  F006         	movff	isupper@c+1,??_isupper+3
  3837  00364A  5003               	movf	??_isupper^0,w,c
  3838  00364C  2605               	addwf	(??_isupper+2)^0,f,c
  3839  00364E  5004               	movf	(??_isupper+1)^0,w,c
  3840  003650  2206               	addwfc	(??_isupper+3)^0,f,c
  3841  003652  5006               	movf	(??_isupper+3)^0,w,c
  3842  003654  E10A               	bnz	u2880
  3843  003656  0E1A               	movlw	26
  3844  003658  5C05               	subwf	(??_isupper+2)^0,w,c
  3845  00365A  A0D8               	btfss	status,0,c
  3846  00365C  EF32  F01B         	goto	u2881
  3847  003660  EF35  F01B         	goto	u2880
  3848  003664                     u2881:
  3849  003664  0E01               	movlw	1
  3850  003666  EF36  F01B         	goto	u2890
  3851  00366A                     u2880:
  3852  00366A  0E00               	movlw	0
  3853  00366C                     u2890:
  3854  00366C  6E01               	movwf	?_isupper^0,c
  3855  00366E  6A02               	clrf	(?_isupper+1)^0,c
  3856  003670  0012               	return		;funcret
  3857  003672                     __end_of_isupper:
  3858                           	callstack 0
  3859                           
  3860 ;; *************** function _strcpy *****************
  3861 ;; Defined at:
  3862 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3865 ;;		 -> dbuf(80), 
  3866 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3867 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3868 ;;		 -> dbuf(80), 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  d               2    8[COMRAM] PTR unsigned char 
  3871 ;;		 -> dbuf(80), 
  3872 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3873 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3874 ;;		 -> dbuf(80), 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  2    0[COMRAM] PTR unsigned char 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3884 ;;      Params:         4       0       0       0       0       0       0       0       0
  3885 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3886 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3887 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3888 ;;Total ram usage:       10 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:    1
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_efgtoa
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text9
  3899  0034C0                     __ptext9:
  3900                           	callstack 0
  3901  0034C0                     _strcpy:
  3902                           	callstack 24
  3903  0034C0  C003  F007         	movff	strcpy@src,strcpy@s
  3904  0034C4  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3905  0034C8  C001  F009         	movff	strcpy@dest,strcpy@d
  3906  0034CC  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3907  0034D0                     l3237:
  3908  0034D0  5007               	movf	strcpy@s^0,w,c
  3909  0034D2  6E05               	movwf	??_strcpy^0,c
  3910  0034D4  5008               	movf	(strcpy@s+1)^0,w,c
  3911  0034D6  6E06               	movwf	(??_strcpy+1)^0,c
  3912  0034D8  4A07               	infsnz	strcpy@s^0,f,c
  3913  0034DA  2A08               	incf	(strcpy@s+1)^0,f,c
  3914  0034DC  C005  FFF6         	movff	??_strcpy,tblptrl
  3915  0034E0  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3916  0034E4  6AF8               	clrf	tblptru,c
  3917  0034E6  C009  FFD9         	movff	strcpy@d,fsr2l
  3918  0034EA  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3919  0034EE  4A09               	infsnz	strcpy@d^0,f,c
  3920  0034F0  2A0A               	incf	(strcpy@d+1)^0,f,c
  3921  0034F2  0E07               	movlw	(high __ramtop+-1)
  3922  0034F4  64F7               	cpfsgt	tblptrh,c
  3923  0034F6  D003               	bra	u3717
  3924  0034F8  0008               	tblrd		*
  3925  0034FA  50F5               	movf	tablat,w,c
  3926  0034FC  D005               	bra	u3710
  3927  0034FE                     u3717:
  3928  0034FE  CFF6 FFE1          	movff	tblptrl,fsr1l
  3929  003502  CFF7 FFE2          	movff	tblptrh,fsr1h
  3930  003506  50E7               	movf	indf1,w,c
  3931  003508                     u3710:
  3932  003508  6EDF               	movwf	indf2,c
  3933  00350A  50DF               	movf	indf2,w,c
  3934  00350C  A4D8               	btfss	status,2,c
  3935  00350E  EF8B  F01A         	goto	u3721
  3936  003512  EF8D  F01A         	goto	u3720
  3937  003516                     u3721:
  3938  003516  EF68  F01A         	goto	l3237
  3939  00351A                     u3720:
  3940  00351A  0012               	return		;funcret
  3941  00351C                     __end_of_strcpy:
  3942                           	callstack 0
  3943                           
  3944 ;; *************** function _pad *****************
  3945 ;; Defined at:
  3946 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  3949 ;;		 -> NULL(0), 
  3950 ;;  buf             2   24[COMRAM] PTR unsigned char 
  3951 ;;		 -> dbuf(80), 
  3952 ;;  p               2   26[COMRAM] int 
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  w               2   31[COMRAM] int 
  3955 ;;  i               2   29[COMRAM] int 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  2   22[COMRAM] int 
  3958 ;; Registers used:
  3959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3965 ;;      Params:         6       0       0       0       0       0       0       0       0
  3966 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3967 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3968 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3969 ;;Total ram usage:       11 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    7
  3972 ;; This function calls:
  3973 ;;		_fputc
  3974 ;;		_fputs
  3975 ;;		_strlen
  3976 ;; This function is called by:
  3977 ;;		_efgtoa
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text10
  3982  002E6C                     __ptext10:
  3983                           	callstack 0
  3984  002E6C                     _pad:
  3985                           	callstack 18
  3986  002E6C                     
  3987                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3988  002E6C  0100               	movlb	0	; () banked
  3989  002E6E  A1D7               	btfss	_flags& (0+255),0,b
  3990  002E70  EF3C  F017         	goto	u3601
  3991  002E74  EF3E  F017         	goto	u3600
  3992  002E78                     u3601:
  3993  002E78  EF48  F017         	goto	l3195
  3994  002E7C                     u3600:
  3995  002E7C                     
  3996                           ; BSR set to: 0
  3997                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3998  002E7C  C019  F010         	movff	pad@buf,fputs@s
  3999  002E80  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4000  002E84  C017  F012         	movff	pad@fp,fputs@fp
  4001  002E88  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4002  002E8C  ECDA  F01A         	call	_fputs	;wreg free
  4003  002E90                     l3195:
  4004                           
  4005                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4006  002E90  BE1C               	btfsc	(pad@p+1)^0,7,c
  4007  002E92  EF4D  F017         	goto	u3611
  4008  002E96  EF4F  F017         	goto	u3610
  4009  002E9A                     u3611:
  4010  002E9A  EF55  F017         	goto	l3199
  4011  002E9E                     u3610:
  4012  002E9E  C01B  F020         	movff	pad@p,pad@w
  4013  002EA2  C01C  F021         	movff	pad@p+1,pad@w+1
  4014  002EA6  EF59  F017         	goto	l809
  4015  002EAA                     l3199:
  4016  002EAA  0E00               	movlw	0
  4017  002EAC  6E21               	movwf	(pad@w+1)^0,c
  4018  002EAE  0E00               	movlw	0
  4019  002EB0  6E20               	movwf	pad@w^0,c
  4020  002EB2                     l809:
  4021                           
  4022                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4023  002EB2  0E00               	movlw	0
  4024  002EB4  6E1F               	movwf	(pad@i+1)^0,c
  4025  002EB6  0E00               	movlw	0
  4026  002EB8  6E1E               	movwf	pad@i^0,c
  4027                           
  4028                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4029  002EBA  EF6B  F017         	goto	l3205
  4030  002EBE                     l3201:
  4031                           
  4032                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4033  002EBE  0E00               	movlw	0
  4034  002EC0  6E08               	movwf	(fputc@c+1)^0,c
  4035  002EC2  0E20               	movlw	32
  4036  002EC4  6E07               	movwf	fputc@c^0,c
  4037  002EC6  C017  F009         	movff	pad@fp,fputc@fp
  4038  002ECA  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4039  002ECE  ECA8  F018         	call	_fputc	;wreg free
  4040  002ED2                     
  4041                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4042  002ED2  4A1E               	infsnz	pad@i^0,f,c
  4043  002ED4  2A1F               	incf	(pad@i+1)^0,f,c
  4044  002ED6                     l3205:
  4045                           
  4046                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4047  002ED6  5020               	movf	pad@w^0,w,c
  4048  002ED8  5C1E               	subwf	pad@i^0,w,c
  4049  002EDA  501F               	movf	(pad@i+1)^0,w,c
  4050  002EDC  0A80               	xorlw	128
  4051  002EDE  6E1D               	movwf	??_pad^0,c
  4052  002EE0  5021               	movf	(pad@w+1)^0,w,c
  4053  002EE2  0A80               	xorlw	128
  4054  002EE4  581D               	subwfb	??_pad^0,w,c
  4055  002EE6  A0D8               	btfss	status,0,c
  4056  002EE8  EF78  F017         	goto	u3621
  4057  002EEC  EF7A  F017         	goto	u3620
  4058  002EF0                     u3621:
  4059  002EF0  EF5F  F017         	goto	l3201
  4060  002EF4                     u3620:
  4061  002EF4                     
  4062                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4063  002EF4  0100               	movlb	0	; () banked
  4064  002EF6  B1D7               	btfsc	_flags& (0+255),0,b
  4065  002EF8  EF80  F017         	goto	u3631
  4066  002EFC  EF82  F017         	goto	u3630
  4067  002F00                     u3631:
  4068  002F00  EF8C  F017         	goto	l3209
  4069  002F04                     u3630:
  4070  002F04                     
  4071                           ; BSR set to: 0
  4072                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4073  002F04  C019  F010         	movff	pad@buf,fputs@s
  4074  002F08  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4075  002F0C  C017  F012         	movff	pad@fp,fputs@fp
  4076  002F10  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4077  002F14  ECDA  F01A         	call	_fputs	;wreg free
  4078  002F18                     l3209:
  4079                           
  4080                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  4081  002F18  C019  F001         	movff	pad@buf,strlen@s
  4082  002F1C  C01A  F002         	movff	pad@buf+1,strlen@s+1
  4083  002F20  EC71  F01B         	call	_strlen	;wreg free
  4084  002F24  5020               	movf	pad@w^0,w,c
  4085  002F26  2401               	addwf	?_strlen^0,w,c
  4086  002F28  6E17               	movwf	?_pad^0,c
  4087  002F2A  5021               	movf	(pad@w+1)^0,w,c
  4088  002F2C  2002               	addwfc	(?_strlen+1)^0,w,c
  4089  002F2E  6E18               	movwf	(?_pad+1)^0,c
  4090  002F30  0012               	return		;funcret
  4091  002F32                     __end_of_pad:
  4092                           	callstack 0
  4093                           
  4094 ;; *************** function _strlen *****************
  4095 ;; Defined at:
  4096 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4099 ;;		 -> dbuf(80), 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4102 ;;		 -> dbuf(80), 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  2    0[COMRAM] unsigned int 
  4105 ;; Registers used:
  4106 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4112 ;;      Params:         2       0       0       0       0       0       0       0       0
  4113 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4115 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4116 ;;Total ram usage:        4 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    1
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_pad
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text11
  4127  0036E2                     __ptext11:
  4128                           	callstack 0
  4129  0036E2                     _strlen:
  4130                           	callstack 23
  4131  0036E2  C001  F003         	movff	strlen@s,strlen@a
  4132  0036E6  C002  F004         	movff	strlen@s+1,strlen@a+1
  4133  0036EA  EF79  F01B         	goto	l2731
  4134  0036EE                     l2729:
  4135  0036EE  4A01               	infsnz	strlen@s^0,f,c
  4136  0036F0  2A02               	incf	(strlen@s+1)^0,f,c
  4137  0036F2                     l2731:
  4138  0036F2  C001  FFD9         	movff	strlen@s,fsr2l
  4139  0036F6  C002  FFDA         	movff	strlen@s+1,fsr2h
  4140  0036FA  50DF               	movf	indf2,w,c
  4141  0036FC  A4D8               	btfss	status,2,c
  4142  0036FE  EF83  F01B         	goto	u2871
  4143  003702  EF85  F01B         	goto	u2870
  4144  003706                     u2871:
  4145  003706  EF77  F01B         	goto	l2729
  4146  00370A                     u2870:
  4147  00370A  5003               	movf	strlen@a^0,w,c
  4148  00370C  5C01               	subwf	strlen@s^0,w,c
  4149  00370E  6E01               	movwf	?_strlen^0,c
  4150  003710  5004               	movf	(strlen@a+1)^0,w,c
  4151  003712  5802               	subwfb	(strlen@s+1)^0,w,c
  4152  003714  6E02               	movwf	(?_strlen+1)^0,c
  4153  003716  0012               	return		;funcret
  4154  003718                     __end_of_strlen:
  4155                           	callstack 0
  4156                           
  4157 ;; *************** function _fputs *****************
  4158 ;; Defined at:
  4159 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4162 ;;		 -> dbuf(80), 
  4163 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4164 ;;		 -> NULL(0), 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  i               2   20[COMRAM] int 
  4167 ;;  c               1   19[COMRAM] unsigned char 
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  2   15[COMRAM] int 
  4170 ;; Registers used:
  4171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4177 ;;      Params:         4       0       0       0       0       0       0       0       0
  4178 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4180 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4181 ;;Total ram usage:        7 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:    6
  4184 ;; This function calls:
  4185 ;;		_fputc
  4186 ;; This function is called by:
  4187 ;;		_pad
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text12
  4192  0035B4                     __ptext12:
  4193                           	callstack 0
  4194  0035B4                     _fputs:
  4195                           	callstack 18
  4196  0035B4  0E00               	movlw	0
  4197  0035B6  6E16               	movwf	(fputs@i+1)^0,c
  4198  0035B8  0E00               	movlw	0
  4199  0035BA  6E15               	movwf	fputs@i^0,c
  4200  0035BC  EFEB  F01A         	goto	l2725
  4201  0035C0                     l2721:
  4202  0035C0  C014  F007         	movff	fputs@c,fputc@c
  4203  0035C4  6A08               	clrf	(fputc@c+1)^0,c
  4204  0035C6  C012  F009         	movff	fputs@fp,fputc@fp
  4205  0035CA  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4206  0035CE  ECA8  F018         	call	_fputc	;wreg free
  4207  0035D2  4A15               	infsnz	fputs@i^0,f,c
  4208  0035D4  2A16               	incf	(fputs@i+1)^0,f,c
  4209  0035D6                     l2725:
  4210  0035D6  5015               	movf	fputs@i^0,w,c
  4211  0035D8  2410               	addwf	fputs@s^0,w,c
  4212  0035DA  6ED9               	movwf	fsr2l,c
  4213  0035DC  5016               	movf	(fputs@i+1)^0,w,c
  4214  0035DE  2011               	addwfc	(fputs@s+1)^0,w,c
  4215  0035E0  6EDA               	movwf	fsr2h,c
  4216  0035E2  50DF               	movf	indf2,w,c
  4217  0035E4  6E14               	movwf	fputs@c^0,c
  4218  0035E6  5014               	movf	fputs@c^0,w,c
  4219  0035E8  A4D8               	btfss	status,2,c
  4220  0035EA  EFF9  F01A         	goto	u2861
  4221  0035EE  EFFB  F01A         	goto	u2860
  4222  0035F2                     u2861:
  4223  0035F2  EFE0  F01A         	goto	l2721
  4224  0035F6                     u2860:
  4225  0035F6  0012               	return		;funcret
  4226  0035F8                     __end_of_fputs:
  4227                           	callstack 0
  4228                           
  4229 ;; *************** function _fputc *****************
  4230 ;; Defined at:
  4231 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  c               2    6[COMRAM] int 
  4234 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4235 ;;		 -> NULL(0), 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;		None
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  2    6[COMRAM] int 
  4240 ;; Registers used:
  4241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4247 ;;      Params:         4       0       0       0       0       0       0       0       0
  4248 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4249 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4250 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4251 ;;Total ram usage:        9 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; Hardware stack levels required when called:    5
  4254 ;; This function calls:
  4255 ;;		_putch
  4256 ;; This function is called by:
  4257 ;;		_pad
  4258 ;;		_vfpfcnvrt
  4259 ;;		_fputs
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           	psect	text13
  4264  003150                     __ptext13:
  4265                           	callstack 0
  4266  003150                     _fputc:
  4267                           	callstack 21
  4268  003150  5009               	movf	fputc@fp^0,w,c
  4269  003152  100A               	iorwf	(fputc@fp+1)^0,w,c
  4270  003154  B4D8               	btfsc	status,2,c
  4271  003156  EFAF  F018         	goto	u2431
  4272  00315A  EFB1  F018         	goto	u2430
  4273  00315E                     u2431:
  4274  00315E  EFBA  F018         	goto	l2507
  4275  003162                     u2430:
  4276  003162  5009               	movf	fputc@fp^0,w,c
  4277  003164  100A               	iorwf	(fputc@fp+1)^0,w,c
  4278  003166  A4D8               	btfss	status,2,c
  4279  003168  EFB8  F018         	goto	u2441
  4280  00316C  EFBA  F018         	goto	u2440
  4281  003170                     u2441:
  4282  003170  EFBF  F018         	goto	l2509
  4283  003174                     u2440:
  4284  003174                     l2507:
  4285  003174  5007               	movf	fputc@c^0,w,c
  4286  003176  ECFB  F01B         	call	_putch
  4287  00317A  EFF2  F018         	goto	l1023
  4288  00317E                     l2509:
  4289  00317E  EE20 F004          	lfsr	2,4
  4290  003182  5009               	movf	fputc@fp^0,w,c
  4291  003184  26D9               	addwf	fsr2l,f,c
  4292  003186  500A               	movf	(fputc@fp+1)^0,w,c
  4293  003188  22DA               	addwfc	fsr2h,f,c
  4294  00318A  50DE               	movf	postinc2,w,c
  4295  00318C  10DE               	iorwf	postinc2,w,c
  4296  00318E  B4D8               	btfsc	status,2,c
  4297  003190  EFCC  F018         	goto	u2451
  4298  003194  EFCE  F018         	goto	u2450
  4299  003198                     u2451:
  4300  003198  EFE9  F018         	goto	l2513
  4301  00319C                     u2450:
  4302  00319C  EE20 F004          	lfsr	2,4
  4303  0031A0  5009               	movf	fputc@fp^0,w,c
  4304  0031A2  26D9               	addwf	fsr2l,f,c
  4305  0031A4  500A               	movf	(fputc@fp+1)^0,w,c
  4306  0031A6  22DA               	addwfc	fsr2h,f,c
  4307  0031A8  EE10 F002          	lfsr	1,2
  4308  0031AC  5009               	movf	fputc@fp^0,w,c
  4309  0031AE  26E1               	addwf	fsr1l,f,c
  4310  0031B0  500A               	movf	(fputc@fp+1)^0,w,c
  4311  0031B2  22E2               	addwfc	fsr1h,f,c
  4312  0031B4  50DE               	movf	postinc2,w,c
  4313  0031B6  5CE6               	subwf	postinc1,w,c
  4314  0031B8  50E6               	movf	postinc1,w,c
  4315  0031BA  0A80               	xorlw	128
  4316  0031BC  6E0F               	movwf	(??_fputc+4)^0,c
  4317  0031BE  50DE               	movf	postinc2,w,c
  4318  0031C0  0A80               	xorlw	128
  4319  0031C2  580F               	subwfb	(??_fputc+4)^0,w,c
  4320  0031C4  B0D8               	btfsc	status,0,c
  4321  0031C6  EFE7  F018         	goto	u2461
  4322  0031CA  EFE9  F018         	goto	u2460
  4323  0031CE                     u2461:
  4324  0031CE  EFF2  F018         	goto	l1023
  4325  0031D2                     u2460:
  4326  0031D2                     l2513:
  4327  0031D2  EE20 F002          	lfsr	2,2
  4328  0031D6  5009               	movf	fputc@fp^0,w,c
  4329  0031D8  26D9               	addwf	fsr2l,f,c
  4330  0031DA  500A               	movf	(fputc@fp+1)^0,w,c
  4331  0031DC  22DA               	addwfc	fsr2h,f,c
  4332  0031DE  2ADE               	incf	postinc2,f,c
  4333  0031E0  0E00               	movlw	0
  4334  0031E2  22DD               	addwfc	postdec2,f,c
  4335  0031E4                     l1023:
  4336  0031E4  0012               	return		;funcret
  4337  0031E6                     __end_of_fputc:
  4338                           	callstack 0
  4339                           
  4340 ;; *************** function _putch *****************
  4341 ;; Defined at:
  4342 ;;		line 82 in file "main.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  data            1    wreg     unsigned char 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  data            1    5[COMRAM] unsigned char 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1    wreg      void 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2, status,0, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4356 ;;      Params:         0       0       0       0       0       0       0       0       0
  4357 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4359 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4360 ;;Total ram usage:        1 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; Hardware stack levels required when called:    4
  4363 ;; This function calls:
  4364 ;;		_escreve_lcd
  4365 ;; This function is called by:
  4366 ;;		_fputc
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text14
  4371  0037F6                     __ptext14:
  4372                           	callstack 0
  4373  0037F6                     _putch:
  4374                           	callstack 21
  4375                           
  4376                           ;incstack = 0
  4377                           ;putch@data stored from wreg
  4378  0037F6  6E06               	movwf	putch@data^0,c
  4379  0037F8  5006               	movf	putch@data^0,w,c
  4380  0037FA  ECF4  F01B         	call	_escreve_lcd
  4381  0037FE  0012               	return		;funcret
  4382  003800                     __end_of_putch:
  4383                           	callstack 0
  4384                           
  4385 ;; *************** function _escreve_lcd *****************
  4386 ;; Defined at:
  4387 ;;		line 33 in file "lcd.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  c               1    wreg     unsigned char 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  c               1    4[COMRAM] unsigned char 
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      void 
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, status,0, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4401 ;;      Params:         0       0       0       0       0       0       0       0       0
  4402 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4403 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4404 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4405 ;;Total ram usage:        1 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    3
  4408 ;; This function calls:
  4409 ;;		_envia_byte_lcd
  4410 ;; This function is called by:
  4411 ;;		_putch
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text15
  4416  0037E8                     __ptext15:
  4417                           	callstack 0
  4418  0037E8                     _escreve_lcd:
  4419                           	callstack 21
  4420                           
  4421                           ;incstack = 0
  4422                           ;escreve_lcd@c stored from wreg
  4423  0037E8  6E05               	movwf	escreve_lcd@c^0,c
  4424  0037EA  C005  F003         	movff	escreve_lcd@c,envia_byte_lcd@dado
  4425  0037EE  0E01               	movlw	1
  4426  0037F0  ECC6  F01B         	call	_envia_byte_lcd
  4427  0037F4  0012               	return		;funcret
  4428  0037F6                     __end_of_escreve_lcd:
  4429                           	callstack 0
  4430                           
  4431 ;; *************** function _floorf *****************
  4432 ;; Defined at:
  4433 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;  x               4   64[COMRAM] float 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  u               4   80[COMRAM] struct .
  4438 ;;  m               4   74[COMRAM] unsigned long 
  4439 ;;  e               2   78[COMRAM] int 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  4   64[COMRAM] float 
  4442 ;; Registers used:
  4443 ;;		wreg, status,2, status,0
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4449 ;;      Params:         4       0       0       0       0       0       0       0       0
  4450 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4451 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4452 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4453 ;;Total ram usage:       20 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; Hardware stack levels required when called:    1
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_efgtoa
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           	psect	text16
  4464  002538                     __ptext16:
  4465                           	callstack 0
  4466  002538                     _floorf:
  4467                           	callstack 24
  4468  002538  C0C9  F051         	movff	floorf@F524,floorf@u
  4469  00253C  C0CA  F052         	movff	floorf@F524+1,floorf@u+1
  4470  002540  C0CB  F053         	movff	floorf@F524+2,floorf@u+2
  4471  002544  C0CC  F054         	movff	floorf@F524+3,floorf@u+3
  4472  002548  C041  F051         	movff	floorf@x,floorf@u
  4473  00254C  C042  F052         	movff	floorf@x+1,floorf@u+1
  4474  002550  C043  F053         	movff	floorf@x+2,floorf@u+2
  4475  002554  C044  F054         	movff	floorf@x+3,floorf@u+3
  4476  002558  0E81               	movlw	129
  4477  00255A  6E45               	movwf	??_floorf^0,c
  4478  00255C  0EFF               	movlw	255
  4479  00255E  6E46               	movwf	(??_floorf+1)^0,c
  4480  002560  C051  F047         	movff	floorf@u,??_floorf+2
  4481  002564  C052  F048         	movff	floorf@u+1,??_floorf+3
  4482  002568  C053  F049         	movff	floorf@u+2,??_floorf+4
  4483  00256C  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4484  002570  0E18               	movlw	24
  4485  002572  EFC0  F012         	goto	u3760
  4486  002576                     u3765:
  4487  002576  90D8               	bcf	status,0,c
  4488  002578  324A               	rrcf	(??_floorf+5)^0,f,c
  4489  00257A  3249               	rrcf	(??_floorf+4)^0,f,c
  4490  00257C  3248               	rrcf	(??_floorf+3)^0,f,c
  4491  00257E  3247               	rrcf	(??_floorf+2)^0,f,c
  4492  002580                     u3760:
  4493  002580  2EE8               	decfsz	wreg,f,c
  4494  002582  EFBB  F012         	goto	u3765
  4495  002586  5047               	movf	(??_floorf+2)^0,w,c
  4496  002588  2445               	addwf	??_floorf^0,w,c
  4497  00258A  6E4F               	movwf	floorf@e^0,c
  4498  00258C  0E00               	movlw	0
  4499  00258E  2046               	addwfc	(??_floorf+1)^0,w,c
  4500  002590  6E50               	movwf	(floorf@e+1)^0,c
  4501  002592  BE50               	btfsc	(floorf@e+1)^0,7,c
  4502  002594  EFD5  F012         	goto	u3771
  4503  002598  5050               	movf	(floorf@e+1)^0,w,c
  4504  00259A  E109               	bnz	u3770
  4505  00259C  0E17               	movlw	23
  4506  00259E  5C4F               	subwf	floorf@e^0,w,c
  4507  0025A0  A0D8               	btfss	status,0,c
  4508  0025A2  EFD5  F012         	goto	u3771
  4509  0025A6  EFD7  F012         	goto	u3770
  4510  0025AA                     u3771:
  4511  0025AA  EFE1  F012         	goto	l3255
  4512  0025AE                     u3770:
  4513  0025AE                     l3253:
  4514  0025AE  C041  F041         	movff	floorf@x,?_floorf
  4515  0025B2  C042  F042         	movff	floorf@x+1,?_floorf+1
  4516  0025B6  C043  F043         	movff	floorf@x+2,?_floorf+2
  4517  0025BA  C044  F044         	movff	floorf@x+3,?_floorf+3
  4518  0025BE  EFA4  F013         	goto	l984
  4519  0025C2                     l3255:
  4520  0025C2  BE50               	btfsc	(floorf@e+1)^0,7,c
  4521  0025C4  EFE6  F012         	goto	u3781
  4522  0025C8  EFE8  F012         	goto	u3780
  4523  0025CC                     u3781:
  4524  0025CC  EF58  F013         	goto	l3265
  4525  0025D0                     u3780:
  4526  0025D0  C04F  F045         	movff	floorf@e,??_floorf
  4527  0025D4  0EFF               	movlw	255
  4528  0025D6  6E46               	movwf	(??_floorf+1)^0,c
  4529  0025D8  0EFF               	movlw	255
  4530  0025DA  6E47               	movwf	(??_floorf+2)^0,c
  4531  0025DC  0E7F               	movlw	127
  4532  0025DE  6E48               	movwf	(??_floorf+3)^0,c
  4533  0025E0  0E00               	movlw	0
  4534  0025E2  6E49               	movwf	(??_floorf+4)^0,c
  4535  0025E4                     u3795:
  4536  0025E4  6645               	tstfsz	??_floorf^0,c
  4537  0025E6  EFF7  F012         	goto	u3796
  4538  0025EA  EFFF  F012         	goto	u3797
  4539  0025EE                     u3796:
  4540  0025EE  3449               	rlcf	(??_floorf+4)^0,w,c
  4541  0025F0  3249               	rrcf	(??_floorf+4)^0,f,c
  4542  0025F2  3248               	rrcf	(??_floorf+3)^0,f,c
  4543  0025F4  3247               	rrcf	(??_floorf+2)^0,f,c
  4544  0025F6  3246               	rrcf	(??_floorf+1)^0,f,c
  4545  0025F8  2E45               	decfsz	??_floorf^0,f,c
  4546  0025FA  EFF2  F012         	goto	u3795
  4547  0025FE                     u3797:
  4548  0025FE  C046  F04B         	movff	??_floorf+1,floorf@m
  4549  002602  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4550  002606  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4551  00260A  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4552  00260E  504B               	movf	floorf@m^0,w,c
  4553  002610  1451               	andwf	floorf@u^0,w,c
  4554  002612  6E45               	movwf	??_floorf^0,c
  4555  002614  504C               	movf	(floorf@m+1)^0,w,c
  4556  002616  1452               	andwf	(floorf@u+1)^0,w,c
  4557  002618  6E46               	movwf	(??_floorf+1)^0,c
  4558  00261A  504D               	movf	(floorf@m+2)^0,w,c
  4559  00261C  1453               	andwf	(floorf@u+2)^0,w,c
  4560  00261E  6E47               	movwf	(??_floorf+2)^0,c
  4561  002620  504E               	movf	(floorf@m+3)^0,w,c
  4562  002622  1454               	andwf	(floorf@u+3)^0,w,c
  4563  002624  6E48               	movwf	(??_floorf+3)^0,c
  4564  002626  5045               	movf	??_floorf^0,w,c
  4565  002628  1046               	iorwf	(??_floorf+1)^0,w,c
  4566  00262A  1047               	iorwf	(??_floorf+2)^0,w,c
  4567  00262C  1048               	iorwf	(??_floorf+3)^0,w,c
  4568  00262E  A4D8               	btfss	status,2,c
  4569  002630  EF1C  F013         	goto	u3801
  4570  002634  EF1E  F013         	goto	u3800
  4571  002638                     u3801:
  4572  002638  EF20  F013         	goto	l3261
  4573  00263C                     u3800:
  4574  00263C  EFD7  F012         	goto	l3253
  4575  002640                     l3261:
  4576  002640  C051  F045         	movff	floorf@u,??_floorf
  4577  002644  C052  F046         	movff	floorf@u+1,??_floorf+1
  4578  002648  C053  F047         	movff	floorf@u+2,??_floorf+2
  4579  00264C  C054  F048         	movff	floorf@u+3,??_floorf+3
  4580  002650  0E20               	movlw	32
  4581  002652  EF30  F013         	goto	u3810
  4582  002656                     u3815:
  4583  002656  90D8               	bcf	status,0,c
  4584  002658  3248               	rrcf	(??_floorf+3)^0,f,c
  4585  00265A  3247               	rrcf	(??_floorf+2)^0,f,c
  4586  00265C  3246               	rrcf	(??_floorf+1)^0,f,c
  4587  00265E  3245               	rrcf	??_floorf^0,f,c
  4588  002660                     u3810:
  4589  002660  2EE8               	decfsz	wreg,f,c
  4590  002662  EF2B  F013         	goto	u3815
  4591  002666  5045               	movf	??_floorf^0,w,c
  4592  002668  1046               	iorwf	(??_floorf+1)^0,w,c
  4593  00266A  1047               	iorwf	(??_floorf+2)^0,w,c
  4594  00266C  1048               	iorwf	(??_floorf+3)^0,w,c
  4595  00266E  B4D8               	btfsc	status,2,c
  4596  002670  EF3C  F013         	goto	u3821
  4597  002674  EF3E  F013         	goto	u3820
  4598  002678                     u3821:
  4599  002678  EF46  F013         	goto	l987
  4600  00267C                     u3820:
  4601  00267C  504B               	movf	floorf@m^0,w,c
  4602  00267E  2651               	addwf	floorf@u^0,f,c
  4603  002680  504C               	movf	(floorf@m+1)^0,w,c
  4604  002682  2252               	addwfc	(floorf@u+1)^0,f,c
  4605  002684  504D               	movf	(floorf@m+2)^0,w,c
  4606  002686  2253               	addwfc	(floorf@u+2)^0,f,c
  4607  002688  504E               	movf	(floorf@m+3)^0,w,c
  4608  00268A  2254               	addwfc	(floorf@u+3)^0,f,c
  4609  00268C                     l987:
  4610  00268C  1C4B               	comf	floorf@m^0,w,c
  4611  00268E  6E45               	movwf	??_floorf^0,c
  4612  002690  1C4C               	comf	(floorf@m+1)^0,w,c
  4613  002692  6E46               	movwf	(??_floorf+1)^0,c
  4614  002694  1C4D               	comf	(floorf@m+2)^0,w,c
  4615  002696  6E47               	movwf	(??_floorf+2)^0,c
  4616  002698  1C4E               	comf	(floorf@m+3)^0,w,c
  4617  00269A  6E48               	movwf	(??_floorf+3)^0,c
  4618  00269C  5045               	movf	??_floorf^0,w,c
  4619  00269E  1651               	andwf	floorf@u^0,f,c
  4620  0026A0  5046               	movf	(??_floorf+1)^0,w,c
  4621  0026A2  1652               	andwf	(floorf@u+1)^0,f,c
  4622  0026A4  5047               	movf	(??_floorf+2)^0,w,c
  4623  0026A6  1653               	andwf	(floorf@u+2)^0,f,c
  4624  0026A8  5048               	movf	(??_floorf+3)^0,w,c
  4625  0026AA  1654               	andwf	(floorf@u+3)^0,f,c
  4626  0026AC  EF9C  F013         	goto	l3273
  4627  0026B0                     l3265:
  4628  0026B0  C051  F045         	movff	floorf@u,??_floorf
  4629  0026B4  C052  F046         	movff	floorf@u+1,??_floorf+1
  4630  0026B8  C053  F047         	movff	floorf@u+2,??_floorf+2
  4631  0026BC  C054  F048         	movff	floorf@u+3,??_floorf+3
  4632  0026C0  0E20               	movlw	32
  4633  0026C2  EF68  F013         	goto	u3830
  4634  0026C6                     u3835:
  4635  0026C6  90D8               	bcf	status,0,c
  4636  0026C8  3248               	rrcf	(??_floorf+3)^0,f,c
  4637  0026CA  3247               	rrcf	(??_floorf+2)^0,f,c
  4638  0026CC  3246               	rrcf	(??_floorf+1)^0,f,c
  4639  0026CE  3245               	rrcf	??_floorf^0,f,c
  4640  0026D0                     u3830:
  4641  0026D0  2EE8               	decfsz	wreg,f,c
  4642  0026D2  EF63  F013         	goto	u3835
  4643  0026D6  5045               	movf	??_floorf^0,w,c
  4644  0026D8  1046               	iorwf	(??_floorf+1)^0,w,c
  4645  0026DA  1047               	iorwf	(??_floorf+2)^0,w,c
  4646  0026DC  1048               	iorwf	(??_floorf+3)^0,w,c
  4647  0026DE  A4D8               	btfss	status,2,c
  4648  0026E0  EF74  F013         	goto	u3841
  4649  0026E4  EF76  F013         	goto	u3840
  4650  0026E8                     u3841:
  4651  0026E8  EF80  F013         	goto	l3269
  4652  0026EC                     u3840:
  4653  0026EC  0E00               	movlw	0
  4654  0026EE  6E51               	movwf	floorf@u^0,c
  4655  0026F0  0E00               	movlw	0
  4656  0026F2  6E52               	movwf	(floorf@u+1)^0,c
  4657  0026F4  0E00               	movlw	0
  4658  0026F6  6E53               	movwf	(floorf@u+2)^0,c
  4659  0026F8  0E00               	movlw	0
  4660  0026FA  6E54               	movwf	(floorf@u+3)^0,c
  4661  0026FC  EF9C  F013         	goto	l3273
  4662  002700                     l3269:
  4663  002700  90D8               	bcf	status,0,c
  4664  002702  3451               	rlcf	floorf@u^0,w,c
  4665  002704  6E45               	movwf	??_floorf^0,c
  4666  002706  3452               	rlcf	(floorf@u+1)^0,w,c
  4667  002708  6E46               	movwf	(??_floorf+1)^0,c
  4668  00270A  3453               	rlcf	(floorf@u+2)^0,w,c
  4669  00270C  6E47               	movwf	(??_floorf+2)^0,c
  4670  00270E  3454               	rlcf	(floorf@u+3)^0,w,c
  4671  002710  6E48               	movwf	(??_floorf+3)^0,c
  4672  002712  5045               	movf	??_floorf^0,w,c
  4673  002714  1046               	iorwf	(??_floorf+1)^0,w,c
  4674  002716  1047               	iorwf	(??_floorf+2)^0,w,c
  4675  002718  1048               	iorwf	(??_floorf+3)^0,w,c
  4676  00271A  B4D8               	btfsc	status,2,c
  4677  00271C  EF92  F013         	goto	u3851
  4678  002720  EF94  F013         	goto	u3850
  4679  002724                     u3851:
  4680  002724  EF9C  F013         	goto	l3273
  4681  002728                     u3850:
  4682  002728  0E00               	movlw	0
  4683  00272A  6E51               	movwf	floorf@u^0,c
  4684  00272C  0E00               	movlw	0
  4685  00272E  6E52               	movwf	(floorf@u+1)^0,c
  4686  002730  0E80               	movlw	128
  4687  002732  6E53               	movwf	(floorf@u+2)^0,c
  4688  002734  0EBF               	movlw	191
  4689  002736  6E54               	movwf	(floorf@u+3)^0,c
  4690  002738                     l3273:
  4691  002738  C051  F041         	movff	floorf@u,?_floorf
  4692  00273C  C052  F042         	movff	floorf@u+1,?_floorf+1
  4693  002740  C053  F043         	movff	floorf@u+2,?_floorf+2
  4694  002744  C054  F044         	movff	floorf@u+3,?_floorf+3
  4695  002748                     l984:
  4696  002748  0012               	return		;funcret
  4697  00274A                     __end_of_floorf:
  4698                           	callstack 0
  4699                           
  4700 ;; *************** function ___fpclassifyf *****************
  4701 ;; Defined at:
  4702 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  x               4    0[COMRAM] float 
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;  u               4   10[COMRAM] struct .
  4707 ;;  e               2    8[COMRAM] int 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  2    0[COMRAM] int 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4717 ;;      Params:         4       0       0       0       0       0       0       0       0
  4718 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4719 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4720 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4721 ;;Total ram usage:       14 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; Hardware stack levels required when called:    1
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_efgtoa
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           	psect	text17
  4732  002C98                     __ptext17:
  4733                           	callstack 0
  4734  002C98                     ___fpclassifyf:
  4735                           	callstack 24
  4736  002C98  C0CD  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4737  002C9C  C0CE  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4738  002CA0  C0CF  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4739  002CA4  C0D0  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4740  002CA8  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4741  002CAC  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4742  002CB0  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4743  002CB4  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4744  002CB8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4745  002CBC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4746  002CC0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4747  002CC4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4748  002CC8  0E18               	movlw	24
  4749  002CCA  EF6C  F016         	goto	u3640
  4750  002CCE                     u3645:
  4751  002CCE  90D8               	bcf	status,0,c
  4752  002CD0  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4753  002CD2  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4754  002CD4  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4755  002CD6  3205               	rrcf	??___fpclassifyf^0,f,c
  4756  002CD8                     u3640:
  4757  002CD8  2EE8               	decfsz	wreg,f,c
  4758  002CDA  EF67  F016         	goto	u3645
  4759  002CDE  5005               	movf	??___fpclassifyf^0,w,c
  4760  002CE0  6E09               	movwf	___fpclassifyf@e^0,c
  4761  002CE2  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4762  002CE4  5009               	movf	___fpclassifyf@e^0,w,c
  4763  002CE6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4764  002CE8  A4D8               	btfss	status,2,c
  4765  002CEA  EF79  F016         	goto	u3651
  4766  002CEE  EF7B  F016         	goto	u3650
  4767  002CF2                     u3651:
  4768  002CF2  EF9B  F016         	goto	l3225
  4769  002CF6                     u3650:
  4770  002CF6  90D8               	bcf	status,0,c
  4771  002CF8  340B               	rlcf	___fpclassifyf@u^0,w,c
  4772  002CFA  6E05               	movwf	??___fpclassifyf^0,c
  4773  002CFC  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4774  002CFE  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4775  002D00  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4776  002D02  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4777  002D04  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4778  002D06  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4779  002D08  5005               	movf	??___fpclassifyf^0,w,c
  4780  002D0A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4781  002D0C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4782  002D0E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4783  002D10  A4D8               	btfss	status,2,c
  4784  002D12  EF8D  F016         	goto	u3661
  4785  002D16  EF8F  F016         	goto	u3660
  4786  002D1A                     u3661:
  4787  002D1A  EF95  F016         	goto	l3221
  4788  002D1E                     u3660:
  4789  002D1E  0E00               	movlw	0
  4790  002D20  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4791  002D22  0E02               	movlw	2
  4792  002D24  6E01               	movwf	?___fpclassifyf^0,c
  4793  002D26  EFCA  F016         	goto	l946
  4794  002D2A                     l3221:
  4795  002D2A  0E00               	movlw	0
  4796  002D2C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4797  002D2E  0E03               	movlw	3
  4798  002D30  6E01               	movwf	?___fpclassifyf^0,c
  4799  002D32  EFCA  F016         	goto	l946
  4800  002D36                     l3225:
  4801  002D36  2809               	incf	___fpclassifyf@e^0,w,c
  4802  002D38  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4803  002D3A  A4D8               	btfss	status,2,c
  4804  002D3C  EFA2  F016         	goto	u3671
  4805  002D40  EFA4  F016         	goto	u3670
  4806  002D44                     u3671:
  4807  002D44  EFC6  F016         	goto	l3231
  4808  002D48                     u3670:
  4809  002D48  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4810  002D4C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4811  002D50  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4812  002D54  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4813  002D58  0E09               	movlw	9
  4814  002D5A                     u3685:
  4815  002D5A  90D8               	bcf	status,0,c
  4816  002D5C  3605               	rlcf	??___fpclassifyf^0,f,c
  4817  002D5E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4818  002D60  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4819  002D62  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4820  002D64  2EE8               	decfsz	wreg,f,c
  4821  002D66  EFAD  F016         	goto	u3685
  4822  002D6A  5005               	movf	??___fpclassifyf^0,w,c
  4823  002D6C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4824  002D6E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4825  002D70  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4826  002D72  B4D8               	btfsc	status,2,c
  4827  002D74  EFBE  F016         	goto	u3691
  4828  002D78  EFC1  F016         	goto	u3690
  4829  002D7C                     u3691:
  4830  002D7C  0E01               	movlw	1
  4831  002D7E  EFC2  F016         	goto	u3700
  4832  002D82                     u3690:
  4833  002D82  0E00               	movlw	0
  4834  002D84                     u3700:
  4835  002D84  6E01               	movwf	?___fpclassifyf^0,c
  4836  002D86  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4837  002D88  EFCA  F016         	goto	l946
  4838  002D8C                     l3231:
  4839  002D8C  0E00               	movlw	0
  4840  002D8E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4841  002D90  0E04               	movlw	4
  4842  002D92  6E01               	movwf	?___fpclassifyf^0,c
  4843  002D94                     l946:
  4844  002D94  0012               	return		;funcret
  4845  002D96                     __end_of___fpclassifyf:
  4846                           	callstack 0
  4847                           
  4848 ;; *************** function ___fltol *****************
  4849 ;; Defined at:
  4850 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;  f1              4    0[COMRAM] int 
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;  exp1            1    9[COMRAM] unsigned char 
  4855 ;;  sign1           1    8[COMRAM] unsigned char 
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  4    0[COMRAM] long 
  4858 ;; Registers used:
  4859 ;;		wreg, status,2, status,0
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4865 ;;      Params:         4       0       0       0       0       0       0       0       0
  4866 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4867 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4868 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4869 ;;Total ram usage:       10 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; Hardware stack levels required when called:    1
  4872 ;; This function calls:
  4873 ;;		Nothing
  4874 ;; This function is called by:
  4875 ;;		_efgtoa
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text18
  4880  002A8E                     __ptext18:
  4881                           	callstack 0
  4882  002A8E                     ___fltol:
  4883                           	callstack 24
  4884  002A8E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4885  002A90  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4886  002A92  6E0A               	movwf	___fltol@exp1^0,c
  4887  002A94  500A               	movf	___fltol@exp1^0,w,c
  4888  002A96  A4D8               	btfss	status,2,c
  4889  002A98  EF50  F015         	goto	u3531
  4890  002A9C  EF52  F015         	goto	u3530
  4891  002AA0                     u3531:
  4892  002AA0  EF5C  F015         	goto	l3153
  4893  002AA4                     u3530:
  4894  002AA4                     l3149:
  4895  002AA4  0E00               	movlw	0
  4896  002AA6  6E01               	movwf	?___fltol^0,c
  4897  002AA8  0E00               	movlw	0
  4898  002AAA  6E02               	movwf	(?___fltol+1)^0,c
  4899  002AAC  0E00               	movlw	0
  4900  002AAE  6E03               	movwf	(?___fltol+2)^0,c
  4901  002AB0  0E00               	movlw	0
  4902  002AB2  6E04               	movwf	(?___fltol+3)^0,c
  4903  002AB4  EFC9  F015         	goto	l387
  4904  002AB8                     l3153:
  4905  002AB8  C001  F005         	movff	___fltol@f1,??___fltol
  4906  002ABC  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4907  002AC0  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4908  002AC4  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4909  002AC8  0E20               	movlw	32
  4910  002ACA  EF6C  F015         	goto	u3540
  4911  002ACE                     u3545:
  4912  002ACE  90D8               	bcf	status,0,c
  4913  002AD0  3208               	rrcf	(??___fltol+3)^0,f,c
  4914  002AD2  3207               	rrcf	(??___fltol+2)^0,f,c
  4915  002AD4  3206               	rrcf	(??___fltol+1)^0,f,c
  4916  002AD6  3205               	rrcf	??___fltol^0,f,c
  4917  002AD8                     u3540:
  4918  002AD8  2EE8               	decfsz	wreg,f,c
  4919  002ADA  EF67  F015         	goto	u3545
  4920  002ADE  5005               	movf	??___fltol^0,w,c
  4921  002AE0  6E09               	movwf	___fltol@sign1^0,c
  4922  002AE2  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4923  002AE4  0EFF               	movlw	255
  4924  002AE6  1601               	andwf	___fltol@f1^0,f,c
  4925  002AE8  0EFF               	movlw	255
  4926  002AEA  1602               	andwf	(___fltol@f1+1)^0,f,c
  4927  002AEC  0EFF               	movlw	255
  4928  002AEE  1603               	andwf	(___fltol@f1+2)^0,f,c
  4929  002AF0  0E00               	movlw	0
  4930  002AF2  1604               	andwf	(___fltol@f1+3)^0,f,c
  4931  002AF4  0E96               	movlw	150
  4932  002AF6  5E0A               	subwf	___fltol@exp1^0,f,c
  4933  002AF8  BE0A               	btfsc	___fltol@exp1^0,7,c
  4934  002AFA  EF83  F015         	goto	u3550
  4935  002AFE  EF81  F015         	goto	u3551
  4936  002B02                     u3551:
  4937  002B02  EF99  F015         	goto	l3173
  4938  002B06                     u3550:
  4939  002B06  500A               	movf	___fltol@exp1^0,w,c
  4940  002B08  0A80               	xorlw	128
  4941  002B0A  0F97               	addlw	151
  4942  002B0C  B0D8               	btfsc	status,0,c
  4943  002B0E  EF8B  F015         	goto	u3561
  4944  002B12  EF8D  F015         	goto	u3560
  4945  002B16                     u3561:
  4946  002B16  EF8F  F015         	goto	l3169
  4947  002B1A                     u3560:
  4948  002B1A  EF52  F015         	goto	l3149
  4949  002B1E                     l3169:
  4950  002B1E  90D8               	bcf	status,0,c
  4951  002B20  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4952  002B22  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4953  002B24  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4954  002B26  3201               	rrcf	___fltol@f1^0,f,c
  4955  002B28  3E0A               	incfsz	___fltol@exp1^0,f,c
  4956  002B2A  EF8F  F015         	goto	l3169
  4957  002B2E  EFB1  F015         	goto	l3183
  4958  002B32                     l3173:
  4959  002B32  0E1F               	movlw	31
  4960  002B34  640A               	cpfsgt	___fltol@exp1^0,c
  4961  002B36  EF9F  F015         	goto	u3571
  4962  002B3A  EFA1  F015         	goto	u3570
  4963  002B3E                     u3571:
  4964  002B3E  EFA9  F015         	goto	l3181
  4965  002B42                     u3570:
  4966  002B42  EF52  F015         	goto	l3149
  4967  002B46                     l3179:
  4968  002B46  90D8               	bcf	status,0,c
  4969  002B48  3601               	rlcf	___fltol@f1^0,f,c
  4970  002B4A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4971  002B4C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4972  002B4E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4973  002B50  060A               	decf	___fltol@exp1^0,f,c
  4974  002B52                     l3181:
  4975  002B52  500A               	movf	___fltol@exp1^0,w,c
  4976  002B54  A4D8               	btfss	status,2,c
  4977  002B56  EFAF  F015         	goto	u3581
  4978  002B5A  EFB1  F015         	goto	u3580
  4979  002B5E                     u3581:
  4980  002B5E  EFA3  F015         	goto	l3179
  4981  002B62                     u3580:
  4982  002B62                     l3183:
  4983  002B62  5009               	movf	___fltol@sign1^0,w,c
  4984  002B64  B4D8               	btfsc	status,2,c
  4985  002B66  EFB7  F015         	goto	u3591
  4986  002B6A  EFB9  F015         	goto	u3590
  4987  002B6E                     u3591:
  4988  002B6E  EFC1  F015         	goto	l3187
  4989  002B72                     u3590:
  4990  002B72  1E04               	comf	(___fltol@f1+3)^0,f,c
  4991  002B74  1E03               	comf	(___fltol@f1+2)^0,f,c
  4992  002B76  1E02               	comf	(___fltol@f1+1)^0,f,c
  4993  002B78  6C01               	negf	___fltol@f1^0,c
  4994  002B7A  0E00               	movlw	0
  4995  002B7C  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4996  002B7E  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4997  002B80  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4998  002B82                     l3187:
  4999  002B82  C001  F001         	movff	___fltol@f1,?___fltol
  5000  002B86  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5001  002B8A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5002  002B8E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5003  002B92                     l387:
  5004  002B92  0012               	return		;funcret
  5005  002B94                     __end_of___fltol:
  5006                           	callstack 0
  5007                           
  5008 ;; *************** function ___flsub *****************
  5009 ;; Defined at:
  5010 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  b               4   39[COMRAM] long 
  5013 ;;  a               4   43[COMRAM] long 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;		None
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  4   39[COMRAM] long 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0, cstack
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5025 ;;      Params:         8       0       0       0       0       0       0       0       0
  5026 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5027 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5028 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5029 ;;Total ram usage:        8 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:    2
  5032 ;; This function calls:
  5033 ;;		___fladd
  5034 ;; This function is called by:
  5035 ;;		_efgtoa
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text19
  5040  00356E                     __ptext19:
  5041                           	callstack 0
  5042  00356E                     ___flsub:
  5043                           	callstack 23
  5044  00356E  0E00               	movlw	0
  5045  003570  1A2C               	xorwf	___flsub@a^0,f,c
  5046  003572  0E00               	movlw	0
  5047  003574  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  5048  003576  0E00               	movlw	0
  5049  003578  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  5050  00357A  0E80               	movlw	128
  5051  00357C  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  5052  00357E  C028  F001         	movff	___flsub@b,___fladd@b
  5053  003582  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5054  003586  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5055  00358A  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5056  00358E  C02C  F005         	movff	___flsub@a,___fladd@a
  5057  003592  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5058  003596  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5059  00359A  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5060  00359E  EC0F  F00A         	call	___fladd	;wreg free
  5061  0035A2  C001  F028         	movff	?___fladd,?___flsub
  5062  0035A6  C002  F029         	movff	?___fladd+1,?___flsub+1
  5063  0035AA  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5064  0035AE  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5065  0035B2  0012               	return		;funcret
  5066  0035B4                     __end_of___flsub:
  5067                           	callstack 0
  5068                           
  5069 ;; *************** function ___fladd *****************
  5070 ;; Defined at:
  5071 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  b               4    0[COMRAM] long 
  5074 ;;  a               4    4[COMRAM] long 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  grs             1   15[COMRAM] unsigned char 
  5077 ;;  bexp            1   14[COMRAM] unsigned char 
  5078 ;;  aexp            1   13[COMRAM] unsigned char 
  5079 ;;  signs           1   12[COMRAM] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  4    0[COMRAM] unsigned char 
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5089 ;;      Params:         8       0       0       0       0       0       0       0       0
  5090 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5091 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5092 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5093 ;;Total ram usage:       16 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    1
  5096 ;; This function calls:
  5097 ;;		Nothing
  5098 ;; This function is called by:
  5099 ;;		___flsub
  5100 ;;		_efgtoa
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text20
  5105  00141E                     __ptext20:
  5106                           	callstack 0
  5107  00141E                     ___fladd:
  5108                           	callstack 23
  5109  00141E  5004               	movf	(___fladd@b+3)^0,w,c
  5110  001420  0B80               	andlw	128
  5111  001422  6E0D               	movwf	___fladd@signs^0,c
  5112  001424  5004               	movf	(___fladd@b+3)^0,w,c
  5113  001426  2404               	addwf	(___fladd@b+3)^0,w,c
  5114  001428  6E0F               	movwf	___fladd@bexp^0,c
  5115  00142A  AE03               	btfss	(___fladd@b+2)^0,7,c
  5116  00142C  EF1A  F00A         	goto	u2471
  5117  001430  EF1C  F00A         	goto	u2470
  5118  001434                     u2471:
  5119  001434  EF1D  F00A         	goto	l2523
  5120  001438                     u2470:
  5121  001438  800F               	bsf	___fladd@bexp^0,0,c
  5122  00143A                     l2523:
  5123  00143A  500F               	movf	___fladd@bexp^0,w,c
  5124  00143C  B4D8               	btfsc	status,2,c
  5125  00143E  EF23  F00A         	goto	u2481
  5126  001442  EF25  F00A         	goto	u2480
  5127  001446                     u2481:
  5128  001446  EF3A  F00A         	goto	l2533
  5129  00144A                     u2480:
  5130  00144A  280F               	incf	___fladd@bexp^0,w,c
  5131  00144C  A4D8               	btfss	status,2,c
  5132  00144E  EF2B  F00A         	goto	u2491
  5133  001452  EF2D  F00A         	goto	u2490
  5134  001456                     u2491:
  5135  001456  EF35  F00A         	goto	l2529
  5136  00145A                     u2490:
  5137  00145A  0E00               	movlw	0
  5138  00145C  6E01               	movwf	___fladd@b^0,c
  5139  00145E  0E00               	movlw	0
  5140  001460  6E02               	movwf	(___fladd@b+1)^0,c
  5141  001462  0E00               	movlw	0
  5142  001464  6E03               	movwf	(___fladd@b+2)^0,c
  5143  001466  0E00               	movlw	0
  5144  001468  6E04               	movwf	(___fladd@b+3)^0,c
  5145  00146A                     l2529:
  5146  00146A  8E03               	bsf	(___fladd@b+2)^0,7,c
  5147  00146C  0E00               	movlw	0
  5148  00146E  6E04               	movwf	(___fladd@b+3)^0,c
  5149  001470  EF42  F00A         	goto	l2535
  5150  001474                     l2533:
  5151  001474  0E00               	movlw	0
  5152  001476  6E01               	movwf	___fladd@b^0,c
  5153  001478  0E00               	movlw	0
  5154  00147A  6E02               	movwf	(___fladd@b+1)^0,c
  5155  00147C  0E00               	movlw	0
  5156  00147E  6E03               	movwf	(___fladd@b+2)^0,c
  5157  001480  0E00               	movlw	0
  5158  001482  6E04               	movwf	(___fladd@b+3)^0,c
  5159  001484                     l2535:
  5160  001484  5008               	movf	(___fladd@a+3)^0,w,c
  5161  001486  0B80               	andlw	128
  5162  001488  6E0E               	movwf	___fladd@aexp^0,c
  5163  00148A  500D               	movf	___fladd@signs^0,w,c
  5164  00148C  180E               	xorwf	___fladd@aexp^0,w,c
  5165  00148E  B4D8               	btfsc	status,2,c
  5166  001490  EF4C  F00A         	goto	u2501
  5167  001494  EF4E  F00A         	goto	u2500
  5168  001498                     u2501:
  5169  001498  EF4F  F00A         	goto	l2541
  5170  00149C                     u2500:
  5171  00149C  8C0D               	bsf	___fladd@signs^0,6,c
  5172  00149E                     l2541:
  5173  00149E  5008               	movf	(___fladd@a+3)^0,w,c
  5174  0014A0  2408               	addwf	(___fladd@a+3)^0,w,c
  5175  0014A2  6E0E               	movwf	___fladd@aexp^0,c
  5176  0014A4  AE07               	btfss	(___fladd@a+2)^0,7,c
  5177  0014A6  EF57  F00A         	goto	u2511
  5178  0014AA  EF59  F00A         	goto	u2510
  5179  0014AE                     u2511:
  5180  0014AE  EF5A  F00A         	goto	l2547
  5181  0014B2                     u2510:
  5182  0014B2  800E               	bsf	___fladd@aexp^0,0,c
  5183  0014B4                     l2547:
  5184  0014B4  500E               	movf	___fladd@aexp^0,w,c
  5185  0014B6  B4D8               	btfsc	status,2,c
  5186  0014B8  EF60  F00A         	goto	u2521
  5187  0014BC  EF62  F00A         	goto	u2520
  5188  0014C0                     u2521:
  5189  0014C0  EF77  F00A         	goto	l2557
  5190  0014C4                     u2520:
  5191  0014C4  280E               	incf	___fladd@aexp^0,w,c
  5192  0014C6  A4D8               	btfss	status,2,c
  5193  0014C8  EF68  F00A         	goto	u2531
  5194  0014CC  EF6A  F00A         	goto	u2530
  5195  0014D0                     u2531:
  5196  0014D0  EF72  F00A         	goto	l2553
  5197  0014D4                     u2530:
  5198  0014D4  0E00               	movlw	0
  5199  0014D6  6E05               	movwf	___fladd@a^0,c
  5200  0014D8  0E00               	movlw	0
  5201  0014DA  6E06               	movwf	(___fladd@a+1)^0,c
  5202  0014DC  0E00               	movlw	0
  5203  0014DE  6E07               	movwf	(___fladd@a+2)^0,c
  5204  0014E0  0E00               	movlw	0
  5205  0014E2  6E08               	movwf	(___fladd@a+3)^0,c
  5206  0014E4                     l2553:
  5207  0014E4  8E07               	bsf	(___fladd@a+2)^0,7,c
  5208  0014E6  0E00               	movlw	0
  5209  0014E8  6E08               	movwf	(___fladd@a+3)^0,c
  5210  0014EA  EF7F  F00A         	goto	l2559
  5211  0014EE                     l2557:
  5212  0014EE  0E00               	movlw	0
  5213  0014F0  6E05               	movwf	___fladd@a^0,c
  5214  0014F2  0E00               	movlw	0
  5215  0014F4  6E06               	movwf	(___fladd@a+1)^0,c
  5216  0014F6  0E00               	movlw	0
  5217  0014F8  6E07               	movwf	(___fladd@a+2)^0,c
  5218  0014FA  0E00               	movlw	0
  5219  0014FC  6E08               	movwf	(___fladd@a+3)^0,c
  5220  0014FE                     l2559:
  5221  0014FE  500F               	movf	___fladd@bexp^0,w,c
  5222  001500  5C0E               	subwf	___fladd@aexp^0,w,c
  5223  001502  B0D8               	btfsc	status,0,c
  5224  001504  EF86  F00A         	goto	u2541
  5225  001508  EF88  F00A         	goto	u2540
  5226  00150C                     u2541:
  5227  00150C  EFAF  F00A         	goto	l2595
  5228  001510                     u2540:
  5229  001510  AC0D               	btfss	___fladd@signs^0,6,c
  5230  001512  EF8D  F00A         	goto	u2551
  5231  001516  EF8F  F00A         	goto	u2550
  5232  00151A                     u2551:
  5233  00151A  EF91  F00A         	goto	l2565
  5234  00151E                     u2550:
  5235  00151E  0E80               	movlw	128
  5236  001520  1A0D               	xorwf	___fladd@signs^0,f,c
  5237  001522                     l2565:
  5238  001522  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5239  001526  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5240  00152A  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5241  00152E  C001  F010         	movff	___fladd@b,___fladd@grs
  5242  001532  C005  F001         	movff	___fladd@a,___fladd@b
  5243  001536  C010  F005         	movff	___fladd@grs,___fladd@a
  5244  00153A  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5245  00153E  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5246  001542  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5247  001546  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5248  00154A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5249  00154E  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5250  001552  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5251  001556  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5252  00155A  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5253  00155E                     l2595:
  5254  00155E  0E00               	movlw	0
  5255  001560  6E10               	movwf	___fladd@grs^0,c
  5256  001562  500F               	movf	___fladd@bexp^0,w,c
  5257  001564  C00E  F009         	movff	___fladd@aexp,??___fladd
  5258  001568  6A0A               	clrf	(??___fladd+1)^0,c
  5259  00156A  5E09               	subwf	??___fladd^0,f,c
  5260  00156C  0E00               	movlw	0
  5261  00156E  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5262  001570  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5263  001572  EFC4  F00A         	goto	u2561
  5264  001576  500A               	movf	(??___fladd+1)^0,w,c
  5265  001578  E109               	bnz	u2560
  5266  00157A  0E1A               	movlw	26
  5267  00157C  5C09               	subwf	??___fladd^0,w,c
  5268  00157E  A0D8               	btfss	status,0,c
  5269  001580  EFC4  F00A         	goto	u2561
  5270  001584  EFC6  F00A         	goto	u2560
  5271  001588                     u2561:
  5272  001588  EFFD  F00A         	goto	l619
  5273  00158C                     u2560:
  5274  00158C  5001               	movf	___fladd@b^0,w,c
  5275  00158E  1002               	iorwf	(___fladd@b+1)^0,w,c
  5276  001590  1003               	iorwf	(___fladd@b+2)^0,w,c
  5277  001592  1004               	iorwf	(___fladd@b+3)^0,w,c
  5278  001594  A4D8               	btfss	status,2,c
  5279  001596  EFCF  F00A         	goto	u2571
  5280  00159A  EFD2  F00A         	goto	u2570
  5281  00159E                     u2571:
  5282  00159E  0E01               	movlw	1
  5283  0015A0  EFD3  F00A         	goto	u2580
  5284  0015A4                     u2570:
  5285  0015A4  0E00               	movlw	0
  5286  0015A6                     u2580:
  5287  0015A6  6E10               	movwf	___fladd@grs^0,c
  5288  0015A8  0E00               	movlw	0
  5289  0015AA  6E01               	movwf	___fladd@b^0,c
  5290  0015AC  0E00               	movlw	0
  5291  0015AE  6E02               	movwf	(___fladd@b+1)^0,c
  5292  0015B0  0E00               	movlw	0
  5293  0015B2  6E03               	movwf	(___fladd@b+2)^0,c
  5294  0015B4  0E00               	movlw	0
  5295  0015B6  6E04               	movwf	(___fladd@b+3)^0,c
  5296  0015B8  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5297  0015BC  EF06  F00B         	goto	l618
  5298  0015C0                     l620:
  5299  0015C0  A010               	btfss	___fladd@grs^0,0,c
  5300  0015C2  EFE5  F00A         	goto	u2591
  5301  0015C6  EFE7  F00A         	goto	u2590
  5302  0015CA                     u2591:
  5303  0015CA  EFED  F00A         	goto	l2607
  5304  0015CE                     u2590:
  5305  0015CE  90D8               	bcf	status,0,c
  5306  0015D0  3010               	rrcf	___fladd@grs^0,w,c
  5307  0015D2  0901               	iorlw	1
  5308  0015D4  6E10               	movwf	___fladd@grs^0,c
  5309  0015D6  EFEF  F00A         	goto	l2609
  5310  0015DA                     l2607:
  5311  0015DA  90D8               	bcf	status,0,c
  5312  0015DC  3210               	rrcf	___fladd@grs^0,f,c
  5313  0015DE                     l2609:
  5314  0015DE  A001               	btfss	___fladd@b^0,0,c
  5315  0015E0  EFF4  F00A         	goto	u2601
  5316  0015E4  EFF6  F00A         	goto	u2600
  5317  0015E8                     u2601:
  5318  0015E8  EFF7  F00A         	goto	l2613
  5319  0015EC                     u2600:
  5320  0015EC  8E10               	bsf	___fladd@grs^0,7,c
  5321  0015EE                     l2613:
  5322  0015EE  3404               	rlcf	(___fladd@b+3)^0,w,c
  5323  0015F0  3204               	rrcf	(___fladd@b+3)^0,f,c
  5324  0015F2  3203               	rrcf	(___fladd@b+2)^0,f,c
  5325  0015F4  3202               	rrcf	(___fladd@b+1)^0,f,c
  5326  0015F6  3201               	rrcf	___fladd@b^0,f,c
  5327  0015F8  2A0F               	incf	___fladd@bexp^0,f,c
  5328  0015FA                     l619:
  5329  0015FA  500E               	movf	___fladd@aexp^0,w,c
  5330  0015FC  5C0F               	subwf	___fladd@bexp^0,w,c
  5331  0015FE  A0D8               	btfss	status,0,c
  5332  001600  EF04  F00B         	goto	u2611
  5333  001604  EF06  F00B         	goto	u2610
  5334  001608                     u2611:
  5335  001608  EFE0  F00A         	goto	l620
  5336  00160C                     u2610:
  5337  00160C                     l618:
  5338  00160C  BC0D               	btfsc	___fladd@signs^0,6,c
  5339  00160E  EF0B  F00B         	goto	u2621
  5340  001612  EF0D  F00B         	goto	u2620
  5341  001616                     u2621:
  5342  001616  EF4D  F00B         	goto	l2641
  5343  00161A                     u2620:
  5344  00161A  500F               	movf	___fladd@bexp^0,w,c
  5345  00161C  A4D8               	btfss	status,2,c
  5346  00161E  EF13  F00B         	goto	u2631
  5347  001622  EF15  F00B         	goto	u2630
  5348  001626                     u2631:
  5349  001626  EF1F  F00B         	goto	l2623
  5350  00162A                     u2630:
  5351  00162A  0E00               	movlw	0
  5352  00162C  6E01               	movwf	?___fladd^0,c
  5353  00162E  0E00               	movlw	0
  5354  001630  6E02               	movwf	(?___fladd+1)^0,c
  5355  001632  0E00               	movlw	0
  5356  001634  6E03               	movwf	(?___fladd+2)^0,c
  5357  001636  0E00               	movlw	0
  5358  001638  6E04               	movwf	(?___fladd+3)^0,c
  5359  00163A  EF6E  F00C         	goto	l627
  5360  00163E                     l2623:
  5361  00163E  5005               	movf	___fladd@a^0,w,c
  5362  001640  2601               	addwf	___fladd@b^0,f,c
  5363  001642  5006               	movf	(___fladd@a+1)^0,w,c
  5364  001644  2202               	addwfc	(___fladd@b+1)^0,f,c
  5365  001646  5007               	movf	(___fladd@a+2)^0,w,c
  5366  001648  2203               	addwfc	(___fladd@b+2)^0,f,c
  5367  00164A  5008               	movf	(___fladd@a+3)^0,w,c
  5368  00164C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5369  00164E  A004               	btfss	(___fladd@b+3)^0,0,c
  5370  001650  EF2C  F00B         	goto	u2641
  5371  001654  EF2E  F00B         	goto	u2640
  5372  001658                     u2641:
  5373  001658  EFDA  F00B         	goto	l2677
  5374  00165C                     u2640:
  5375  00165C  A010               	btfss	___fladd@grs^0,0,c
  5376  00165E  EF33  F00B         	goto	u2651
  5377  001662  EF35  F00B         	goto	u2650
  5378  001666                     u2651:
  5379  001666  EF3B  F00B         	goto	l2631
  5380  00166A                     u2650:
  5381  00166A  90D8               	bcf	status,0,c
  5382  00166C  3010               	rrcf	___fladd@grs^0,w,c
  5383  00166E  0901               	iorlw	1
  5384  001670  6E10               	movwf	___fladd@grs^0,c
  5385  001672  EF3D  F00B         	goto	l2633
  5386  001676                     l2631:
  5387  001676  90D8               	bcf	status,0,c
  5388  001678  3210               	rrcf	___fladd@grs^0,f,c
  5389  00167A                     l2633:
  5390  00167A  A001               	btfss	___fladd@b^0,0,c
  5391  00167C  EF42  F00B         	goto	u2661
  5392  001680  EF44  F00B         	goto	u2660
  5393  001684                     u2661:
  5394  001684  EF45  F00B         	goto	l2637
  5395  001688                     u2660:
  5396  001688  8E10               	bsf	___fladd@grs^0,7,c
  5397  00168A                     l2637:
  5398  00168A  3404               	rlcf	(___fladd@b+3)^0,w,c
  5399  00168C  3204               	rrcf	(___fladd@b+3)^0,f,c
  5400  00168E  3203               	rrcf	(___fladd@b+2)^0,f,c
  5401  001690  3202               	rrcf	(___fladd@b+1)^0,f,c
  5402  001692  3201               	rrcf	___fladd@b^0,f,c
  5403  001694  2A0F               	incf	___fladd@bexp^0,f,c
  5404  001696  EFDA  F00B         	goto	l2677
  5405  00169A                     l2641:
  5406  00169A  5005               	movf	___fladd@a^0,w,c
  5407  00169C  5C01               	subwf	___fladd@b^0,w,c
  5408  00169E  5006               	movf	(___fladd@a+1)^0,w,c
  5409  0016A0  5802               	subwfb	(___fladd@b+1)^0,w,c
  5410  0016A2  5007               	movf	(___fladd@a+2)^0,w,c
  5411  0016A4  5803               	subwfb	(___fladd@b+2)^0,w,c
  5412  0016A6  5004               	movf	(___fladd@b+3)^0,w,c
  5413  0016A8  0A80               	xorlw	128
  5414  0016AA  6E09               	movwf	??___fladd^0,c
  5415  0016AC  5008               	movf	(___fladd@a+3)^0,w,c
  5416  0016AE  0A80               	xorlw	128
  5417  0016B0  5809               	subwfb	??___fladd^0,w,c
  5418  0016B2  B0D8               	btfsc	status,0,c
  5419  0016B4  EF5E  F00B         	goto	u2671
  5420  0016B8  EF60  F00B         	goto	u2670
  5421  0016BC                     u2671:
  5422  0016BC  EF8B  F00B         	goto	l2651
  5423  0016C0                     u2670:
  5424  0016C0  5001               	movf	___fladd@b^0,w,c
  5425  0016C2  5C05               	subwf	___fladd@a^0,w,c
  5426  0016C4  6E09               	movwf	??___fladd^0,c
  5427  0016C6  5002               	movf	(___fladd@b+1)^0,w,c
  5428  0016C8  5806               	subwfb	(___fladd@a+1)^0,w,c
  5429  0016CA  6E0A               	movwf	(??___fladd+1)^0,c
  5430  0016CC  5003               	movf	(___fladd@b+2)^0,w,c
  5431  0016CE  5807               	subwfb	(___fladd@a+2)^0,w,c
  5432  0016D0  6E0B               	movwf	(??___fladd+2)^0,c
  5433  0016D2  5004               	movf	(___fladd@b+3)^0,w,c
  5434  0016D4  5808               	subwfb	(___fladd@a+3)^0,w,c
  5435  0016D6  6E0C               	movwf	(??___fladd+3)^0,c
  5436  0016D8  0EFF               	movlw	255
  5437  0016DA  2409               	addwf	??___fladd^0,w,c
  5438  0016DC  6E01               	movwf	___fladd@b^0,c
  5439  0016DE  0EFF               	movlw	255
  5440  0016E0  200A               	addwfc	(??___fladd+1)^0,w,c
  5441  0016E2  6E02               	movwf	(___fladd@b+1)^0,c
  5442  0016E4  0EFF               	movlw	255
  5443  0016E6  200B               	addwfc	(??___fladd+2)^0,w,c
  5444  0016E8  6E03               	movwf	(___fladd@b+2)^0,c
  5445  0016EA  0EFF               	movlw	255
  5446  0016EC  200C               	addwfc	(??___fladd+3)^0,w,c
  5447  0016EE  6E04               	movwf	(___fladd@b+3)^0,c
  5448  0016F0  0E80               	movlw	128
  5449  0016F2  1A0D               	xorwf	___fladd@signs^0,f,c
  5450  0016F4  6C10               	negf	___fladd@grs^0,c
  5451  0016F6  5010               	movf	___fladd@grs^0,w,c
  5452  0016F8  A4D8               	btfss	status,2,c
  5453  0016FA  EF81  F00B         	goto	u2681
  5454  0016FE  EF83  F00B         	goto	u2680
  5455  001702                     u2681:
  5456  001702  EF93  F00B         	goto	l635
  5457  001706                     u2680:
  5458  001706  0E01               	movlw	1
  5459  001708  2601               	addwf	___fladd@b^0,f,c
  5460  00170A  0E00               	movlw	0
  5461  00170C  2202               	addwfc	(___fladd@b+1)^0,f,c
  5462  00170E  2203               	addwfc	(___fladd@b+2)^0,f,c
  5463  001710  2204               	addwfc	(___fladd@b+3)^0,f,c
  5464  001712  EF93  F00B         	goto	l635
  5465  001716                     l2651:
  5466  001716  5005               	movf	___fladd@a^0,w,c
  5467  001718  5E01               	subwf	___fladd@b^0,f,c
  5468  00171A  5006               	movf	(___fladd@a+1)^0,w,c
  5469  00171C  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5470  00171E  5007               	movf	(___fladd@a+2)^0,w,c
  5471  001720  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5472  001722  5008               	movf	(___fladd@a+3)^0,w,c
  5473  001724  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5474  001726                     l635:
  5475  001726  5001               	movf	___fladd@b^0,w,c
  5476  001728  1002               	iorwf	(___fladd@b+1)^0,w,c
  5477  00172A  1003               	iorwf	(___fladd@b+2)^0,w,c
  5478  00172C  1004               	iorwf	(___fladd@b+3)^0,w,c
  5479  00172E  A4D8               	btfss	status,2,c
  5480  001730  EF9C  F00B         	goto	u2691
  5481  001734  EF9E  F00B         	goto	u2690
  5482  001738                     u2691:
  5483  001738  EFD3  F00B         	goto	l2675
  5484  00173C                     u2690:
  5485  00173C  5010               	movf	___fladd@grs^0,w,c
  5486  00173E  A4D8               	btfss	status,2,c
  5487  001740  EFA4  F00B         	goto	u2701
  5488  001744  EFA6  F00B         	goto	u2700
  5489  001748                     u2701:
  5490  001748  EFD3  F00B         	goto	l2675
  5491  00174C                     u2700:
  5492  00174C  0E00               	movlw	0
  5493  00174E  6E01               	movwf	?___fladd^0,c
  5494  001750  0E00               	movlw	0
  5495  001752  6E02               	movwf	(?___fladd+1)^0,c
  5496  001754  0E00               	movlw	0
  5497  001756  6E03               	movwf	(?___fladd+2)^0,c
  5498  001758  0E00               	movlw	0
  5499  00175A  6E04               	movwf	(?___fladd+3)^0,c
  5500  00175C  EF6E  F00C         	goto	l627
  5501  001760                     l2659:
  5502  001760  90D8               	bcf	status,0,c
  5503  001762  3601               	rlcf	___fladd@b^0,f,c
  5504  001764  3602               	rlcf	(___fladd@b+1)^0,f,c
  5505  001766  3603               	rlcf	(___fladd@b+2)^0,f,c
  5506  001768  3604               	rlcf	(___fladd@b+3)^0,f,c
  5507  00176A  AE10               	btfss	___fladd@grs^0,7,c
  5508  00176C  EFBA  F00B         	goto	u2711
  5509  001770  EFBC  F00B         	goto	u2710
  5510  001774                     u2711:
  5511  001774  EFBD  F00B         	goto	l2665
  5512  001778                     u2710:
  5513  001778  8001               	bsf	___fladd@b^0,0,c
  5514  00177A                     l2665:
  5515  00177A  A010               	btfss	___fladd@grs^0,0,c
  5516  00177C  EFC2  F00B         	goto	u2721
  5517  001780  EFC4  F00B         	goto	u2720
  5518  001784                     u2721:
  5519  001784  EFC8  F00B         	goto	l2669
  5520  001788                     u2720:
  5521  001788  80D8               	bsf	status,0,c
  5522  00178A  3610               	rlcf	___fladd@grs^0,f,c
  5523  00178C  EFCA  F00B         	goto	l2671
  5524  001790                     l2669:
  5525  001790  90D8               	bcf	status,0,c
  5526  001792  3610               	rlcf	___fladd@grs^0,f,c
  5527  001794                     l2671:
  5528  001794  500F               	movf	___fladd@bexp^0,w,c
  5529  001796  B4D8               	btfsc	status,2,c
  5530  001798  EFD0  F00B         	goto	u2731
  5531  00179C  EFD2  F00B         	goto	u2730
  5532  0017A0                     u2731:
  5533  0017A0  EFD3  F00B         	goto	l2675
  5534  0017A4                     u2730:
  5535  0017A4  060F               	decf	___fladd@bexp^0,f,c
  5536  0017A6                     l2675:
  5537  0017A6  AE03               	btfss	(___fladd@b+2)^0,7,c
  5538  0017A8  EFD8  F00B         	goto	u2741
  5539  0017AC  EFDA  F00B         	goto	u2740
  5540  0017B0                     u2741:
  5541  0017B0  EFB0  F00B         	goto	l2659
  5542  0017B4                     u2740:
  5543  0017B4                     l2677:
  5544  0017B4  0E00               	movlw	0
  5545  0017B6  6E0E               	movwf	___fladd@aexp^0,c
  5546  0017B8  AE10               	btfss	___fladd@grs^0,7,c
  5547  0017BA  EFE1  F00B         	goto	u2751
  5548  0017BE  EFE3  F00B         	goto	u2750
  5549  0017C2                     u2751:
  5550  0017C2  EFFB  F00B         	goto	l644
  5551  0017C6                     u2750:
  5552  0017C6  C010  F009         	movff	___fladd@grs,??___fladd
  5553  0017CA  0E7F               	movlw	127
  5554  0017CC  1609               	andwf	??___fladd^0,f,c
  5555  0017CE  B4D8               	btfsc	status,2,c
  5556  0017D0  EFEC  F00B         	goto	u2761
  5557  0017D4  EFEE  F00B         	goto	u2760
  5558  0017D8                     u2761:
  5559  0017D8  EFF2  F00B         	goto	l645
  5560  0017DC                     u2760:
  5561  0017DC                     l2683:
  5562  0017DC  0E01               	movlw	1
  5563  0017DE  6E0E               	movwf	___fladd@aexp^0,c
  5564  0017E0  EFFB  F00B         	goto	l644
  5565  0017E4                     l645:
  5566  0017E4  A001               	btfss	___fladd@b^0,0,c
  5567  0017E6  EFF7  F00B         	goto	u2771
  5568  0017EA  EFF9  F00B         	goto	u2770
  5569  0017EE                     u2771:
  5570  0017EE  EFFB  F00B         	goto	l644
  5571  0017F2                     u2770:
  5572  0017F2  EFEE  F00B         	goto	l2683
  5573  0017F6                     l644:
  5574  0017F6  500E               	movf	___fladd@aexp^0,w,c
  5575  0017F8  B4D8               	btfsc	status,2,c
  5576  0017FA  EF01  F00C         	goto	u2781
  5577  0017FE  EF03  F00C         	goto	u2780
  5578  001802                     u2781:
  5579  001802  EF2E  F00C         	goto	l2695
  5580  001806                     u2780:
  5581  001806  0E01               	movlw	1
  5582  001808  2601               	addwf	___fladd@b^0,f,c
  5583  00180A  0E00               	movlw	0
  5584  00180C  2202               	addwfc	(___fladd@b+1)^0,f,c
  5585  00180E  2203               	addwfc	(___fladd@b+2)^0,f,c
  5586  001810  2204               	addwfc	(___fladd@b+3)^0,f,c
  5587  001812  A004               	btfss	(___fladd@b+3)^0,0,c
  5588  001814  EF0E  F00C         	goto	u2791
  5589  001818  EF10  F00C         	goto	u2790
  5590  00181C                     u2791:
  5591  00181C  EF2E  F00C         	goto	l2695
  5592  001820                     u2790:
  5593  001820  C001  F009         	movff	___fladd@b,??___fladd
  5594  001824  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5595  001828  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5596  00182C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5597  001830  340C               	rlcf	(??___fladd+3)^0,w,c
  5598  001832  320C               	rrcf	(??___fladd+3)^0,f,c
  5599  001834  320B               	rrcf	(??___fladd+2)^0,f,c
  5600  001836  320A               	rrcf	(??___fladd+1)^0,f,c
  5601  001838  3209               	rrcf	??___fladd^0,f,c
  5602  00183A  C009  F001         	movff	??___fladd,___fladd@b
  5603  00183E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5604  001842  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5605  001846  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5606  00184A  280F               	incf	___fladd@bexp^0,w,c
  5607  00184C  B4D8               	btfsc	status,2,c
  5608  00184E  EF2B  F00C         	goto	u2801
  5609  001852  EF2D  F00C         	goto	u2800
  5610  001856                     u2801:
  5611  001856  EF2E  F00C         	goto	l2695
  5612  00185A                     u2800:
  5613  00185A  2A0F               	incf	___fladd@bexp^0,f,c
  5614  00185C                     l2695:
  5615  00185C  280F               	incf	___fladd@bexp^0,w,c
  5616  00185E  B4D8               	btfsc	status,2,c
  5617  001860  EF34  F00C         	goto	u2811
  5618  001864  EF36  F00C         	goto	u2810
  5619  001868                     u2811:
  5620  001868  EF3E  F00C         	goto	l2699
  5621  00186C                     u2810:
  5622  00186C  500F               	movf	___fladd@bexp^0,w,c
  5623  00186E  A4D8               	btfss	status,2,c
  5624  001870  EF3C  F00C         	goto	u2821
  5625  001874  EF3E  F00C         	goto	u2820
  5626  001878                     u2821:
  5627  001878  EF50  F00C         	goto	l2703
  5628  00187C                     u2820:
  5629  00187C                     l2699:
  5630  00187C  0E00               	movlw	0
  5631  00187E  6E01               	movwf	___fladd@b^0,c
  5632  001880  0E00               	movlw	0
  5633  001882  6E02               	movwf	(___fladd@b+1)^0,c
  5634  001884  0E00               	movlw	0
  5635  001886  6E03               	movwf	(___fladd@b+2)^0,c
  5636  001888  0E00               	movlw	0
  5637  00188A  6E04               	movwf	(___fladd@b+3)^0,c
  5638  00188C  500F               	movf	___fladd@bexp^0,w,c
  5639  00188E  A4D8               	btfss	status,2,c
  5640  001890  EF4C  F00C         	goto	u2831
  5641  001894  EF4E  F00C         	goto	u2830
  5642  001898                     u2831:
  5643  001898  EF50  F00C         	goto	l2703
  5644  00189C                     u2830:
  5645  00189C  0E00               	movlw	0
  5646  00189E  6E0D               	movwf	___fladd@signs^0,c
  5647  0018A0                     l2703:
  5648  0018A0  A00F               	btfss	___fladd@bexp^0,0,c
  5649  0018A2  EF55  F00C         	goto	u2841
  5650  0018A6  EF57  F00C         	goto	u2840
  5651  0018AA                     u2841:
  5652  0018AA  EF5A  F00C         	goto	l2707
  5653  0018AE                     u2840:
  5654  0018AE  8E03               	bsf	(___fladd@b+2)^0,7,c
  5655  0018B0  EF5B  F00C         	goto	l2709
  5656  0018B4                     l2707:
  5657  0018B4  9E03               	bcf	(___fladd@b+2)^0,7,c
  5658  0018B6                     l2709:
  5659  0018B6  90D8               	bcf	status,0,c
  5660  0018B8  300F               	rrcf	___fladd@bexp^0,w,c
  5661  0018BA  6E04               	movwf	(___fladd@b+3)^0,c
  5662  0018BC  AE0D               	btfss	___fladd@signs^0,7,c
  5663  0018BE  EF63  F00C         	goto	u2851
  5664  0018C2  EF65  F00C         	goto	u2850
  5665  0018C6                     u2851:
  5666  0018C6  EF66  F00C         	goto	l2715
  5667  0018CA                     u2850:
  5668  0018CA  8E04               	bsf	(___fladd@b+3)^0,7,c
  5669  0018CC                     l2715:
  5670  0018CC  C001  F001         	movff	___fladd@b,?___fladd
  5671  0018D0  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5672  0018D4  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5673  0018D8  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5674  0018DC                     l627:
  5675  0018DC  0012               	return		;funcret
  5676  0018DE                     __end_of___fladd:
  5677                           	callstack 0
  5678                           
  5679 ;; *************** function ___flneg *****************
  5680 ;; Defined at:
  5681 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  f1              4    0[COMRAM] unsigned char 
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;		None
  5686 ;; Return value:  Size  Location     Type
  5687 ;;                  4    0[COMRAM] unsigned char 
  5688 ;; Registers used:
  5689 ;;		wreg, status,2, status,0
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/0
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5695 ;;      Params:         4       0       0       0       0       0       0       0       0
  5696 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5697 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5698 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5699 ;;Total ram usage:        4 bytes
  5700 ;; Hardware stack levels used:    1
  5701 ;; Hardware stack levels required when called:    1
  5702 ;; This function calls:
  5703 ;;		Nothing
  5704 ;; This function is called by:
  5705 ;;		_efgtoa
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           	psect	text21
  5710  003672                     __ptext21:
  5711                           	callstack 0
  5712  003672                     ___flneg:
  5713                           	callstack 24
  5714  003672  5001               	movf	___flneg@f1^0,w,c
  5715  003674  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5716  003676  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5717  003678  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5718  00367A  B4D8               	btfsc	status,2,c
  5719  00367C  EF42  F01B         	goto	u3521
  5720  003680  EF44  F01B         	goto	u3520
  5721  003684                     u3521:
  5722  003684  EF4C  F01B         	goto	l3143
  5723  003688                     u3520:
  5724  003688  0E00               	movlw	0
  5725  00368A  1A01               	xorwf	___flneg@f1^0,f,c
  5726  00368C  0E00               	movlw	0
  5727  00368E  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5728  003690  0E00               	movlw	0
  5729  003692  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5730  003694  0E80               	movlw	128
  5731  003696  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5732  003698                     l3143:
  5733  003698  C001  F001         	movff	___flneg@f1,?___flneg
  5734  00369C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5735  0036A0  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5736  0036A4  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5737  0036A8  0012               	return		;funcret
  5738  0036AA                     __end_of___flneg:
  5739                           	callstack 0
  5740                           
  5741 ;; *************** function ___flmul *****************
  5742 ;; Defined at:
  5743 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  b               4   14[COMRAM] unsigned char 
  5746 ;;  a               4   18[COMRAM] unsigned char 
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;  prod            4   33[COMRAM] struct .
  5749 ;;  grs             4   27[COMRAM] unsigned long 
  5750 ;;  temp            2   37[COMRAM] struct .
  5751 ;;  bexp            1   32[COMRAM] unsigned char 
  5752 ;;  aexp            1   31[COMRAM] unsigned char 
  5753 ;;  sign            1   26[COMRAM] unsigned char 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  4   14[COMRAM] unsigned char 
  5756 ;; Registers used:
  5757 ;;		wreg, status,2, status,0, prodl, prodh
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5763 ;;      Params:         8       0       0       0       0       0       0       0       0
  5764 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5765 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5766 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5767 ;;Total ram usage:       25 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; Hardware stack levels required when called:    1
  5770 ;; This function calls:
  5771 ;;		Nothing
  5772 ;; This function is called by:
  5773 ;;		_mostra_resultado
  5774 ;;		_efgtoa
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	text22
  5779  001D74                     __ptext22:
  5780                           	callstack 0
  5781  001D74                     ___flmul:
  5782                           	callstack 24
  5783  001D74  5012               	movf	(___flmul@b+3)^0,w,c
  5784  001D76  0B80               	andlw	128
  5785  001D78  6E1B               	movwf	___flmul@sign^0,c
  5786  001D7A  5012               	movf	(___flmul@b+3)^0,w,c
  5787  001D7C  2412               	addwf	(___flmul@b+3)^0,w,c
  5788  001D7E  6E21               	movwf	___flmul@bexp^0,c
  5789  001D80  AE11               	btfss	(___flmul@b+2)^0,7,c
  5790  001D82  EFC5  F00E         	goto	u3131
  5791  001D86  EFC7  F00E         	goto	u3130
  5792  001D8A                     u3131:
  5793  001D8A  EFC8  F00E         	goto	l2891
  5794  001D8E                     u3130:
  5795  001D8E  8021               	bsf	___flmul@bexp^0,0,c
  5796  001D90                     l2891:
  5797  001D90  5021               	movf	___flmul@bexp^0,w,c
  5798  001D92  B4D8               	btfsc	status,2,c
  5799  001D94  EFCE  F00E         	goto	u3141
  5800  001D98  EFD0  F00E         	goto	u3140
  5801  001D9C                     u3141:
  5802  001D9C  EFE3  F00E         	goto	l2899
  5803  001DA0                     u3140:
  5804  001DA0  2821               	incf	___flmul@bexp^0,w,c
  5805  001DA2  A4D8               	btfss	status,2,c
  5806  001DA4  EFD6  F00E         	goto	u3151
  5807  001DA8  EFD8  F00E         	goto	u3150
  5808  001DAC                     u3151:
  5809  001DAC  EFE0  F00E         	goto	l2897
  5810  001DB0                     u3150:
  5811  001DB0  0E00               	movlw	0
  5812  001DB2  6E0F               	movwf	___flmul@b^0,c
  5813  001DB4  0E00               	movlw	0
  5814  001DB6  6E10               	movwf	(___flmul@b+1)^0,c
  5815  001DB8  0E00               	movlw	0
  5816  001DBA  6E11               	movwf	(___flmul@b+2)^0,c
  5817  001DBC  0E00               	movlw	0
  5818  001DBE  6E12               	movwf	(___flmul@b+3)^0,c
  5819  001DC0                     l2897:
  5820  001DC0  8E11               	bsf	(___flmul@b+2)^0,7,c
  5821  001DC2  EFEB  F00E         	goto	l2901
  5822  001DC6                     l2899:
  5823  001DC6  0E00               	movlw	0
  5824  001DC8  6E0F               	movwf	___flmul@b^0,c
  5825  001DCA  0E00               	movlw	0
  5826  001DCC  6E10               	movwf	(___flmul@b+1)^0,c
  5827  001DCE  0E00               	movlw	0
  5828  001DD0  6E11               	movwf	(___flmul@b+2)^0,c
  5829  001DD2  0E00               	movlw	0
  5830  001DD4  6E12               	movwf	(___flmul@b+3)^0,c
  5831  001DD6                     l2901:
  5832  001DD6  5016               	movf	(___flmul@a+3)^0,w,c
  5833  001DD8  0B80               	andlw	128
  5834  001DDA  1A1B               	xorwf	___flmul@sign^0,f,c
  5835  001DDC  5016               	movf	(___flmul@a+3)^0,w,c
  5836  001DDE  2416               	addwf	(___flmul@a+3)^0,w,c
  5837  001DE0  6E20               	movwf	___flmul@aexp^0,c
  5838  001DE2  AE15               	btfss	(___flmul@a+2)^0,7,c
  5839  001DE4  EFF6  F00E         	goto	u3161
  5840  001DE8  EFF8  F00E         	goto	u3160
  5841  001DEC                     u3161:
  5842  001DEC  EFF9  F00E         	goto	l2909
  5843  001DF0                     u3160:
  5844  001DF0  8020               	bsf	___flmul@aexp^0,0,c
  5845  001DF2                     l2909:
  5846  001DF2  5020               	movf	___flmul@aexp^0,w,c
  5847  001DF4  B4D8               	btfsc	status,2,c
  5848  001DF6  EFFF  F00E         	goto	u3171
  5849  001DFA  EF01  F00F         	goto	u3170
  5850  001DFE                     u3171:
  5851  001DFE  EF14  F00F         	goto	l2917
  5852  001E02                     u3170:
  5853  001E02  2820               	incf	___flmul@aexp^0,w,c
  5854  001E04  A4D8               	btfss	status,2,c
  5855  001E06  EF07  F00F         	goto	u3181
  5856  001E0A  EF09  F00F         	goto	u3180
  5857  001E0E                     u3181:
  5858  001E0E  EF11  F00F         	goto	l2915
  5859  001E12                     u3180:
  5860  001E12  0E00               	movlw	0
  5861  001E14  6E13               	movwf	___flmul@a^0,c
  5862  001E16  0E00               	movlw	0
  5863  001E18  6E14               	movwf	(___flmul@a+1)^0,c
  5864  001E1A  0E00               	movlw	0
  5865  001E1C  6E15               	movwf	(___flmul@a+2)^0,c
  5866  001E1E  0E00               	movlw	0
  5867  001E20  6E16               	movwf	(___flmul@a+3)^0,c
  5868  001E22                     l2915:
  5869  001E22  8E15               	bsf	(___flmul@a+2)^0,7,c
  5870  001E24  EF1C  F00F         	goto	l704
  5871  001E28                     l2917:
  5872  001E28  0E00               	movlw	0
  5873  001E2A  6E13               	movwf	___flmul@a^0,c
  5874  001E2C  0E00               	movlw	0
  5875  001E2E  6E14               	movwf	(___flmul@a+1)^0,c
  5876  001E30  0E00               	movlw	0
  5877  001E32  6E15               	movwf	(___flmul@a+2)^0,c
  5878  001E34  0E00               	movlw	0
  5879  001E36  6E16               	movwf	(___flmul@a+3)^0,c
  5880  001E38                     l704:
  5881  001E38  5020               	movf	___flmul@aexp^0,w,c
  5882  001E3A  B4D8               	btfsc	status,2,c
  5883  001E3C  EF22  F00F         	goto	u3191
  5884  001E40  EF24  F00F         	goto	u3190
  5885  001E44                     u3191:
  5886  001E44  EF2C  F00F         	goto	l2921
  5887  001E48                     u3190:
  5888  001E48  5021               	movf	___flmul@bexp^0,w,c
  5889  001E4A  A4D8               	btfss	status,2,c
  5890  001E4C  EF2A  F00F         	goto	u3201
  5891  001E50  EF2C  F00F         	goto	u3200
  5892  001E54                     u3201:
  5893  001E54  EF36  F00F         	goto	l2925
  5894  001E58                     u3200:
  5895  001E58                     l2921:
  5896  001E58  0E00               	movlw	0
  5897  001E5A  6E0F               	movwf	?___flmul^0,c
  5898  001E5C  0E00               	movlw	0
  5899  001E5E  6E10               	movwf	(?___flmul+1)^0,c
  5900  001E60  0E00               	movlw	0
  5901  001E62  6E11               	movwf	(?___flmul+2)^0,c
  5902  001E64  0E00               	movlw	0
  5903  001E66  6E12               	movwf	(?___flmul+3)^0,c
  5904  001E68  EFCE  F010         	goto	l708
  5905  001E6C                     l2925:
  5906  001E6C  5015               	movf	(___flmul@a+2)^0,w,c
  5907  001E6E  020F               	mulwf	___flmul@b^0,c
  5908  001E70  CFF3 F026          	movff	prodl,___flmul@temp
  5909  001E74  CFF4 F027          	movff	prodh,___flmul@temp+1
  5910  001E78  5026               	movf	___flmul@temp^0,w,c
  5911  001E7A  6E1C               	movwf	___flmul@grs^0,c
  5912  001E7C  6A1D               	clrf	(___flmul@grs+1)^0,c
  5913  001E7E  6A1E               	clrf	(___flmul@grs+2)^0,c
  5914  001E80  6A1F               	clrf	(___flmul@grs+3)^0,c
  5915  001E82  5027               	movf	(___flmul@temp+1)^0,w,c
  5916  001E84  6E22               	movwf	___flmul@prod^0,c
  5917  001E86  6A23               	clrf	(___flmul@prod+1)^0,c
  5918  001E88  6A24               	clrf	(___flmul@prod+2)^0,c
  5919  001E8A  6A25               	clrf	(___flmul@prod+3)^0,c
  5920  001E8C  5014               	movf	(___flmul@a+1)^0,w,c
  5921  001E8E  0210               	mulwf	(___flmul@b+1)^0,c
  5922  001E90  CFF3 F026          	movff	prodl,___flmul@temp
  5923  001E94  CFF4 F027          	movff	prodh,___flmul@temp+1
  5924  001E98  5026               	movf	___flmul@temp^0,w,c
  5925  001E9A  261C               	addwf	___flmul@grs^0,f,c
  5926  001E9C  0E00               	movlw	0
  5927  001E9E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5928  001EA0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5929  001EA2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5930  001EA4  5027               	movf	(___flmul@temp+1)^0,w,c
  5931  001EA6  2622               	addwf	___flmul@prod^0,f,c
  5932  001EA8  0E00               	movlw	0
  5933  001EAA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5934  001EAC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5935  001EAE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5936  001EB0  5013               	movf	___flmul@a^0,w,c
  5937  001EB2  0211               	mulwf	(___flmul@b+2)^0,c
  5938  001EB4  CFF3 F026          	movff	prodl,___flmul@temp
  5939  001EB8  CFF4 F027          	movff	prodh,___flmul@temp+1
  5940  001EBC  5026               	movf	___flmul@temp^0,w,c
  5941  001EBE  261C               	addwf	___flmul@grs^0,f,c
  5942  001EC0  0E00               	movlw	0
  5943  001EC2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5944  001EC4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5945  001EC6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5946  001EC8  5027               	movf	(___flmul@temp+1)^0,w,c
  5947  001ECA  2622               	addwf	___flmul@prod^0,f,c
  5948  001ECC  0E00               	movlw	0
  5949  001ECE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5950  001ED0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5951  001ED2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5952  001ED4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5953  001ED8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5954  001EDC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5955  001EE0  6A1C               	clrf	___flmul@grs^0,c
  5956  001EE2  5013               	movf	___flmul@a^0,w,c
  5957  001EE4  0210               	mulwf	(___flmul@b+1)^0,c
  5958  001EE6  CFF3 F026          	movff	prodl,___flmul@temp
  5959  001EEA  CFF4 F027          	movff	prodh,___flmul@temp+1
  5960  001EEE  5026               	movf	___flmul@temp^0,w,c
  5961  001EF0  261C               	addwf	___flmul@grs^0,f,c
  5962  001EF2  5027               	movf	(___flmul@temp+1)^0,w,c
  5963  001EF4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5964  001EF6  0E00               	movlw	0
  5965  001EF8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5966  001EFA  0E00               	movlw	0
  5967  001EFC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5968  001EFE  5014               	movf	(___flmul@a+1)^0,w,c
  5969  001F00  020F               	mulwf	___flmul@b^0,c
  5970  001F02  CFF3 F026          	movff	prodl,___flmul@temp
  5971  001F06  CFF4 F027          	movff	prodh,___flmul@temp+1
  5972  001F0A  5026               	movf	___flmul@temp^0,w,c
  5973  001F0C  261C               	addwf	___flmul@grs^0,f,c
  5974  001F0E  5027               	movf	(___flmul@temp+1)^0,w,c
  5975  001F10  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5976  001F12  0E00               	movlw	0
  5977  001F14  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5978  001F16  0E00               	movlw	0
  5979  001F18  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5980  001F1A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5981  001F1E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5982  001F22  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5983  001F26  6A1C               	clrf	___flmul@grs^0,c
  5984  001F28  5013               	movf	___flmul@a^0,w,c
  5985  001F2A  020F               	mulwf	___flmul@b^0,c
  5986  001F2C  CFF3 F026          	movff	prodl,___flmul@temp
  5987  001F30  CFF4 F027          	movff	prodh,___flmul@temp+1
  5988  001F34  5026               	movf	___flmul@temp^0,w,c
  5989  001F36  261C               	addwf	___flmul@grs^0,f,c
  5990  001F38  5027               	movf	(___flmul@temp+1)^0,w,c
  5991  001F3A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5992  001F3C  0E00               	movlw	0
  5993  001F3E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5994  001F40  0E00               	movlw	0
  5995  001F42  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5996  001F44  5015               	movf	(___flmul@a+2)^0,w,c
  5997  001F46  0210               	mulwf	(___flmul@b+1)^0,c
  5998  001F48  CFF3 F026          	movff	prodl,___flmul@temp
  5999  001F4C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6000  001F50  5026               	movf	___flmul@temp^0,w,c
  6001  001F52  2622               	addwf	___flmul@prod^0,f,c
  6002  001F54  5027               	movf	(___flmul@temp+1)^0,w,c
  6003  001F56  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6004  001F58  0E00               	movlw	0
  6005  001F5A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6006  001F5C  0E00               	movlw	0
  6007  001F5E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6008  001F60  5014               	movf	(___flmul@a+1)^0,w,c
  6009  001F62  0211               	mulwf	(___flmul@b+2)^0,c
  6010  001F64  CFF3 F026          	movff	prodl,___flmul@temp
  6011  001F68  CFF4 F027          	movff	prodh,___flmul@temp+1
  6012  001F6C  5026               	movf	___flmul@temp^0,w,c
  6013  001F6E  2622               	addwf	___flmul@prod^0,f,c
  6014  001F70  5027               	movf	(___flmul@temp+1)^0,w,c
  6015  001F72  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6016  001F74  0E00               	movlw	0
  6017  001F76  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6018  001F78  0E00               	movlw	0
  6019  001F7A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6020  001F7C  5015               	movf	(___flmul@a+2)^0,w,c
  6021  001F7E  0211               	mulwf	(___flmul@b+2)^0,c
  6022  001F80  CFF3 F026          	movff	prodl,___flmul@temp
  6023  001F84  CFF4 F027          	movff	prodh,___flmul@temp+1
  6024  001F88  5026               	movf	___flmul@temp^0,w,c
  6025  001F8A  6E17               	movwf	??___flmul^0,c
  6026  001F8C  5027               	movf	(___flmul@temp+1)^0,w,c
  6027  001F8E  6E18               	movwf	(??___flmul+1)^0,c
  6028  001F90  6A19               	clrf	(??___flmul+2)^0,c
  6029  001F92  6A1A               	clrf	(??___flmul+3)^0,c
  6030  001F94  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6031  001F98  C018  F019         	movff	??___flmul+1,??___flmul+2
  6032  001F9C  C017  F018         	movff	??___flmul,??___flmul+1
  6033  001FA0  6A17               	clrf	??___flmul^0,c
  6034  001FA2  5017               	movf	??___flmul^0,w,c
  6035  001FA4  2622               	addwf	___flmul@prod^0,f,c
  6036  001FA6  5018               	movf	(??___flmul+1)^0,w,c
  6037  001FA8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6038  001FAA  5019               	movf	(??___flmul+2)^0,w,c
  6039  001FAC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6040  001FAE  501A               	movf	(??___flmul+3)^0,w,c
  6041  001FB0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6042  001FB2  C01C  F017         	movff	___flmul@grs,??___flmul
  6043  001FB6  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6044  001FBA  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6045  001FBE  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6046  001FC2  0E19               	movlw	25
  6047  001FC4  EFE9  F00F         	goto	u3210
  6048  001FC8                     u3215:
  6049  001FC8  90D8               	bcf	status,0,c
  6050  001FCA  321A               	rrcf	(??___flmul+3)^0,f,c
  6051  001FCC  3219               	rrcf	(??___flmul+2)^0,f,c
  6052  001FCE  3218               	rrcf	(??___flmul+1)^0,f,c
  6053  001FD0  3217               	rrcf	??___flmul^0,f,c
  6054  001FD2                     u3210:
  6055  001FD2  2EE8               	decfsz	wreg,f,c
  6056  001FD4  EFE4  F00F         	goto	u3215
  6057  001FD8  5017               	movf	??___flmul^0,w,c
  6058  001FDA  2622               	addwf	___flmul@prod^0,f,c
  6059  001FDC  5018               	movf	(??___flmul+1)^0,w,c
  6060  001FDE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6061  001FE0  5019               	movf	(??___flmul+2)^0,w,c
  6062  001FE2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6063  001FE4  501A               	movf	(??___flmul+3)^0,w,c
  6064  001FE6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6065  001FE8  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6066  001FEC  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6067  001FF0  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6068  001FF4  6A1C               	clrf	___flmul@grs^0,c
  6069  001FF6  5020               	movf	___flmul@aexp^0,w,c
  6070  001FF8  C021  F017         	movff	___flmul@bexp,??___flmul
  6071  001FFC  6A18               	clrf	(??___flmul+1)^0,c
  6072  001FFE  2617               	addwf	??___flmul^0,f,c
  6073  002000  0E00               	movlw	0
  6074  002002  2218               	addwfc	(??___flmul+1)^0,f,c
  6075  002004  0E82               	movlw	130
  6076  002006  2417               	addwf	??___flmul^0,w,c
  6077  002008  6E26               	movwf	___flmul@temp^0,c
  6078  00200A  0EFF               	movlw	255
  6079  00200C  2018               	addwfc	(??___flmul+1)^0,w,c
  6080  00200E  6E27               	movwf	(___flmul@temp+1)^0,c
  6081  002010  EF1F  F010         	goto	l2973
  6082  002014                     l2967:
  6083  002014  90D8               	bcf	status,0,c
  6084  002016  3622               	rlcf	___flmul@prod^0,f,c
  6085  002018  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6086  00201A  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6087  00201C  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6088  00201E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6089  002020  EF14  F010         	goto	u3221
  6090  002024  EF16  F010         	goto	u3220
  6091  002028                     u3221:
  6092  002028  EF17  F010         	goto	l711
  6093  00202C                     u3220:
  6094  00202C  8022               	bsf	___flmul@prod^0,0,c
  6095  00202E                     l711:
  6096  00202E  90D8               	bcf	status,0,c
  6097  002030  361C               	rlcf	___flmul@grs^0,f,c
  6098  002032  361D               	rlcf	(___flmul@grs+1)^0,f,c
  6099  002034  361E               	rlcf	(___flmul@grs+2)^0,f,c
  6100  002036  361F               	rlcf	(___flmul@grs+3)^0,f,c
  6101  002038  0626               	decf	___flmul@temp^0,f,c
  6102  00203A  A0D8               	btfss	status,0,c
  6103  00203C  0627               	decf	(___flmul@temp+1)^0,f,c
  6104  00203E                     l2973:
  6105  00203E  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6106  002040  EF24  F010         	goto	u3231
  6107  002044  EF26  F010         	goto	u3230
  6108  002048                     u3231:
  6109  002048  EF0A  F010         	goto	l2967
  6110  00204C                     u3230:
  6111  00204C  0E00               	movlw	0
  6112  00204E  6E20               	movwf	___flmul@aexp^0,c
  6113  002050  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6114  002052  EF2D  F010         	goto	u3241
  6115  002056  EF2F  F010         	goto	u3240
  6116  00205A                     u3241:
  6117  00205A  EF53  F010         	goto	l713
  6118  00205E                     u3240:
  6119  00205E  0EFF               	movlw	255
  6120  002060  141C               	andwf	___flmul@grs^0,w,c
  6121  002062  6E17               	movwf	??___flmul^0,c
  6122  002064  0EFF               	movlw	255
  6123  002066  141D               	andwf	(___flmul@grs+1)^0,w,c
  6124  002068  6E18               	movwf	(??___flmul+1)^0,c
  6125  00206A  0EFF               	movlw	255
  6126  00206C  141E               	andwf	(___flmul@grs+2)^0,w,c
  6127  00206E  6E19               	movwf	(??___flmul+2)^0,c
  6128  002070  0E7F               	movlw	127
  6129  002072  141F               	andwf	(___flmul@grs+3)^0,w,c
  6130  002074  6E1A               	movwf	(??___flmul+3)^0,c
  6131  002076  5017               	movf	??___flmul^0,w,c
  6132  002078  1018               	iorwf	(??___flmul+1)^0,w,c
  6133  00207A  1019               	iorwf	(??___flmul+2)^0,w,c
  6134  00207C  101A               	iorwf	(??___flmul+3)^0,w,c
  6135  00207E  B4D8               	btfsc	status,2,c
  6136  002080  EF44  F010         	goto	u3251
  6137  002084  EF46  F010         	goto	u3250
  6138  002088                     u3251:
  6139  002088  EF4A  F010         	goto	l714
  6140  00208C                     u3250:
  6141  00208C                     l2981:
  6142  00208C  0E01               	movlw	1
  6143  00208E  6E20               	movwf	___flmul@aexp^0,c
  6144  002090  EF53  F010         	goto	l713
  6145  002094                     l714:
  6146  002094  A022               	btfss	___flmul@prod^0,0,c
  6147  002096  EF4F  F010         	goto	u3261
  6148  00209A  EF51  F010         	goto	u3260
  6149  00209E                     u3261:
  6150  00209E  EF53  F010         	goto	l713
  6151  0020A2                     u3260:
  6152  0020A2  EF46  F010         	goto	l2981
  6153  0020A6                     l713:
  6154  0020A6  5020               	movf	___flmul@aexp^0,w,c
  6155  0020A8  B4D8               	btfsc	status,2,c
  6156  0020AA  EF59  F010         	goto	u3271
  6157  0020AE  EF5B  F010         	goto	u3270
  6158  0020B2                     u3271:
  6159  0020B2  EF7F  F010         	goto	l2993
  6160  0020B6                     u3270:
  6161  0020B6  0E01               	movlw	1
  6162  0020B8  2622               	addwf	___flmul@prod^0,f,c
  6163  0020BA  0E00               	movlw	0
  6164  0020BC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6165  0020BE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6166  0020C0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6167  0020C2  A025               	btfss	(___flmul@prod+3)^0,0,c
  6168  0020C4  EF66  F010         	goto	u3281
  6169  0020C8  EF68  F010         	goto	u3280
  6170  0020CC                     u3281:
  6171  0020CC  EF7F  F010         	goto	l2993
  6172  0020D0                     u3280:
  6173  0020D0  C022  F017         	movff	___flmul@prod,??___flmul
  6174  0020D4  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6175  0020D8  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6176  0020DC  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6177  0020E0  341A               	rlcf	(??___flmul+3)^0,w,c
  6178  0020E2  321A               	rrcf	(??___flmul+3)^0,f,c
  6179  0020E4  3219               	rrcf	(??___flmul+2)^0,f,c
  6180  0020E6  3218               	rrcf	(??___flmul+1)^0,f,c
  6181  0020E8  3217               	rrcf	??___flmul^0,f,c
  6182  0020EA  C017  F022         	movff	??___flmul,___flmul@prod
  6183  0020EE  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6184  0020F2  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6185  0020F6  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6186  0020FA  4A26               	infsnz	___flmul@temp^0,f,c
  6187  0020FC  2A27               	incf	(___flmul@temp+1)^0,f,c
  6188  0020FE                     l2993:
  6189  0020FE  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6190  002100  EF8A  F010         	goto	u3291
  6191  002104  5027               	movf	(___flmul@temp+1)^0,w,c
  6192  002106  E108               	bnz	u3290
  6193  002108  2826               	incf	___flmul@temp^0,w,c
  6194  00210A  A0D8               	btfss	status,0,c
  6195  00210C  EF8A  F010         	goto	u3291
  6196  002110  EF8C  F010         	goto	u3290
  6197  002114                     u3291:
  6198  002114  EF96  F010         	goto	l2997
  6199  002118                     u3290:
  6200  002118  0E00               	movlw	0
  6201  00211A  6E22               	movwf	___flmul@prod^0,c
  6202  00211C  0E00               	movlw	0
  6203  00211E  6E23               	movwf	(___flmul@prod+1)^0,c
  6204  002120  0E80               	movlw	128
  6205  002122  6E24               	movwf	(___flmul@prod+2)^0,c
  6206  002124  0E7F               	movlw	127
  6207  002126  6E25               	movwf	(___flmul@prod+3)^0,c
  6208  002128  EFC4  F010         	goto	l3009
  6209  00212C                     l2997:
  6210  00212C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6211  00212E  EFA3  F010         	goto	u3300
  6212  002132  5027               	movf	(___flmul@temp+1)^0,w,c
  6213  002134  E106               	bnz	u3301
  6214  002136  0426               	decf	___flmul@temp^0,w,c
  6215  002138  B0D8               	btfsc	status,0,c
  6216  00213A  EFA1  F010         	goto	u3301
  6217  00213E  EFA3  F010         	goto	u3300
  6218  002142                     u3301:
  6219  002142  EFAF  F010         	goto	l721
  6220  002146                     u3300:
  6221  002146  0E00               	movlw	0
  6222  002148  6E22               	movwf	___flmul@prod^0,c
  6223  00214A  0E00               	movlw	0
  6224  00214C  6E23               	movwf	(___flmul@prod+1)^0,c
  6225  00214E  0E00               	movlw	0
  6226  002150  6E24               	movwf	(___flmul@prod+2)^0,c
  6227  002152  0E00               	movlw	0
  6228  002154  6E25               	movwf	(___flmul@prod+3)^0,c
  6229  002156  0E00               	movlw	0
  6230  002158  6E1B               	movwf	___flmul@sign^0,c
  6231  00215A  EFC4  F010         	goto	l3009
  6232  00215E                     l721:
  6233  00215E  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6234  002162  0EFF               	movlw	255
  6235  002164  1622               	andwf	___flmul@prod^0,f,c
  6236  002166  0EFF               	movlw	255
  6237  002168  1623               	andwf	(___flmul@prod+1)^0,f,c
  6238  00216A  0E7F               	movlw	127
  6239  00216C  1624               	andwf	(___flmul@prod+2)^0,f,c
  6240  00216E  0E00               	movlw	0
  6241  002170  1625               	andwf	(___flmul@prod+3)^0,f,c
  6242  002172  A021               	btfss	___flmul@bexp^0,0,c
  6243  002174  EFBE  F010         	goto	u3311
  6244  002178  EFC0  F010         	goto	u3310
  6245  00217C                     u3311:
  6246  00217C  EFC1  F010         	goto	l3007
  6247  002180                     u3310:
  6248  002180  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6249  002182                     l3007:
  6250  002182  90D8               	bcf	status,0,c
  6251  002184  3021               	rrcf	___flmul@bexp^0,w,c
  6252  002186  6E25               	movwf	(___flmul@prod+3)^0,c
  6253  002188                     l3009:
  6254  002188  501B               	movf	___flmul@sign^0,w,c
  6255  00218A  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6256  00218C  C022  F00F         	movff	___flmul@prod,?___flmul
  6257  002190  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6258  002194  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6259  002198  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6260  00219C                     l708:
  6261  00219C  0012               	return		;funcret
  6262  00219E                     __end_of___flmul:
  6263                           	callstack 0
  6264                           
  6265 ;; *************** function ___flge *****************
  6266 ;; Defined at:
  6267 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;  ff1             4   39[COMRAM] unsigned char 
  6270 ;;  ff2             4   43[COMRAM] unsigned char 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;		None
  6273 ;; Return value:  Size  Location     Type
  6274 ;;		None               void
  6275 ;; Registers used:
  6276 ;;		wreg, status,2, status,0
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6282 ;;      Params:         8       0       0       0       0       0       0       0       0
  6283 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6284 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6285 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6286 ;;Total ram usage:       12 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; Hardware stack levels required when called:    1
  6289 ;; This function calls:
  6290 ;;		Nothing
  6291 ;; This function is called by:
  6292 ;;		_efgtoa
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296                           	psect	text23
  6297  002B94                     __ptext23:
  6298                           	callstack 0
  6299  002B94                     ___flge:
  6300                           	callstack 24
  6301  002B94  0E00               	movlw	0
  6302  002B96  1428               	andwf	___flge@ff1^0,w,c
  6303  002B98  6E30               	movwf	??___flge^0,c
  6304  002B9A  0E00               	movlw	0
  6305  002B9C  1429               	andwf	(___flge@ff1+1)^0,w,c
  6306  002B9E  6E31               	movwf	(??___flge+1)^0,c
  6307  002BA0  0E80               	movlw	128
  6308  002BA2  142A               	andwf	(___flge@ff1+2)^0,w,c
  6309  002BA4  6E32               	movwf	(??___flge+2)^0,c
  6310  002BA6  0E7F               	movlw	127
  6311  002BA8  142B               	andwf	(___flge@ff1+3)^0,w,c
  6312  002BAA  6E33               	movwf	(??___flge+3)^0,c
  6313  002BAC  5030               	movf	??___flge^0,w,c
  6314  002BAE  1031               	iorwf	(??___flge+1)^0,w,c
  6315  002BB0  1032               	iorwf	(??___flge+2)^0,w,c
  6316  002BB2  1033               	iorwf	(??___flge+3)^0,w,c
  6317  002BB4  A4D8               	btfss	status,2,c
  6318  002BB6  EFDF  F015         	goto	u3471
  6319  002BBA  EFE1  F015         	goto	u3470
  6320  002BBE                     u3471:
  6321  002BBE  EFE9  F015         	goto	l3121
  6322  002BC2                     u3470:
  6323  002BC2  0E00               	movlw	0
  6324  002BC4  6E28               	movwf	___flge@ff1^0,c
  6325  002BC6  0E00               	movlw	0
  6326  002BC8  6E29               	movwf	(___flge@ff1+1)^0,c
  6327  002BCA  0E00               	movlw	0
  6328  002BCC  6E2A               	movwf	(___flge@ff1+2)^0,c
  6329  002BCE  0E00               	movlw	0
  6330  002BD0  6E2B               	movwf	(___flge@ff1+3)^0,c
  6331  002BD2                     l3121:
  6332  002BD2  0E00               	movlw	0
  6333  002BD4  142C               	andwf	___flge@ff2^0,w,c
  6334  002BD6  6E30               	movwf	??___flge^0,c
  6335  002BD8  0E00               	movlw	0
  6336  002BDA  142D               	andwf	(___flge@ff2+1)^0,w,c
  6337  002BDC  6E31               	movwf	(??___flge+1)^0,c
  6338  002BDE  0E80               	movlw	128
  6339  002BE0  142E               	andwf	(___flge@ff2+2)^0,w,c
  6340  002BE2  6E32               	movwf	(??___flge+2)^0,c
  6341  002BE4  0E7F               	movlw	127
  6342  002BE6  142F               	andwf	(___flge@ff2+3)^0,w,c
  6343  002BE8  6E33               	movwf	(??___flge+3)^0,c
  6344  002BEA  5030               	movf	??___flge^0,w,c
  6345  002BEC  1031               	iorwf	(??___flge+1)^0,w,c
  6346  002BEE  1032               	iorwf	(??___flge+2)^0,w,c
  6347  002BF0  1033               	iorwf	(??___flge+3)^0,w,c
  6348  002BF2  A4D8               	btfss	status,2,c
  6349  002BF4  EFFE  F015         	goto	u3481
  6350  002BF8  EF00  F016         	goto	u3480
  6351  002BFC                     u3481:
  6352  002BFC  EF08  F016         	goto	l3125
  6353  002C00                     u3480:
  6354  002C00  0E00               	movlw	0
  6355  002C02  6E2C               	movwf	___flge@ff2^0,c
  6356  002C04  0E00               	movlw	0
  6357  002C06  6E2D               	movwf	(___flge@ff2+1)^0,c
  6358  002C08  0E00               	movlw	0
  6359  002C0A  6E2E               	movwf	(___flge@ff2+2)^0,c
  6360  002C0C  0E00               	movlw	0
  6361  002C0E  6E2F               	movwf	(___flge@ff2+3)^0,c
  6362  002C10                     l3125:
  6363  002C10  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6364  002C12  EF0D  F016         	goto	u3491
  6365  002C16  EF0F  F016         	goto	u3490
  6366  002C1A                     u3491:
  6367  002C1A  EF18  F016         	goto	l3129
  6368  002C1E                     u3490:
  6369  002C1E  6C28               	negf	___flge@ff1^0,c
  6370  002C20  1E29               	comf	(___flge@ff1+1)^0,f,c
  6371  002C22  B0D8               	btfsc	status,0,c
  6372  002C24  2A29               	incf	(___flge@ff1+1)^0,f,c
  6373  002C26  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6374  002C28  B0D8               	btfsc	status,0,c
  6375  002C2A  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6376  002C2C  0E80               	movlw	128
  6377  002C2E  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6378  002C30                     l3129:
  6379  002C30  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6380  002C32  EF1D  F016         	goto	u3501
  6381  002C36  EF1F  F016         	goto	u3500
  6382  002C3A                     u3501:
  6383  002C3A  EF28  F016         	goto	l355
  6384  002C3E                     u3500:
  6385  002C3E  6C2C               	negf	___flge@ff2^0,c
  6386  002C40  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6387  002C42  B0D8               	btfsc	status,0,c
  6388  002C44  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6389  002C46  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6390  002C48  B0D8               	btfsc	status,0,c
  6391  002C4A  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6392  002C4C  0E80               	movlw	128
  6393  002C4E  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6394  002C50                     l355:
  6395  002C50  0E00               	movlw	0
  6396  002C52  1A28               	xorwf	___flge@ff1^0,f,c
  6397  002C54  0E00               	movlw	0
  6398  002C56  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6399  002C58  0E00               	movlw	0
  6400  002C5A  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6401  002C5C  0E80               	movlw	128
  6402  002C5E  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6403  002C60  0E00               	movlw	0
  6404  002C62  1A2C               	xorwf	___flge@ff2^0,f,c
  6405  002C64  0E00               	movlw	0
  6406  002C66  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6407  002C68  0E00               	movlw	0
  6408  002C6A  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6409  002C6C  0E80               	movlw	128
  6410  002C6E  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6411  002C70  502C               	movf	___flge@ff2^0,w,c
  6412  002C72  5C28               	subwf	___flge@ff1^0,w,c
  6413  002C74  502D               	movf	(___flge@ff2+1)^0,w,c
  6414  002C76  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6415  002C78  502E               	movf	(___flge@ff2+2)^0,w,c
  6416  002C7A  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6417  002C7C  502F               	movf	(___flge@ff2+3)^0,w,c
  6418  002C7E  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6419  002C80  B0D8               	btfsc	status,0,c
  6420  002C82  EF45  F016         	goto	u3511
  6421  002C86  EF47  F016         	goto	u3510
  6422  002C8A                     u3511:
  6423  002C8A  EF4A  F016         	goto	l3135
  6424  002C8E                     u3510:
  6425  002C8E  90D8               	bcf	status,0,c
  6426  002C90  EF4B  F016         	goto	l360
  6427  002C94                     l3135:
  6428  002C94  80D8               	bsf	status,0,c
  6429  002C96                     l360:
  6430  002C96  0012               	return		;funcret
  6431  002C98                     __end_of___flge:
  6432                           	callstack 0
  6433                           
  6434 ;; *************** function ___fleq *****************
  6435 ;; Defined at:
  6436 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;  ff1             4    0[COMRAM] unsigned char 
  6439 ;;  ff2             4    4[COMRAM] unsigned char 
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;		None
  6442 ;; Return value:  Size  Location     Type
  6443 ;;		None               void
  6444 ;; Registers used:
  6445 ;;		wreg, status,2, status,0
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6451 ;;      Params:         8       0       0       0       0       0       0       0       0
  6452 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6453 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6454 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6455 ;;Total ram usage:       12 bytes
  6456 ;; Hardware stack levels used:    1
  6457 ;; Hardware stack levels required when called:    1
  6458 ;; This function calls:
  6459 ;;		Nothing
  6460 ;; This function is called by:
  6461 ;;		_efgtoa
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           	psect	text24
  6466  0030A6                     __ptext24:
  6467                           	callstack 0
  6468  0030A6                     ___fleq:
  6469                           	callstack 24
  6470  0030A6  0E00               	movlw	0
  6471  0030A8  1401               	andwf	___fleq@ff1^0,w,c
  6472  0030AA  6E09               	movwf	??___fleq^0,c
  6473  0030AC  0E00               	movlw	0
  6474  0030AE  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6475  0030B0  6E0A               	movwf	(??___fleq+1)^0,c
  6476  0030B2  0E80               	movlw	128
  6477  0030B4  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6478  0030B6  6E0B               	movwf	(??___fleq+2)^0,c
  6479  0030B8  0E7F               	movlw	127
  6480  0030BA  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6481  0030BC  6E0C               	movwf	(??___fleq+3)^0,c
  6482  0030BE  5009               	movf	??___fleq^0,w,c
  6483  0030C0  100A               	iorwf	(??___fleq+1)^0,w,c
  6484  0030C2  100B               	iorwf	(??___fleq+2)^0,w,c
  6485  0030C4  100C               	iorwf	(??___fleq+3)^0,w,c
  6486  0030C6  A4D8               	btfss	status,2,c
  6487  0030C8  EF68  F018         	goto	u3441
  6488  0030CC  EF6A  F018         	goto	u3440
  6489  0030D0                     u3441:
  6490  0030D0  EF72  F018         	goto	l3105
  6491  0030D4                     u3440:
  6492  0030D4  0E00               	movlw	0
  6493  0030D6  6E01               	movwf	___fleq@ff1^0,c
  6494  0030D8  0E00               	movlw	0
  6495  0030DA  6E02               	movwf	(___fleq@ff1+1)^0,c
  6496  0030DC  0E00               	movlw	0
  6497  0030DE  6E03               	movwf	(___fleq@ff1+2)^0,c
  6498  0030E0  0E00               	movlw	0
  6499  0030E2  6E04               	movwf	(___fleq@ff1+3)^0,c
  6500  0030E4                     l3105:
  6501  0030E4  0E00               	movlw	0
  6502  0030E6  1405               	andwf	___fleq@ff2^0,w,c
  6503  0030E8  6E09               	movwf	??___fleq^0,c
  6504  0030EA  0E00               	movlw	0
  6505  0030EC  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6506  0030EE  6E0A               	movwf	(??___fleq+1)^0,c
  6507  0030F0  0E80               	movlw	128
  6508  0030F2  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6509  0030F4  6E0B               	movwf	(??___fleq+2)^0,c
  6510  0030F6  0E7F               	movlw	127
  6511  0030F8  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6512  0030FA  6E0C               	movwf	(??___fleq+3)^0,c
  6513  0030FC  5009               	movf	??___fleq^0,w,c
  6514  0030FE  100A               	iorwf	(??___fleq+1)^0,w,c
  6515  003100  100B               	iorwf	(??___fleq+2)^0,w,c
  6516  003102  100C               	iorwf	(??___fleq+3)^0,w,c
  6517  003104  A4D8               	btfss	status,2,c
  6518  003106  EF87  F018         	goto	u3451
  6519  00310A  EF89  F018         	goto	u3450
  6520  00310E                     u3451:
  6521  00310E  EF91  F018         	goto	l3109
  6522  003112                     u3450:
  6523  003112  0E00               	movlw	0
  6524  003114  6E05               	movwf	___fleq@ff2^0,c
  6525  003116  0E00               	movlw	0
  6526  003118  6E06               	movwf	(___fleq@ff2+1)^0,c
  6527  00311A  0E00               	movlw	0
  6528  00311C  6E07               	movwf	(___fleq@ff2+2)^0,c
  6529  00311E  0E00               	movlw	0
  6530  003120  6E08               	movwf	(___fleq@ff2+3)^0,c
  6531  003122                     l3109:
  6532  003122  5005               	movf	___fleq@ff2^0,w,c
  6533  003124  1801               	xorwf	___fleq@ff1^0,w,c
  6534  003126  E10F               	bnz	u3460
  6535  003128  5006               	movf	(___fleq@ff2+1)^0,w,c
  6536  00312A  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6537  00312C  E10C               	bnz	u3460
  6538  00312E  5007               	movf	(___fleq@ff2+2)^0,w,c
  6539  003130  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6540  003132  E109               	bnz	u3460
  6541  003134  5008               	movf	(___fleq@ff2+3)^0,w,c
  6542  003136  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6543  003138  B4D8               	btfsc	status,2,c
  6544  00313A  EFA1  F018         	goto	u3461
  6545  00313E  EFA3  F018         	goto	u3460
  6546  003142                     u3461:
  6547  003142  EFA6  F018         	goto	l3113
  6548  003146                     u3460:
  6549  003146  90D8               	bcf	status,0,c
  6550  003148  EFA7  F018         	goto	l349
  6551  00314C                     l3113:
  6552  00314C  80D8               	bsf	status,0,c
  6553  00314E                     l349:
  6554  00314E  0012               	return		;funcret
  6555  003150                     __end_of___fleq:
  6556                           	callstack 0
  6557                           
  6558 ;; *************** function ___fldiv *****************
  6559 ;; Defined at:
  6560 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  b               4   39[COMRAM] unsigned char 
  6563 ;;  a               4   43[COMRAM] unsigned char 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  grs             4   58[COMRAM] unsigned long 
  6566 ;;  rem             4   51[COMRAM] unsigned long 
  6567 ;;  new_exp         2   56[COMRAM] short 
  6568 ;;  aexp            1   63[COMRAM] unsigned char 
  6569 ;;  bexp            1   62[COMRAM] unsigned char 
  6570 ;;  sign            1   55[COMRAM] unsigned char 
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  4   39[COMRAM] unsigned char 
  6573 ;; Registers used:
  6574 ;;		wreg, status,2, status,0
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6580 ;;      Params:         8       0       0       0       0       0       0       0       0
  6581 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6582 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6583 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6584 ;;Total ram usage:       25 bytes
  6585 ;; Hardware stack levels used:    1
  6586 ;; Hardware stack levels required when called:    1
  6587 ;; This function calls:
  6588 ;;		Nothing
  6589 ;; This function is called by:
  6590 ;;		_mostra_resultado
  6591 ;;		_efgtoa
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           	psect	text25
  6596  00219E                     __ptext25:
  6597                           	callstack 0
  6598  00219E                     ___fldiv:
  6599                           	callstack 24
  6600  00219E  502B               	movf	(___fldiv@b+3)^0,w,c
  6601  0021A0  0B80               	andlw	128
  6602  0021A2  6E38               	movwf	___fldiv@sign^0,c
  6603  0021A4  502B               	movf	(___fldiv@b+3)^0,w,c
  6604  0021A6  242B               	addwf	(___fldiv@b+3)^0,w,c
  6605  0021A8  6E3F               	movwf	___fldiv@bexp^0,c
  6606  0021AA  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6607  0021AC  EFDA  F010         	goto	u2901
  6608  0021B0  EFDC  F010         	goto	u2900
  6609  0021B4                     u2901:
  6610  0021B4  EFDD  F010         	goto	l2753
  6611  0021B8                     u2900:
  6612  0021B8  803F               	bsf	___fldiv@bexp^0,0,c
  6613  0021BA                     l2753:
  6614  0021BA  503F               	movf	___fldiv@bexp^0,w,c
  6615  0021BC  B4D8               	btfsc	status,2,c
  6616  0021BE  EFE3  F010         	goto	u2911
  6617  0021C2  EFE5  F010         	goto	u2910
  6618  0021C6                     u2911:
  6619  0021C6  EFFA  F010         	goto	l2763
  6620  0021CA                     u2910:
  6621  0021CA  283F               	incf	___fldiv@bexp^0,w,c
  6622  0021CC  A4D8               	btfss	status,2,c
  6623  0021CE  EFEB  F010         	goto	u2921
  6624  0021D2  EFED  F010         	goto	u2920
  6625  0021D6                     u2921:
  6626  0021D6  EFF5  F010         	goto	l2759
  6627  0021DA                     u2920:
  6628  0021DA  0E00               	movlw	0
  6629  0021DC  6E28               	movwf	___fldiv@b^0,c
  6630  0021DE  0E00               	movlw	0
  6631  0021E0  6E29               	movwf	(___fldiv@b+1)^0,c
  6632  0021E2  0E00               	movlw	0
  6633  0021E4  6E2A               	movwf	(___fldiv@b+2)^0,c
  6634  0021E6  0E00               	movlw	0
  6635  0021E8  6E2B               	movwf	(___fldiv@b+3)^0,c
  6636  0021EA                     l2759:
  6637  0021EA  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6638  0021EC  0E00               	movlw	0
  6639  0021EE  6E2B               	movwf	(___fldiv@b+3)^0,c
  6640  0021F0  EF02  F011         	goto	l2765
  6641  0021F4                     l2763:
  6642  0021F4  0E00               	movlw	0
  6643  0021F6  6E28               	movwf	___fldiv@b^0,c
  6644  0021F8  0E00               	movlw	0
  6645  0021FA  6E29               	movwf	(___fldiv@b+1)^0,c
  6646  0021FC  0E00               	movlw	0
  6647  0021FE  6E2A               	movwf	(___fldiv@b+2)^0,c
  6648  002200  0E00               	movlw	0
  6649  002202  6E2B               	movwf	(___fldiv@b+3)^0,c
  6650  002204                     l2765:
  6651  002204  502F               	movf	(___fldiv@a+3)^0,w,c
  6652  002206  0B80               	andlw	128
  6653  002208  1A38               	xorwf	___fldiv@sign^0,f,c
  6654  00220A  502F               	movf	(___fldiv@a+3)^0,w,c
  6655  00220C  242F               	addwf	(___fldiv@a+3)^0,w,c
  6656  00220E  6E40               	movwf	___fldiv@aexp^0,c
  6657  002210  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  6658  002212  EF0D  F011         	goto	u2931
  6659  002216  EF0F  F011         	goto	u2930
  6660  00221A                     u2931:
  6661  00221A  EF10  F011         	goto	l2773
  6662  00221E                     u2930:
  6663  00221E  8040               	bsf	___fldiv@aexp^0,0,c
  6664  002220                     l2773:
  6665  002220  5040               	movf	___fldiv@aexp^0,w,c
  6666  002222  B4D8               	btfsc	status,2,c
  6667  002224  EF16  F011         	goto	u2941
  6668  002228  EF18  F011         	goto	u2940
  6669  00222C                     u2941:
  6670  00222C  EF2D  F011         	goto	l2783
  6671  002230                     u2940:
  6672  002230  2840               	incf	___fldiv@aexp^0,w,c
  6673  002232  A4D8               	btfss	status,2,c
  6674  002234  EF1E  F011         	goto	u2951
  6675  002238  EF20  F011         	goto	u2950
  6676  00223C                     u2951:
  6677  00223C  EF28  F011         	goto	l2779
  6678  002240                     u2950:
  6679  002240  0E00               	movlw	0
  6680  002242  6E2C               	movwf	___fldiv@a^0,c
  6681  002244  0E00               	movlw	0
  6682  002246  6E2D               	movwf	(___fldiv@a+1)^0,c
  6683  002248  0E00               	movlw	0
  6684  00224A  6E2E               	movwf	(___fldiv@a+2)^0,c
  6685  00224C  0E00               	movlw	0
  6686  00224E  6E2F               	movwf	(___fldiv@a+3)^0,c
  6687  002250                     l2779:
  6688  002250  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  6689  002252  0E00               	movlw	0
  6690  002254  6E2F               	movwf	(___fldiv@a+3)^0,c
  6691  002256  EF35  F011         	goto	l2785
  6692  00225A                     l2783:
  6693  00225A  0E00               	movlw	0
  6694  00225C  6E2C               	movwf	___fldiv@a^0,c
  6695  00225E  0E00               	movlw	0
  6696  002260  6E2D               	movwf	(___fldiv@a+1)^0,c
  6697  002262  0E00               	movlw	0
  6698  002264  6E2E               	movwf	(___fldiv@a+2)^0,c
  6699  002266  0E00               	movlw	0
  6700  002268  6E2F               	movwf	(___fldiv@a+3)^0,c
  6701  00226A                     l2785:
  6702  00226A  502C               	movf	___fldiv@a^0,w,c
  6703  00226C  102D               	iorwf	(___fldiv@a+1)^0,w,c
  6704  00226E  102E               	iorwf	(___fldiv@a+2)^0,w,c
  6705  002270  102F               	iorwf	(___fldiv@a+3)^0,w,c
  6706  002272  A4D8               	btfss	status,2,c
  6707  002274  EF3E  F011         	goto	u2961
  6708  002278  EF40  F011         	goto	u2960
  6709  00227C                     u2961:
  6710  00227C  EF58  F011         	goto	l2797
  6711  002280                     u2960:
  6712  002280  0E00               	movlw	0
  6713  002282  6E28               	movwf	___fldiv@b^0,c
  6714  002284  0E00               	movlw	0
  6715  002286  6E29               	movwf	(___fldiv@b+1)^0,c
  6716  002288  0E00               	movlw	0
  6717  00228A  6E2A               	movwf	(___fldiv@b+2)^0,c
  6718  00228C  0E00               	movlw	0
  6719  00228E  6E2B               	movwf	(___fldiv@b+3)^0,c
  6720  002290  0E80               	movlw	128
  6721  002292  122A               	iorwf	(___fldiv@b+2)^0,f,c
  6722  002294  0E7F               	movlw	127
  6723  002296  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6724  002298                     l2791:
  6725  002298  5038               	movf	___fldiv@sign^0,w,c
  6726  00229A  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6727  00229C  C028  F028         	movff	___fldiv@b,?___fldiv
  6728  0022A0  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6729  0022A4  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6730  0022A8  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6731  0022AC  EF9B  F012         	goto	l672
  6732  0022B0                     l2797:
  6733  0022B0  503F               	movf	___fldiv@bexp^0,w,c
  6734  0022B2  A4D8               	btfss	status,2,c
  6735  0022B4  EF5E  F011         	goto	u2971
  6736  0022B8  EF60  F011         	goto	u2970
  6737  0022BC                     u2971:
  6738  0022BC  EF6A  F011         	goto	l2805
  6739  0022C0                     u2970:
  6740  0022C0  0E00               	movlw	0
  6741  0022C2  6E28               	movwf	?___fldiv^0,c
  6742  0022C4  0E00               	movlw	0
  6743  0022C6  6E29               	movwf	(?___fldiv+1)^0,c
  6744  0022C8  0E00               	movlw	0
  6745  0022CA  6E2A               	movwf	(?___fldiv+2)^0,c
  6746  0022CC  0E00               	movlw	0
  6747  0022CE  6E2B               	movwf	(?___fldiv+3)^0,c
  6748  0022D0  EF9B  F012         	goto	l672
  6749  0022D4                     l2805:
  6750  0022D4  5040               	movf	___fldiv@aexp^0,w,c
  6751  0022D6  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  6752  0022DA  6A31               	clrf	(??___fldiv+1)^0,c
  6753  0022DC  5E30               	subwf	??___fldiv^0,f,c
  6754  0022DE  0E00               	movlw	0
  6755  0022E0  5A31               	subwfb	(??___fldiv+1)^0,f,c
  6756  0022E2  0E7F               	movlw	127
  6757  0022E4  2430               	addwf	??___fldiv^0,w,c
  6758  0022E6  6E39               	movwf	___fldiv@new_exp^0,c
  6759  0022E8  0E00               	movlw	0
  6760  0022EA  2031               	addwfc	(??___fldiv+1)^0,w,c
  6761  0022EC  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6762  0022EE  C028  F034         	movff	___fldiv@b,___fldiv@rem
  6763  0022F2  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  6764  0022F6  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  6765  0022FA  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  6766  0022FE  0E00               	movlw	0
  6767  002300  6E28               	movwf	___fldiv@b^0,c
  6768  002302  0E00               	movlw	0
  6769  002304  6E29               	movwf	(___fldiv@b+1)^0,c
  6770  002306  0E00               	movlw	0
  6771  002308  6E2A               	movwf	(___fldiv@b+2)^0,c
  6772  00230A  0E00               	movlw	0
  6773  00230C  6E2B               	movwf	(___fldiv@b+3)^0,c
  6774  00230E  0E00               	movlw	0
  6775  002310  6E3B               	movwf	___fldiv@grs^0,c
  6776  002312  0E00               	movlw	0
  6777  002314  6E3C               	movwf	(___fldiv@grs+1)^0,c
  6778  002316  0E00               	movlw	0
  6779  002318  6E3D               	movwf	(___fldiv@grs+2)^0,c
  6780  00231A  0E00               	movlw	0
  6781  00231C  6E3E               	movwf	(___fldiv@grs+3)^0,c
  6782  00231E  0E00               	movlw	0
  6783  002320  6E40               	movwf	___fldiv@aexp^0,c
  6784  002322  EFCB  F011         	goto	l674
  6785  002326                     l2815:
  6786  002326  5040               	movf	___fldiv@aexp^0,w,c
  6787  002328  B4D8               	btfsc	status,2,c
  6788  00232A  EF99  F011         	goto	u2981
  6789  00232E  EF9B  F011         	goto	u2980
  6790  002332                     u2981:
  6791  002332  EFB2  F011         	goto	l2823
  6792  002336                     u2980:
  6793  002336  90D8               	bcf	status,0,c
  6794  002338  3634               	rlcf	___fldiv@rem^0,f,c
  6795  00233A  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  6796  00233C  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  6797  00233E  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  6798  002340  90D8               	bcf	status,0,c
  6799  002342  3628               	rlcf	___fldiv@b^0,f,c
  6800  002344  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6801  002346  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6802  002348  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6803  00234A  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6804  00234C  EFAA  F011         	goto	u2991
  6805  002350  EFAC  F011         	goto	u2990
  6806  002354                     u2991:
  6807  002354  EFAD  F011         	goto	l677
  6808  002358                     u2990:
  6809  002358  8028               	bsf	___fldiv@b^0,0,c
  6810  00235A                     l677:
  6811  00235A  90D8               	bcf	status,0,c
  6812  00235C  363B               	rlcf	___fldiv@grs^0,f,c
  6813  00235E  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6814  002360  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6815  002362  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6816  002364                     l2823:
  6817  002364  502C               	movf	___fldiv@a^0,w,c
  6818  002366  5C34               	subwf	___fldiv@rem^0,w,c
  6819  002368  502D               	movf	(___fldiv@a+1)^0,w,c
  6820  00236A  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  6821  00236C  502E               	movf	(___fldiv@a+2)^0,w,c
  6822  00236E  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  6823  002370  502F               	movf	(___fldiv@a+3)^0,w,c
  6824  002372  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  6825  002374  A0D8               	btfss	status,0,c
  6826  002376  EFBF  F011         	goto	u3001
  6827  00237A  EFC1  F011         	goto	u3000
  6828  00237E                     u3001:
  6829  00237E  EFCA  F011         	goto	l2829
  6830  002382                     u3000:
  6831  002382  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  6832  002384  502C               	movf	___fldiv@a^0,w,c
  6833  002386  5E34               	subwf	___fldiv@rem^0,f,c
  6834  002388  502D               	movf	(___fldiv@a+1)^0,w,c
  6835  00238A  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  6836  00238C  502E               	movf	(___fldiv@a+2)^0,w,c
  6837  00238E  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  6838  002390  502F               	movf	(___fldiv@a+3)^0,w,c
  6839  002392  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  6840  002394                     l2829:
  6841  002394  2A40               	incf	___fldiv@aexp^0,f,c
  6842  002396                     l674:
  6843  002396  0E19               	movlw	25
  6844  002398  6440               	cpfsgt	___fldiv@aexp^0,c
  6845  00239A  EFD1  F011         	goto	u3011
  6846  00239E  EFD3  F011         	goto	u3010
  6847  0023A2                     u3011:
  6848  0023A2  EF93  F011         	goto	l2815
  6849  0023A6                     u3010:
  6850  0023A6  5034               	movf	___fldiv@rem^0,w,c
  6851  0023A8  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  6852  0023AA  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  6853  0023AC  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  6854  0023AE  B4D8               	btfsc	status,2,c
  6855  0023B0  EFDC  F011         	goto	u3021
  6856  0023B4  EFDE  F011         	goto	u3020
  6857  0023B8                     u3021:
  6858  0023B8  EFF6  F011         	goto	l2841
  6859  0023BC                     u3020:
  6860  0023BC  803B               	bsf	___fldiv@grs^0,0,c
  6861  0023BE  EFF6  F011         	goto	l2841
  6862  0023C2                     l2835:
  6863  0023C2  90D8               	bcf	status,0,c
  6864  0023C4  3628               	rlcf	___fldiv@b^0,f,c
  6865  0023C6  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6866  0023C8  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6867  0023CA  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6868  0023CC  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6869  0023CE  EFEB  F011         	goto	u3031
  6870  0023D2  EFED  F011         	goto	u3030
  6871  0023D6                     u3031:
  6872  0023D6  EFEE  F011         	goto	l683
  6873  0023DA                     u3030:
  6874  0023DA  8028               	bsf	___fldiv@b^0,0,c
  6875  0023DC                     l683:
  6876  0023DC  90D8               	bcf	status,0,c
  6877  0023DE  363B               	rlcf	___fldiv@grs^0,f,c
  6878  0023E0  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6879  0023E2  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6880  0023E4  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6881  0023E6  0639               	decf	___fldiv@new_exp^0,f,c
  6882  0023E8  A0D8               	btfss	status,0,c
  6883  0023EA  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  6884  0023EC                     l2841:
  6885  0023EC  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6886  0023EE  EFFB  F011         	goto	u3041
  6887  0023F2  EFFD  F011         	goto	u3040
  6888  0023F6                     u3041:
  6889  0023F6  EFE1  F011         	goto	l2835
  6890  0023FA                     u3040:
  6891  0023FA  0E00               	movlw	0
  6892  0023FC  6E40               	movwf	___fldiv@aexp^0,c
  6893  0023FE  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6894  002400  EF04  F012         	goto	u3051
  6895  002404  EF06  F012         	goto	u3050
  6896  002408                     u3051:
  6897  002408  EF2A  F012         	goto	l685
  6898  00240C                     u3050:
  6899  00240C  0EFF               	movlw	255
  6900  00240E  143B               	andwf	___fldiv@grs^0,w,c
  6901  002410  6E30               	movwf	??___fldiv^0,c
  6902  002412  0EFF               	movlw	255
  6903  002414  143C               	andwf	(___fldiv@grs+1)^0,w,c
  6904  002416  6E31               	movwf	(??___fldiv+1)^0,c
  6905  002418  0EFF               	movlw	255
  6906  00241A  143D               	andwf	(___fldiv@grs+2)^0,w,c
  6907  00241C  6E32               	movwf	(??___fldiv+2)^0,c
  6908  00241E  0E7F               	movlw	127
  6909  002420  143E               	andwf	(___fldiv@grs+3)^0,w,c
  6910  002422  6E33               	movwf	(??___fldiv+3)^0,c
  6911  002424  5030               	movf	??___fldiv^0,w,c
  6912  002426  1031               	iorwf	(??___fldiv+1)^0,w,c
  6913  002428  1032               	iorwf	(??___fldiv+2)^0,w,c
  6914  00242A  1033               	iorwf	(??___fldiv+3)^0,w,c
  6915  00242C  B4D8               	btfsc	status,2,c
  6916  00242E  EF1B  F012         	goto	u3061
  6917  002432  EF1D  F012         	goto	u3060
  6918  002436                     u3061:
  6919  002436  EF21  F012         	goto	l686
  6920  00243A                     u3060:
  6921  00243A                     l2849:
  6922  00243A  0E01               	movlw	1
  6923  00243C  6E40               	movwf	___fldiv@aexp^0,c
  6924  00243E  EF2A  F012         	goto	l685
  6925  002442                     l686:
  6926  002442  A028               	btfss	___fldiv@b^0,0,c
  6927  002444  EF26  F012         	goto	u3071
  6928  002448  EF28  F012         	goto	u3070
  6929  00244C                     u3071:
  6930  00244C  EF2A  F012         	goto	l685
  6931  002450                     u3070:
  6932  002450  EF1D  F012         	goto	l2849
  6933  002454                     l685:
  6934  002454  5040               	movf	___fldiv@aexp^0,w,c
  6935  002456  B4D8               	btfsc	status,2,c
  6936  002458  EF30  F012         	goto	u3081
  6937  00245C  EF32  F012         	goto	u3080
  6938  002460                     u3081:
  6939  002460  EF56  F012         	goto	l2861
  6940  002464                     u3080:
  6941  002464  0E01               	movlw	1
  6942  002466  2628               	addwf	___fldiv@b^0,f,c
  6943  002468  0E00               	movlw	0
  6944  00246A  2229               	addwfc	(___fldiv@b+1)^0,f,c
  6945  00246C  222A               	addwfc	(___fldiv@b+2)^0,f,c
  6946  00246E  222B               	addwfc	(___fldiv@b+3)^0,f,c
  6947  002470  A02B               	btfss	(___fldiv@b+3)^0,0,c
  6948  002472  EF3D  F012         	goto	u3091
  6949  002476  EF3F  F012         	goto	u3090
  6950  00247A                     u3091:
  6951  00247A  EF56  F012         	goto	l2861
  6952  00247E                     u3090:
  6953  00247E  C028  F030         	movff	___fldiv@b,??___fldiv
  6954  002482  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6955  002486  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6956  00248A  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6957  00248E  3433               	rlcf	(??___fldiv+3)^0,w,c
  6958  002490  3233               	rrcf	(??___fldiv+3)^0,f,c
  6959  002492  3232               	rrcf	(??___fldiv+2)^0,f,c
  6960  002494  3231               	rrcf	(??___fldiv+1)^0,f,c
  6961  002496  3230               	rrcf	??___fldiv^0,f,c
  6962  002498  C030  F028         	movff	??___fldiv,___fldiv@b
  6963  00249C  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6964  0024A0  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6965  0024A4  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6966  0024A8  4A39               	infsnz	___fldiv@new_exp^0,f,c
  6967  0024AA  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  6968  0024AC                     l2861:
  6969  0024AC  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6970  0024AE  EF61  F012         	goto	u3101
  6971  0024B2  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6972  0024B4  E108               	bnz	u3100
  6973  0024B6  2839               	incf	___fldiv@new_exp^0,w,c
  6974  0024B8  A0D8               	btfss	status,0,c
  6975  0024BA  EF61  F012         	goto	u3101
  6976  0024BE  EF63  F012         	goto	u3100
  6977  0024C2                     u3101:
  6978  0024C2  EF6E  F012         	goto	l2865
  6979  0024C6                     u3100:
  6980  0024C6  0E00               	movlw	0
  6981  0024C8  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6982  0024CA  6839               	setf	___fldiv@new_exp^0,c
  6983  0024CC  0E00               	movlw	0
  6984  0024CE  6E28               	movwf	___fldiv@b^0,c
  6985  0024D0  0E00               	movlw	0
  6986  0024D2  6E29               	movwf	(___fldiv@b+1)^0,c
  6987  0024D4  0E00               	movlw	0
  6988  0024D6  6E2A               	movwf	(___fldiv@b+2)^0,c
  6989  0024D8  0E00               	movlw	0
  6990  0024DA  6E2B               	movwf	(___fldiv@b+3)^0,c
  6991  0024DC                     l2865:
  6992  0024DC  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6993  0024DE  EF7B  F012         	goto	u3110
  6994  0024E2  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6995  0024E4  E106               	bnz	u3111
  6996  0024E6  0439               	decf	___fldiv@new_exp^0,w,c
  6997  0024E8  B0D8               	btfsc	status,0,c
  6998  0024EA  EF79  F012         	goto	u3111
  6999  0024EE  EF7B  F012         	goto	u3110
  7000  0024F2                     u3111:
  7001  0024F2  EF89  F012         	goto	l2869
  7002  0024F6                     u3110:
  7003  0024F6  0E00               	movlw	0
  7004  0024F8  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7005  0024FA  0E00               	movlw	0
  7006  0024FC  6E39               	movwf	___fldiv@new_exp^0,c
  7007  0024FE  0E00               	movlw	0
  7008  002500  6E28               	movwf	___fldiv@b^0,c
  7009  002502  0E00               	movlw	0
  7010  002504  6E29               	movwf	(___fldiv@b+1)^0,c
  7011  002506  0E00               	movlw	0
  7012  002508  6E2A               	movwf	(___fldiv@b+2)^0,c
  7013  00250A  0E00               	movlw	0
  7014  00250C  6E2B               	movwf	(___fldiv@b+3)^0,c
  7015  00250E  0E00               	movlw	0
  7016  002510  6E38               	movwf	___fldiv@sign^0,c
  7017  002512                     l2869:
  7018  002512  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7019  002516  A03F               	btfss	___fldiv@bexp^0,0,c
  7020  002518  EF90  F012         	goto	u3121
  7021  00251C  EF92  F012         	goto	u3120
  7022  002520                     u3121:
  7023  002520  EF95  F012         	goto	l2875
  7024  002524                     u3120:
  7025  002524  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7026  002526  EF96  F012         	goto	l2877
  7027  00252A                     l2875:
  7028  00252A  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  7029  00252C                     l2877:
  7030  00252C  90D8               	bcf	status,0,c
  7031  00252E  303F               	rrcf	___fldiv@bexp^0,w,c
  7032  002530  6E2B               	movwf	(___fldiv@b+3)^0,c
  7033  002532  EF4C  F011         	goto	l2791
  7034  002536                     l672:
  7035  002536  0012               	return		;funcret
  7036  002538                     __end_of___fldiv:
  7037                           	callstack 0
  7038                           
  7039 ;; *************** function ___awmod *****************
  7040 ;; Defined at:
  7041 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;  dividend        2    0[COMRAM] int 
  7044 ;;  divisor         2    2[COMRAM] int 
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;  sign            1    5[COMRAM] unsigned char 
  7047 ;;  counter         1    4[COMRAM] unsigned char 
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  2    0[COMRAM] int 
  7050 ;; Registers used:
  7051 ;;		wreg, status,2, status,0
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7057 ;;      Params:         4       0       0       0       0       0       0       0       0
  7058 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7060 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7061 ;;Total ram usage:        6 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:    1
  7064 ;; This function calls:
  7065 ;;		Nothing
  7066 ;; This function is called by:
  7067 ;;		_efgtoa
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           	psect	text26
  7072  002FF6                     __ptext26:
  7073                           	callstack 0
  7074  002FF6                     ___awmod:
  7075                           	callstack 24
  7076  002FF6  0E00               	movlw	0
  7077  002FF8  6E06               	movwf	___awmod@sign^0,c
  7078  002FFA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7079  002FFC  EF04  F018         	goto	u3380
  7080  003000  EF02  F018         	goto	u3381
  7081  003004                     u3381:
  7082  003004  EF0A  F018         	goto	l3073
  7083  003008                     u3380:
  7084  003008  6C01               	negf	___awmod@dividend^0,c
  7085  00300A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7086  00300C  B0D8               	btfsc	status,0,c
  7087  00300E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7088  003010  0E01               	movlw	1
  7089  003012  6E06               	movwf	___awmod@sign^0,c
  7090  003014                     l3073:
  7091  003014  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7092  003016  EF11  F018         	goto	u3390
  7093  00301A  EF0F  F018         	goto	u3391
  7094  00301E                     u3391:
  7095  00301E  EF15  F018         	goto	l3077
  7096  003022                     u3390:
  7097  003022  6C03               	negf	___awmod@divisor^0,c
  7098  003024  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7099  003026  B0D8               	btfsc	status,0,c
  7100  003028  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7101  00302A                     l3077:
  7102  00302A  5003               	movf	___awmod@divisor^0,w,c
  7103  00302C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7104  00302E  B4D8               	btfsc	status,2,c
  7105  003030  EF1C  F018         	goto	u3401
  7106  003034  EF1E  F018         	goto	u3400
  7107  003038                     u3401:
  7108  003038  EF42  F018         	goto	l3093
  7109  00303C                     u3400:
  7110  00303C  0E01               	movlw	1
  7111  00303E  6E05               	movwf	___awmod@counter^0,c
  7112  003040  EF26  F018         	goto	l3083
  7113  003044                     l3081:
  7114  003044  90D8               	bcf	status,0,c
  7115  003046  3603               	rlcf	___awmod@divisor^0,f,c
  7116  003048  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7117  00304A  2A05               	incf	___awmod@counter^0,f,c
  7118  00304C                     l3083:
  7119  00304C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7120  00304E  EF2B  F018         	goto	u3411
  7121  003052  EF2D  F018         	goto	u3410
  7122  003056                     u3411:
  7123  003056  EF22  F018         	goto	l3081
  7124  00305A                     u3410:
  7125  00305A                     l3085:
  7126  00305A  5003               	movf	___awmod@divisor^0,w,c
  7127  00305C  5C01               	subwf	___awmod@dividend^0,w,c
  7128  00305E  5004               	movf	(___awmod@divisor+1)^0,w,c
  7129  003060  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7130  003062  A0D8               	btfss	status,0,c
  7131  003064  EF36  F018         	goto	u3421
  7132  003068  EF38  F018         	goto	u3420
  7133  00306C                     u3421:
  7134  00306C  EF3C  F018         	goto	l3089
  7135  003070                     u3420:
  7136  003070  5003               	movf	___awmod@divisor^0,w,c
  7137  003072  5E01               	subwf	___awmod@dividend^0,f,c
  7138  003074  5004               	movf	(___awmod@divisor+1)^0,w,c
  7139  003076  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7140  003078                     l3089:
  7141  003078  90D8               	bcf	status,0,c
  7142  00307A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7143  00307C  3203               	rrcf	___awmod@divisor^0,f,c
  7144  00307E  2E05               	decfsz	___awmod@counter^0,f,c
  7145  003080  EF2D  F018         	goto	l3085
  7146  003084                     l3093:
  7147  003084  5006               	movf	___awmod@sign^0,w,c
  7148  003086  B4D8               	btfsc	status,2,c
  7149  003088  EF48  F018         	goto	u3431
  7150  00308C  EF4A  F018         	goto	u3430
  7151  003090                     u3431:
  7152  003090  EF4E  F018         	goto	l3097
  7153  003094                     u3430:
  7154  003094  6C01               	negf	___awmod@dividend^0,c
  7155  003096  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7156  003098  B0D8               	btfsc	status,0,c
  7157  00309A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7158  00309C                     l3097:
  7159  00309C  C001  F001         	movff	___awmod@dividend,?___awmod
  7160  0030A0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7161  0030A4  0012               	return		;funcret
  7162  0030A6                     __end_of___awmod:
  7163                           	callstack 0
  7164                           
  7165 ;; *************** function ___awdiv *****************
  7166 ;; Defined at:
  7167 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  dividend        2    0[COMRAM] int 
  7170 ;;  divisor         2    2[COMRAM] int 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  quotient        2    6[COMRAM] int 
  7173 ;;  sign            1    5[COMRAM] unsigned char 
  7174 ;;  counter         1    4[COMRAM] unsigned char 
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  2    0[COMRAM] int 
  7177 ;; Registers used:
  7178 ;;		wreg, status,2, status,0
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7184 ;;      Params:         4       0       0       0       0       0       0       0       0
  7185 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7187 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7188 ;;Total ram usage:        8 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:    1
  7191 ;; This function calls:
  7192 ;;		Nothing
  7193 ;; This function is called by:
  7194 ;;		_efgtoa
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           	psect	text27
  7199  002F32                     __ptext27:
  7200                           	callstack 0
  7201  002F32                     ___awdiv:
  7202                           	callstack 24
  7203  002F32  0E00               	movlw	0
  7204  002F34  6E06               	movwf	___awdiv@sign^0,c
  7205  002F36  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7206  002F38  EFA2  F017         	goto	u3320
  7207  002F3C  EFA0  F017         	goto	u3321
  7208  002F40                     u3321:
  7209  002F40  EFA8  F017         	goto	l3029
  7210  002F44                     u3320:
  7211  002F44  6C03               	negf	___awdiv@divisor^0,c
  7212  002F46  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7213  002F48  B0D8               	btfsc	status,0,c
  7214  002F4A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7215  002F4C  0E01               	movlw	1
  7216  002F4E  6E06               	movwf	___awdiv@sign^0,c
  7217  002F50                     l3029:
  7218  002F50  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7219  002F52  EFAF  F017         	goto	u3330
  7220  002F56  EFAD  F017         	goto	u3331
  7221  002F5A                     u3331:
  7222  002F5A  EFB5  F017         	goto	l3035
  7223  002F5E                     u3330:
  7224  002F5E  6C01               	negf	___awdiv@dividend^0,c
  7225  002F60  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7226  002F62  B0D8               	btfsc	status,0,c
  7227  002F64  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7228  002F66  0E01               	movlw	1
  7229  002F68  1A06               	xorwf	___awdiv@sign^0,f,c
  7230  002F6A                     l3035:
  7231  002F6A  0E00               	movlw	0
  7232  002F6C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7233  002F6E  0E00               	movlw	0
  7234  002F70  6E07               	movwf	___awdiv@quotient^0,c
  7235  002F72  5003               	movf	___awdiv@divisor^0,w,c
  7236  002F74  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7237  002F76  B4D8               	btfsc	status,2,c
  7238  002F78  EFC0  F017         	goto	u3341
  7239  002F7C  EFC2  F017         	goto	u3340
  7240  002F80                     u3341:
  7241  002F80  EFEA  F017         	goto	l3057
  7242  002F84                     u3340:
  7243  002F84  0E01               	movlw	1
  7244  002F86  6E05               	movwf	___awdiv@counter^0,c
  7245  002F88  EFCA  F017         	goto	l3043
  7246  002F8C                     l3041:
  7247  002F8C  90D8               	bcf	status,0,c
  7248  002F8E  3603               	rlcf	___awdiv@divisor^0,f,c
  7249  002F90  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7250  002F92  2A05               	incf	___awdiv@counter^0,f,c
  7251  002F94                     l3043:
  7252  002F94  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7253  002F96  EFCF  F017         	goto	u3351
  7254  002F9A  EFD1  F017         	goto	u3350
  7255  002F9E                     u3351:
  7256  002F9E  EFC6  F017         	goto	l3041
  7257  002FA2                     u3350:
  7258  002FA2                     l3045:
  7259  002FA2  90D8               	bcf	status,0,c
  7260  002FA4  3607               	rlcf	___awdiv@quotient^0,f,c
  7261  002FA6  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7262  002FA8  5003               	movf	___awdiv@divisor^0,w,c
  7263  002FAA  5C01               	subwf	___awdiv@dividend^0,w,c
  7264  002FAC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7265  002FAE  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7266  002FB0  A0D8               	btfss	status,0,c
  7267  002FB2  EFDD  F017         	goto	u3361
  7268  002FB6  EFDF  F017         	goto	u3360
  7269  002FBA                     u3361:
  7270  002FBA  EFE4  F017         	goto	l3053
  7271  002FBE                     u3360:
  7272  002FBE  5003               	movf	___awdiv@divisor^0,w,c
  7273  002FC0  5E01               	subwf	___awdiv@dividend^0,f,c
  7274  002FC2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7275  002FC4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7276  002FC6  8007               	bsf	___awdiv@quotient^0,0,c
  7277  002FC8                     l3053:
  7278  002FC8  90D8               	bcf	status,0,c
  7279  002FCA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7280  002FCC  3203               	rrcf	___awdiv@divisor^0,f,c
  7281  002FCE  2E05               	decfsz	___awdiv@counter^0,f,c
  7282  002FD0  EFD1  F017         	goto	l3045
  7283  002FD4                     l3057:
  7284  002FD4  5006               	movf	___awdiv@sign^0,w,c
  7285  002FD6  B4D8               	btfsc	status,2,c
  7286  002FD8  EFF0  F017         	goto	u3371
  7287  002FDC  EFF2  F017         	goto	u3370
  7288  002FE0                     u3371:
  7289  002FE0  EFF6  F017         	goto	l3061
  7290  002FE4                     u3370:
  7291  002FE4  6C07               	negf	___awdiv@quotient^0,c
  7292  002FE6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7293  002FE8  B0D8               	btfsc	status,0,c
  7294  002FEA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7295  002FEC                     l3061:
  7296  002FEC  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7297  002FF0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7298  002FF4  0012               	return		;funcret
  7299  002FF6                     __end_of___awdiv:
  7300                           	callstack 0
  7301                           
  7302 ;; *************** function _atoi *****************
  7303 ;; Defined at:
  7304 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7307 ;;		 -> STR_1(11), 
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;  n               2   20[COMRAM] int 
  7310 ;;  neg             2   13[COMRAM] int 
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  2    7[COMRAM] int 
  7313 ;; Registers used:
  7314 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7320 ;;      Params:         2       0       0       0       0       0       0       0       0
  7321 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7322 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7323 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7324 ;;Total ram usage:       15 bytes
  7325 ;; Hardware stack levels used:    1
  7326 ;; Hardware stack levels required when called:    2
  7327 ;; This function calls:
  7328 ;;		___wmul
  7329 ;;		_isdigit
  7330 ;;		_isspace
  7331 ;; This function is called by:
  7332 ;;		_vfpfcnvrt
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336                           	psect	text28
  7337  0028FE                     __ptext28:
  7338                           	callstack 0
  7339  0028FE                     _atoi:
  7340                           	callstack 24
  7341  0028FE  0E00               	movlw	0
  7342  002900  6E16               	movwf	(atoi@n+1)^0,c
  7343  002902  0E00               	movlw	0
  7344  002904  6E15               	movwf	atoi@n^0,c
  7345  002906  0E00               	movlw	0
  7346  002908  6E0F               	movwf	(atoi@neg+1)^0,c
  7347  00290A  0E00               	movlw	0
  7348  00290C  6E0E               	movwf	atoi@neg^0,c
  7349  00290E  EF8B  F014         	goto	l3595
  7350  002912                     l3593:
  7351  002912  4A08               	infsnz	atoi@s^0,f,c
  7352  002914  2A09               	incf	(atoi@s+1)^0,f,c
  7353  002916                     l3595:
  7354  002916  0E01               	movlw	1
  7355  002918  6E14               	movwf	_atoi$962^0,c
  7356  00291A  C008  FFF6         	movff	atoi@s,tblptrl
  7357  00291E  C009  FFF7         	movff	atoi@s+1,tblptrh
  7358  002922                     	if	0	;tblptru may be non-zero
  7359  002922                     	endif
  7360  002922                     	if	0	;tblptru may be non-zero
  7361  002922                     	endif
  7362  002922  0008               	tblrd		*
  7363  002924  50F5               	movf	tablat,w,c
  7364  002926  0A20               	xorlw	32
  7365  002928  B4D8               	btfsc	status,2,c
  7366  00292A  EF99  F014         	goto	u4421
  7367  00292E  EF9B  F014         	goto	u4420
  7368  002932                     u4421:
  7369  002932  EFB8  F014         	goto	l3603
  7370  002936                     u4420:
  7371  002936  0EF7               	movlw	247
  7372  002938  6E0A               	movwf	??_atoi^0,c
  7373  00293A  0EFF               	movlw	255
  7374  00293C  6E0B               	movwf	(??_atoi+1)^0,c
  7375  00293E  C008  FFF6         	movff	atoi@s,tblptrl
  7376  002942  C009  FFF7         	movff	atoi@s+1,tblptrh
  7377  002946                     	if	0	;tblptru may be non-zero
  7378  002946                     	endif
  7379  002946                     	if	0	;tblptru may be non-zero
  7380  002946                     	endif
  7381  002946  0008               	tblrd		*
  7382  002948  50F5               	movf	tablat,w,c
  7383  00294A  6E0C               	movwf	(??_atoi+2)^0,c
  7384  00294C  6A0D               	clrf	(??_atoi+3)^0,c
  7385  00294E  500A               	movf	??_atoi^0,w,c
  7386  002950  260C               	addwf	(??_atoi+2)^0,f,c
  7387  002952  500B               	movf	(??_atoi+1)^0,w,c
  7388  002954  220D               	addwfc	(??_atoi+3)^0,f,c
  7389  002956  500D               	movf	(??_atoi+3)^0,w,c
  7390  002958  E109               	bnz	u4430
  7391  00295A  0E05               	movlw	5
  7392  00295C  5C0C               	subwf	(??_atoi+2)^0,w,c
  7393  00295E  A0D8               	btfss	status,0,c
  7394  002960  EFB4  F014         	goto	u4431
  7395  002964  EFB6  F014         	goto	u4430
  7396  002968                     u4431:
  7397  002968  EFB8  F014         	goto	l3603
  7398  00296C                     u4430:
  7399  00296C  0E00               	movlw	0
  7400  00296E  6E14               	movwf	_atoi$962^0,c
  7401  002970                     l3603:
  7402  002970  C014  F010         	movff	_atoi$962,_atoi$961
  7403  002974  6A11               	clrf	(_atoi$961+1)^0,c
  7404  002976  5010               	movf	_atoi$961^0,w,c
  7405  002978  1011               	iorwf	(_atoi$961+1)^0,w,c
  7406  00297A  A4D8               	btfss	status,2,c
  7407  00297C  EFC2  F014         	goto	u4441
  7408  002980  EFC4  F014         	goto	u4440
  7409  002984                     u4441:
  7410  002984  EF89  F014         	goto	l3593
  7411  002988                     u4440:
  7412  002988  EFCE  F014         	goto	l3613
  7413  00298C                     l3609:
  7414  00298C  0E00               	movlw	0
  7415  00298E  6E0F               	movwf	(atoi@neg+1)^0,c
  7416  002990  0E01               	movlw	1
  7417  002992  6E0E               	movwf	atoi@neg^0,c
  7418  002994                     l3611:
  7419  002994  4A08               	infsnz	atoi@s^0,f,c
  7420  002996  2A09               	incf	(atoi@s+1)^0,f,c
  7421  002998  EF03  F015         	goto	l3619
  7422  00299C                     l3613:
  7423  00299C  C008  FFF6         	movff	atoi@s,tblptrl
  7424  0029A0  C009  FFF7         	movff	atoi@s+1,tblptrh
  7425  0029A4                     	if	0	;tblptru may be non-zero
  7426  0029A4                     	endif
  7427  0029A4                     	if	0	;tblptru may be non-zero
  7428  0029A4                     	endif
  7429  0029A4  0008               	tblrd		*
  7430  0029A6  50F5               	movf	tablat,w,c
  7431  0029A8  6E0A               	movwf	??_atoi^0,c
  7432  0029AA  6A0B               	clrf	(??_atoi+1)^0,c
  7433                           
  7434                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7435                           ; Switch size 1, requested type "simple"
  7436                           ; Number of cases is 1, Range of values is 0 to 0
  7437                           ; switch strategies available:
  7438                           ; Name         Instructions Cycles
  7439                           ; simple_byte            4     3 (average)
  7440                           ;	Chosen strategy is simple_byte
  7441  0029AC  500B               	movf	(??_atoi+1)^0,w,c
  7442  0029AE  0A00               	xorlw	0	; case 0
  7443  0029B0  B4D8               	btfsc	status,2,c
  7444  0029B2  EFDD  F014         	goto	l3895
  7445  0029B6  EF03  F015         	goto	l3619
  7446  0029BA                     l3895:
  7447                           
  7448                           ; Switch size 1, requested type "simple"
  7449                           ; Number of cases is 2, Range of values is 43 to 45
  7450                           ; switch strategies available:
  7451                           ; Name         Instructions Cycles
  7452                           ; simple_byte            7     4 (average)
  7453                           ;	Chosen strategy is simple_byte
  7454  0029BA  500A               	movf	??_atoi^0,w,c
  7455  0029BC  0A2B               	xorlw	43	; case 43
  7456  0029BE  B4D8               	btfsc	status,2,c
  7457  0029C0  EFCA  F014         	goto	l3611
  7458  0029C4  0A06               	xorlw	6	; case 45
  7459  0029C6  B4D8               	btfsc	status,2,c
  7460  0029C8  EFC6  F014         	goto	l3609
  7461  0029CC  EF03  F015         	goto	l3619
  7462  0029D0                     l3615:
  7463  0029D0  C015  F001         	movff	atoi@n,___wmul@multiplier
  7464  0029D4  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7465  0029D8  0E00               	movlw	0
  7466  0029DA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7467  0029DC  0E0A               	movlw	10
  7468  0029DE  6E03               	movwf	___wmul@multiplicand^0,c
  7469  0029E0  ECB3  F01B         	call	___wmul	;wreg free
  7470  0029E4  C008  FFF6         	movff	atoi@s,tblptrl
  7471  0029E8  C009  FFF7         	movff	atoi@s+1,tblptrh
  7472  0029EC                     	if	0	;tblptru may be non-zero
  7473  0029EC                     	endif
  7474  0029EC                     	if	0	;tblptru may be non-zero
  7475  0029EC                     	endif
  7476  0029EC  0008               	tblrd		*
  7477  0029EE  50F5               	movf	tablat,w,c
  7478  0029F0  5E01               	subwf	?___wmul^0,f,c
  7479  0029F2  0E00               	movlw	0
  7480  0029F4  5A02               	subwfb	(?___wmul+1)^0,f,c
  7481  0029F6  0E30               	movlw	48
  7482  0029F8  2401               	addwf	?___wmul^0,w,c
  7483  0029FA  6E15               	movwf	atoi@n^0,c
  7484  0029FC  0E00               	movlw	0
  7485  0029FE  2002               	addwfc	(?___wmul+1)^0,w,c
  7486  002A00  6E16               	movwf	(atoi@n+1)^0,c
  7487  002A02  EFCA  F014         	goto	l3611
  7488  002A06                     l3619:
  7489  002A06  0ED0               	movlw	208
  7490  002A08  6E0A               	movwf	??_atoi^0,c
  7491  002A0A  0EFF               	movlw	255
  7492  002A0C  6E0B               	movwf	(??_atoi+1)^0,c
  7493  002A0E  C008  FFF6         	movff	atoi@s,tblptrl
  7494  002A12  C009  FFF7         	movff	atoi@s+1,tblptrh
  7495  002A16                     	if	0	;tblptru may be non-zero
  7496  002A16                     	endif
  7497  002A16                     	if	0	;tblptru may be non-zero
  7498  002A16                     	endif
  7499  002A16  0008               	tblrd		*
  7500  002A18  50F5               	movf	tablat,w,c
  7501  002A1A  6E0C               	movwf	(??_atoi+2)^0,c
  7502  002A1C  6A0D               	clrf	(??_atoi+3)^0,c
  7503  002A1E  500A               	movf	??_atoi^0,w,c
  7504  002A20  260C               	addwf	(??_atoi+2)^0,f,c
  7505  002A22  500B               	movf	(??_atoi+1)^0,w,c
  7506  002A24  220D               	addwfc	(??_atoi+3)^0,f,c
  7507  002A26  500D               	movf	(??_atoi+3)^0,w,c
  7508  002A28  E10A               	bnz	u4450
  7509  002A2A  0E0A               	movlw	10
  7510  002A2C  5C0C               	subwf	(??_atoi+2)^0,w,c
  7511  002A2E  A0D8               	btfss	status,0,c
  7512  002A30  EF1C  F015         	goto	u4451
  7513  002A34  EF1F  F015         	goto	u4450
  7514  002A38                     u4451:
  7515  002A38  0E01               	movlw	1
  7516  002A3A  EF20  F015         	goto	u4460
  7517  002A3E                     u4450:
  7518  002A3E  0E00               	movlw	0
  7519  002A40                     u4460:
  7520  002A40  6E12               	movwf	_atoi$963^0,c
  7521  002A42  6A13               	clrf	(_atoi$963+1)^0,c
  7522  002A44  5012               	movf	_atoi$963^0,w,c
  7523  002A46  1013               	iorwf	(_atoi$963+1)^0,w,c
  7524  002A48  A4D8               	btfss	status,2,c
  7525  002A4A  EF29  F015         	goto	u4471
  7526  002A4E  EF2B  F015         	goto	u4470
  7527  002A52                     u4471:
  7528  002A52  EFE8  F014         	goto	l3615
  7529  002A56                     u4470:
  7530  002A56  500E               	movf	atoi@neg^0,w,c
  7531  002A58  100F               	iorwf	(atoi@neg+1)^0,w,c
  7532  002A5A  A4D8               	btfss	status,2,c
  7533  002A5C  EF32  F015         	goto	u4481
  7534  002A60  EF34  F015         	goto	u4480
  7535  002A64                     u4481:
  7536  002A64  EF42  F015         	goto	l975
  7537  002A68                     u4480:
  7538  002A68  C015  F00A         	movff	atoi@n,??_atoi
  7539  002A6C  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7540  002A70  1E0A               	comf	??_atoi^0,f,c
  7541  002A72  1E0B               	comf	(??_atoi+1)^0,f,c
  7542  002A74  4A0A               	infsnz	??_atoi^0,f,c
  7543  002A76  2A0B               	incf	(??_atoi+1)^0,f,c
  7544  002A78  C00A  F008         	movff	??_atoi,?_atoi
  7545  002A7C  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7546  002A80  EF46  F015         	goto	l978
  7547  002A84                     l975:
  7548  002A84  C015  F008         	movff	atoi@n,?_atoi
  7549  002A88  C016  F009         	movff	atoi@n+1,?_atoi+1
  7550  002A8C                     l978:
  7551  002A8C  0012               	return		;funcret
  7552  002A8E                     __end_of_atoi:
  7553                           	callstack 0
  7554                           
  7555 ;; *************** function _isspace *****************
  7556 ;; Defined at:
  7557 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;  c               2    0[COMRAM] int 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;		None
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  2    0[COMRAM] int 
  7564 ;; Registers used:
  7565 ;;		wreg, status,2, status,0
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/0
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7571 ;;      Params:         2       0       0       0       0       0       0       0       0
  7572 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7573 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7574 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7575 ;;Total ram usage:        7 bytes
  7576 ;; Hardware stack levels used:    1
  7577 ;; Hardware stack levels required when called:    1
  7578 ;; This function calls:
  7579 ;;		Nothing
  7580 ;; This function is called by:
  7581 ;;		_atoi
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text29
  7586  00351C                     __ptext29:
  7587                           	callstack 0
  7588  00351C                     _isspace:
  7589                           	callstack 24
  7590  00351C  0E01               	movlw	1
  7591  00351E  6E07               	movwf	_isspace$992^0,c
  7592  003520  0E20               	movlw	32
  7593  003522  1801               	xorwf	isspace@c^0,w,c
  7594  003524  1002               	iorwf	(isspace@c+1)^0,w,c
  7595  003526  B4D8               	btfsc	status,2,c
  7596  003528  EF98  F01A         	goto	u3881
  7597  00352C  EF9A  F01A         	goto	u3880
  7598  003530                     u3881:
  7599  003530  EFB3  F01A         	goto	l3289
  7600  003534                     u3880:
  7601  003534  0EF7               	movlw	247
  7602  003536  6E03               	movwf	??_isspace^0,c
  7603  003538  0EFF               	movlw	255
  7604  00353A  6E04               	movwf	(??_isspace+1)^0,c
  7605  00353C  C001  F005         	movff	isspace@c,??_isspace+2
  7606  003540  C002  F006         	movff	isspace@c+1,??_isspace+3
  7607  003544  5003               	movf	??_isspace^0,w,c
  7608  003546  2605               	addwf	(??_isspace+2)^0,f,c
  7609  003548  5004               	movf	(??_isspace+1)^0,w,c
  7610  00354A  2206               	addwfc	(??_isspace+3)^0,f,c
  7611  00354C  5006               	movf	(??_isspace+3)^0,w,c
  7612  00354E  E109               	bnz	u3890
  7613  003550  0E05               	movlw	5
  7614  003552  5C05               	subwf	(??_isspace+2)^0,w,c
  7615  003554  A0D8               	btfss	status,0,c
  7616  003556  EFAF  F01A         	goto	u3891
  7617  00355A  EFB1  F01A         	goto	u3890
  7618  00355E                     u3891:
  7619  00355E  EFB3  F01A         	goto	l3289
  7620  003562                     u3890:
  7621  003562  0E00               	movlw	0
  7622  003564  6E07               	movwf	_isspace$992^0,c
  7623  003566                     l3289:
  7624  003566  C007  F001         	movff	_isspace$992,?_isspace
  7625  00356A  6A02               	clrf	(?_isspace+1)^0,c
  7626  00356C  0012               	return		;funcret
  7627  00356E                     __end_of_isspace:
  7628                           	callstack 0
  7629                           
  7630 ;; *************** function _isdigit *****************
  7631 ;; Defined at:
  7632 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;  c               2    0[COMRAM] int 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;		None
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  2    0[COMRAM] int 
  7639 ;; Registers used:
  7640 ;;		wreg, status,2, status,0
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7646 ;;      Params:         2       0       0       0       0       0       0       0       0
  7647 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7648 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7649 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7650 ;;Total ram usage:        6 bytes
  7651 ;; Hardware stack levels used:    1
  7652 ;; Hardware stack levels required when called:    1
  7653 ;; This function calls:
  7654 ;;		Nothing
  7655 ;; This function is called by:
  7656 ;;		_vfpfcnvrt
  7657 ;;		_atoi
  7658 ;; This function uses a non-reentrant model
  7659 ;;
  7660                           
  7661                           	psect	text30
  7662  0036AA                     __ptext30:
  7663                           	callstack 0
  7664  0036AA                     _isdigit:
  7665                           	callstack 25
  7666  0036AA  0ED0               	movlw	208
  7667  0036AC  6E03               	movwf	??_isdigit^0,c
  7668  0036AE  0EFF               	movlw	255
  7669  0036B0  6E04               	movwf	(??_isdigit+1)^0,c
  7670  0036B2  C001  F005         	movff	isdigit@c,??_isdigit+2
  7671  0036B6  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7672  0036BA  5003               	movf	??_isdigit^0,w,c
  7673  0036BC  2605               	addwf	(??_isdigit+2)^0,f,c
  7674  0036BE  5004               	movf	(??_isdigit+1)^0,w,c
  7675  0036C0  2206               	addwfc	(??_isdigit+3)^0,f,c
  7676  0036C2  5006               	movf	(??_isdigit+3)^0,w,c
  7677  0036C4  E10A               	bnz	u3860
  7678  0036C6  0E0A               	movlw	10
  7679  0036C8  5C05               	subwf	(??_isdigit+2)^0,w,c
  7680  0036CA  A0D8               	btfss	status,0,c
  7681  0036CC  EF6A  F01B         	goto	u3861
  7682  0036D0  EF6D  F01B         	goto	u3860
  7683  0036D4                     u3861:
  7684  0036D4  0E01               	movlw	1
  7685  0036D6  EF6E  F01B         	goto	u3870
  7686  0036DA                     u3860:
  7687  0036DA  0E00               	movlw	0
  7688  0036DC                     u3870:
  7689  0036DC  6E01               	movwf	?_isdigit^0,c
  7690  0036DE  6A02               	clrf	(?_isdigit+1)^0,c
  7691  0036E0  0012               	return		;funcret
  7692  0036E2                     __end_of_isdigit:
  7693                           	callstack 0
  7694                           
  7695 ;; *************** function ___wmul *****************
  7696 ;; Defined at:
  7697 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;  multiplier      2    0[COMRAM] unsigned int 
  7700 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7701 ;; Auto vars:     Size  Location     Type
  7702 ;;  product         2    4[COMRAM] unsigned int 
  7703 ;; Return value:  Size  Location     Type
  7704 ;;                  2    0[COMRAM] unsigned int 
  7705 ;; Registers used:
  7706 ;;		wreg, status,2, status,0, prodl, prodh
  7707 ;; Tracked objects:
  7708 ;;		On entry : 0/0
  7709 ;;		On exit  : 0/0
  7710 ;;		Unchanged: 0/0
  7711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7712 ;;      Params:         4       0       0       0       0       0       0       0       0
  7713 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7714 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7715 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7716 ;;Total ram usage:        6 bytes
  7717 ;; Hardware stack levels used:    1
  7718 ;; Hardware stack levels required when called:    1
  7719 ;; This function calls:
  7720 ;;		Nothing
  7721 ;; This function is called by:
  7722 ;;		_atoi
  7723 ;; This function uses a non-reentrant model
  7724 ;;
  7725                           
  7726                           	psect	text31
  7727  003766                     __ptext31:
  7728                           	callstack 0
  7729  003766                     ___wmul:
  7730                           	callstack 24
  7731  003766  5001               	movf	___wmul@multiplier^0,w,c
  7732  003768  0203               	mulwf	___wmul@multiplicand^0,c
  7733  00376A  CFF3 F005          	movff	prodl,___wmul@product
  7734  00376E  CFF4 F006          	movff	prodh,___wmul@product+1
  7735  003772  5001               	movf	___wmul@multiplier^0,w,c
  7736  003774  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7737  003776  50F3               	movf	243,w,c
  7738  003778  2606               	addwf	(___wmul@product+1)^0,f,c
  7739  00377A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7740  00377C  0203               	mulwf	___wmul@multiplicand^0,c
  7741  00377E  50F3               	movf	243,w,c
  7742  003780  2606               	addwf	(___wmul@product+1)^0,f,c
  7743  003782  C005  F001         	movff	___wmul@product,?___wmul
  7744  003786  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7745  00378A  0012               	return		;funcret
  7746  00378C                     __end_of___wmul:
  7747                           	callstack 0
  7748                           
  7749 ;; *************** function ___xxtofl *****************
  7750 ;; Defined at:
  7751 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;  sign            1    wreg     unsigned char 
  7754 ;;  val             4    0[COMRAM] long 
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;  sign            1    8[COMRAM] unsigned char 
  7757 ;;  arg             4   10[COMRAM] unsigned long 
  7758 ;;  exp             1    9[COMRAM] unsigned char 
  7759 ;; Return value:  Size  Location     Type
  7760 ;;                  4    0[COMRAM] unsigned char 
  7761 ;; Registers used:
  7762 ;;		wreg, status,2, status,0
  7763 ;; Tracked objects:
  7764 ;;		On entry : 0/0
  7765 ;;		On exit  : 0/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7768 ;;      Params:         4       0       0       0       0       0       0       0       0
  7769 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7770 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7771 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7772 ;;Total ram usage:       14 bytes
  7773 ;; Hardware stack levels used:    1
  7774 ;; Hardware stack levels required when called:    1
  7775 ;; This function calls:
  7776 ;;		Nothing
  7777 ;; This function is called by:
  7778 ;;		_mostra_resultado
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           	psect	text32
  7783  00274A                     __ptext32:
  7784                           	callstack 0
  7785  00274A                     ___xxtofl:
  7786                           	callstack 28
  7787                           
  7788                           ;incstack = 0
  7789                           ;___xxtofl@sign stored from wreg
  7790  00274A  6E09               	movwf	___xxtofl@sign^0,c
  7791  00274C  5009               	movf	___xxtofl@sign^0,w,c
  7792  00274E  B4D8               	btfsc	status,2,c
  7793  002750  EFAC  F013         	goto	u4691
  7794  002754  EFAE  F013         	goto	u4690
  7795  002758                     u4691:
  7796  002758  EFD0  F013         	goto	l745
  7797  00275C                     u4690:
  7798  00275C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7799  00275E  EFB5  F013         	goto	u4700
  7800  002762  EFB3  F013         	goto	u4701
  7801  002766                     u4701:
  7802  002766  EFD0  F013         	goto	l745
  7803  00276A                     u4700:
  7804  00276A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7805  00276E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7806  002772  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7807  002776  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7808  00277A  1E05               	comf	??___xxtofl^0,f,c
  7809  00277C  1E06               	comf	(??___xxtofl+1)^0,f,c
  7810  00277E  1E07               	comf	(??___xxtofl+2)^0,f,c
  7811  002780  1E08               	comf	(??___xxtofl+3)^0,f,c
  7812  002782  2A05               	incf	??___xxtofl^0,f,c
  7813  002784  0E00               	movlw	0
  7814  002786  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7815  002788  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7816  00278A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7817  00278C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7818  002790  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7819  002794  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7820  002798  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7821  00279C  EFD8  F013         	goto	l3763
  7822  0027A0                     l745:
  7823  0027A0  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7824  0027A4  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7825  0027A8  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7826  0027AC  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7827  0027B0                     l3763:
  7828  0027B0  5001               	movf	___xxtofl@val^0,w,c
  7829  0027B2  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7830  0027B4  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7831  0027B6  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7832  0027B8  A4D8               	btfss	status,2,c
  7833  0027BA  EFE1  F013         	goto	u4711
  7834  0027BE  EFE3  F013         	goto	u4710
  7835  0027C2                     u4711:
  7836  0027C2  EFED  F013         	goto	l3769
  7837  0027C6                     u4710:
  7838  0027C6  0E00               	movlw	0
  7839  0027C8  6E01               	movwf	?___xxtofl^0,c
  7840  0027CA  0E00               	movlw	0
  7841  0027CC  6E02               	movwf	(?___xxtofl+1)^0,c
  7842  0027CE  0E00               	movlw	0
  7843  0027D0  6E03               	movwf	(?___xxtofl+2)^0,c
  7844  0027D2  0E00               	movlw	0
  7845  0027D4  6E04               	movwf	(?___xxtofl+3)^0,c
  7846  0027D6  EF7E  F014         	goto	l748
  7847  0027DA                     l3769:
  7848  0027DA  0E96               	movlw	150
  7849  0027DC  6E0A               	movwf	___xxtofl@exp^0,c
  7850  0027DE  EFF7  F013         	goto	l3773
  7851  0027E2                     l3771:
  7852  0027E2  2A0A               	incf	___xxtofl@exp^0,f,c
  7853  0027E4  90D8               	bcf	status,0,c
  7854  0027E6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7855  0027E8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7856  0027EA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7857  0027EC  320B               	rrcf	___xxtofl@arg^0,f,c
  7858  0027EE                     l3773:
  7859  0027EE  0E00               	movlw	0
  7860  0027F0  140B               	andwf	___xxtofl@arg^0,w,c
  7861  0027F2  6E05               	movwf	??___xxtofl^0,c
  7862  0027F4  0E00               	movlw	0
  7863  0027F6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7864  0027F8  6E06               	movwf	(??___xxtofl+1)^0,c
  7865  0027FA  0E00               	movlw	0
  7866  0027FC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7867  0027FE  6E07               	movwf	(??___xxtofl+2)^0,c
  7868  002800  0EFE               	movlw	254
  7869  002802  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7870  002804  6E08               	movwf	(??___xxtofl+3)^0,c
  7871  002806  5005               	movf	??___xxtofl^0,w,c
  7872  002808  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7873  00280A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7874  00280C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7875  00280E  A4D8               	btfss	status,2,c
  7876  002810  EF0C  F014         	goto	u4721
  7877  002814  EF0E  F014         	goto	u4720
  7878  002818                     u4721:
  7879  002818  EFF1  F013         	goto	l3771
  7880  00281C                     u4720:
  7881  00281C  EF1C  F014         	goto	l752
  7882  002820                     l3775:
  7883  002820  2A0A               	incf	___xxtofl@exp^0,f,c
  7884  002822  0E01               	movlw	1
  7885  002824  260B               	addwf	___xxtofl@arg^0,f,c
  7886  002826  0E00               	movlw	0
  7887  002828  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7888  00282A  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7889  00282C  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7890  00282E  90D8               	bcf	status,0,c
  7891  002830  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7892  002832  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7893  002834  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7894  002836  320B               	rrcf	___xxtofl@arg^0,f,c
  7895  002838                     l752:
  7896  002838  0E00               	movlw	0
  7897  00283A  140B               	andwf	___xxtofl@arg^0,w,c
  7898  00283C  6E05               	movwf	??___xxtofl^0,c
  7899  00283E  0E00               	movlw	0
  7900  002840  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7901  002842  6E06               	movwf	(??___xxtofl+1)^0,c
  7902  002844  0E00               	movlw	0
  7903  002846  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7904  002848  6E07               	movwf	(??___xxtofl+2)^0,c
  7905  00284A  0EFF               	movlw	255
  7906  00284C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7907  00284E  6E08               	movwf	(??___xxtofl+3)^0,c
  7908  002850  5005               	movf	??___xxtofl^0,w,c
  7909  002852  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7910  002854  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7911  002856  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7912  002858  A4D8               	btfss	status,2,c
  7913  00285A  EF31  F014         	goto	u4731
  7914  00285E  EF33  F014         	goto	u4730
  7915  002862                     u4731:
  7916  002862  EF10  F014         	goto	l3775
  7917  002866                     u4730:
  7918  002866  EF3B  F014         	goto	l3783
  7919  00286A                     l3781:
  7920  00286A  060A               	decf	___xxtofl@exp^0,f,c
  7921  00286C  90D8               	bcf	status,0,c
  7922  00286E  360B               	rlcf	___xxtofl@arg^0,f,c
  7923  002870  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7924  002872  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7925  002874  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7926  002876                     l3783:
  7927  002876  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7928  002878  EF40  F014         	goto	u4741
  7929  00287C  EF42  F014         	goto	u4740
  7930  002880                     u4741:
  7931  002880  EF4A  F014         	goto	l759
  7932  002884                     u4740:
  7933  002884  0E02               	movlw	2
  7934  002886  600A               	cpfslt	___xxtofl@exp^0,c
  7935  002888  EF48  F014         	goto	u4751
  7936  00288C  EF4A  F014         	goto	u4750
  7937  002890                     u4751:
  7938  002890  EF35  F014         	goto	l3781
  7939  002894                     u4750:
  7940  002894                     l759:
  7941  002894  B00A               	btfsc	___xxtofl@exp^0,0,c
  7942  002896  EF4F  F014         	goto	u4761
  7943  00289A  EF51  F014         	goto	u4760
  7944  00289E                     u4761:
  7945  00289E  EF52  F014         	goto	l3789
  7946  0028A2                     u4760:
  7947  0028A2  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7948  0028A4                     l3789:
  7949  0028A4  90D8               	bcf	status,0,c
  7950  0028A6  320A               	rrcf	___xxtofl@exp^0,f,c
  7951  0028A8  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7952  0028AC  6A06               	clrf	(??___xxtofl+1)^0,c
  7953  0028AE  6A07               	clrf	(??___xxtofl+2)^0,c
  7954  0028B0  6A08               	clrf	(??___xxtofl+3)^0,c
  7955  0028B2  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7956  0028B6  6A07               	clrf	(??___xxtofl+2)^0,c
  7957  0028B8  6A06               	clrf	(??___xxtofl+1)^0,c
  7958  0028BA  6A05               	clrf	??___xxtofl^0,c
  7959  0028BC  5005               	movf	??___xxtofl^0,w,c
  7960  0028BE  120B               	iorwf	___xxtofl@arg^0,f,c
  7961  0028C0  5006               	movf	(??___xxtofl+1)^0,w,c
  7962  0028C2  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7963  0028C4  5007               	movf	(??___xxtofl+2)^0,w,c
  7964  0028C6  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7965  0028C8  5008               	movf	(??___xxtofl+3)^0,w,c
  7966  0028CA  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7967  0028CC  5009               	movf	___xxtofl@sign^0,w,c
  7968  0028CE  B4D8               	btfsc	status,2,c
  7969  0028D0  EF6C  F014         	goto	u4771
  7970  0028D4  EF6E  F014         	goto	u4770
  7971  0028D8                     u4771:
  7972  0028D8  EF76  F014         	goto	l3799
  7973  0028DC                     u4770:
  7974  0028DC  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7975  0028DE  EF75  F014         	goto	u4780
  7976  0028E2  EF73  F014         	goto	u4781
  7977  0028E6                     u4781:
  7978  0028E6  EF76  F014         	goto	l3799
  7979  0028EA                     u4780:
  7980  0028EA  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7981  0028EC                     l3799:
  7982  0028EC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7983  0028F0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7984  0028F4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7985  0028F8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7986  0028FC                     l748:
  7987  0028FC  0012               	return		;funcret
  7988  0028FE                     __end_of___xxtofl:
  7989                           	callstack 0
  7990                           
  7991 ;; *************** function _limpa_lcd *****************
  7992 ;; Defined at:
  7993 ;;		line 36 in file "lcd.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;		None
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;		None
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  1    wreg      void 
  8000 ;; Registers used:
  8001 ;;		wreg, status,2, status,0, cstack
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8007 ;;      Params:         0       0       0       0       0       0       0       0       0
  8008 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8009 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8010 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8011 ;;Total ram usage:        1 bytes
  8012 ;; Hardware stack levels used:    1
  8013 ;; Hardware stack levels required when called:    3
  8014 ;; This function calls:
  8015 ;;		_envia_byte_lcd
  8016 ;; This function is called by:
  8017 ;;		_main
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021                           	psect	text33
  8022  0037CE                     __ptext33:
  8023                           	callstack 0
  8024  0037CE                     _limpa_lcd:
  8025                           	callstack 27
  8026  0037CE                     
  8027                           ;lcd.c: 38:   envia_byte_lcd(0,0x01);
  8028  0037CE  0E01               	movlw	1
  8029  0037D0  6E03               	movwf	envia_byte_lcd@dado^0,c
  8030  0037D2  0E00               	movlw	0
  8031  0037D4  ECC6  F01B         	call	_envia_byte_lcd
  8032  0037D8                     
  8033                           ;lcd.c: 39:   _delay((unsigned long)((2)*(4000000/4000.0)));
  8034  0037D8  0E03               	movlw	3
  8035  0037DA  6E05               	movwf	??_limpa_lcd^0,c
  8036  0037DC  0E98               	movlw	152
  8037  0037DE                     u4847:
  8038  0037DE  2EE8               	decfsz	wreg,f,c
  8039  0037E0  D7FE               	bra	u4847
  8040  0037E2  2E05               	decfsz	??_limpa_lcd^0,f,c
  8041  0037E4  D7FC               	bra	u4847
  8042  0037E6  0012               	return		;funcret
  8043  0037E8                     __end_of_limpa_lcd:
  8044                           	callstack 0
  8045                           
  8046 ;; *************** function _inicializa_lcd *****************
  8047 ;; Defined at:
  8048 ;;		line 43 in file "lcd.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;		None
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;		None
  8053 ;; Return value:  Size  Location     Type
  8054 ;;                  1    wreg      void 
  8055 ;; Registers used:
  8056 ;;		wreg, status,2, status,0, cstack
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8062 ;;      Params:         0       0       0       0       0       0       0       0       0
  8063 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8064 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8065 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8066 ;;Total ram usage:        1 bytes
  8067 ;; Hardware stack levels used:    1
  8068 ;; Hardware stack levels required when called:    3
  8069 ;; This function calls:
  8070 ;;		_envia_byte_lcd
  8071 ;;		_envia_nibble_lcd
  8072 ;; This function is called by:
  8073 ;;		_main
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text34
  8078  0032FE                     __ptext34:
  8079                           	callstack 0
  8080  0032FE                     _inicializa_lcd:
  8081                           	callstack 27
  8082  0032FE                     
  8083                           ;lcd.c: 45:  PORTDbits.RD1 = 0;
  8084  0032FE  9283               	bcf	131,1,c	;volatile
  8085                           
  8086                           ;lcd.c: 46:  PORTDbits.RD4 = 0;
  8087  003300  9883               	bcf	131,4,c	;volatile
  8088                           
  8089                           ;lcd.c: 47:  PORTDbits.RD5 = 0;
  8090  003302  9A83               	bcf	131,5,c	;volatile
  8091                           
  8092                           ;lcd.c: 48:  PORTDbits.RD6 = 0;
  8093  003304  9C83               	bcf	131,6,c	;volatile
  8094                           
  8095                           ;lcd.c: 49:  PORTDbits.RD7 = 0;
  8096  003306  9E83               	bcf	131,7,c	;volatile
  8097  003308                     
  8098                           ;lcd.c: 51:  _delay((unsigned long)((50)*(4000000/4000.0)));
  8099  003308  0E41               	movlw	65
  8100  00330A  6E05               	movwf	??_inicializa_lcd^0,c
  8101  00330C  0EEE               	movlw	238
  8102  00330E                     u4857:
  8103  00330E  2EE8               	decfsz	wreg,f,c
  8104  003310  D7FE               	bra	u4857
  8105  003312  2E05               	decfsz	??_inicializa_lcd^0,f,c
  8106  003314  D7FC               	bra	u4857
  8107  003316  D000               	nop2	
  8108  003318                     
  8109                           ;lcd.c: 52:  envia_nibble_lcd(0x03);
  8110  003318  0E03               	movlw	3
  8111  00331A  EC3B  F019         	call	_envia_nibble_lcd
  8112  00331E                     
  8113                           ;lcd.c: 53:  _delay((unsigned long)((4)*(4000000/4000.0)));
  8114  00331E  0E06               	movlw	6
  8115  003320  6E05               	movwf	??_inicializa_lcd^0,c
  8116  003322  0E30               	movlw	48
  8117  003324                     u4867:
  8118  003324  2EE8               	decfsz	wreg,f,c
  8119  003326  D7FE               	bra	u4867
  8120  003328  2E05               	decfsz	??_inicializa_lcd^0,f,c
  8121  00332A  D7FC               	bra	u4867
  8122  00332C  D000               	nop2	
  8123                           
  8124                           ;lcd.c: 54:  envia_nibble_lcd(0x03);
  8125  00332E  0E03               	movlw	3
  8126  003330  EC3B  F019         	call	_envia_nibble_lcd
  8127  003334                     
  8128                           ;lcd.c: 55:  _delay((unsigned long)((100)*(4000000/4000000.0)));
  8129  003334  0E21               	movlw	33
  8130  003336                     u4877:
  8131  003336  2EE8               	decfsz	wreg,f,c
  8132  003338  D7FE               	bra	u4877
  8133  00333A  F000               	nop	
  8134  00333C                     
  8135                           ;lcd.c: 56:  envia_nibble_lcd(0x03);
  8136  00333C  0E03               	movlw	3
  8137  00333E  EC3B  F019         	call	_envia_nibble_lcd
  8138  003342                     
  8139                           ;lcd.c: 58:  envia_nibble_lcd(0x02);
  8140  003342  0E02               	movlw	2
  8141  003344  EC3B  F019         	call	_envia_nibble_lcd
  8142  003348                     
  8143                           ;lcd.c: 60:  envia_byte_lcd(0,0x01);
  8144  003348  0E01               	movlw	1
  8145  00334A  6E03               	movwf	envia_byte_lcd@dado^0,c
  8146  00334C  0E00               	movlw	0
  8147  00334E  ECC6  F01B         	call	_envia_byte_lcd
  8148                           
  8149                           ;lcd.c: 61:  _delay((unsigned long)((2)*(4000000/4000.0)));
  8150  003352  0E03               	movlw	3
  8151  003354  6E05               	movwf	??_inicializa_lcd^0,c
  8152  003356  0E98               	movlw	152
  8153  003358                     u4887:
  8154  003358  2EE8               	decfsz	wreg,f,c
  8155  00335A  D7FE               	bra	u4887
  8156  00335C  2E05               	decfsz	??_inicializa_lcd^0,f,c
  8157  00335E  D7FC               	bra	u4887
  8158  003360                     
  8159                           ;lcd.c: 63:  envia_byte_lcd(0,0x28);
  8160  003360  0E28               	movlw	40
  8161  003362  6E03               	movwf	envia_byte_lcd@dado^0,c
  8162  003364  0E00               	movlw	0
  8163  003366  ECC6  F01B         	call	_envia_byte_lcd
  8164  00336A                     
  8165                           ;lcd.c: 65:  envia_byte_lcd(0,0x0c);
  8166  00336A  0E0C               	movlw	12
  8167  00336C  6E03               	movwf	envia_byte_lcd@dado^0,c
  8168  00336E  0E00               	movlw	0
  8169  003370  ECC6  F01B         	call	_envia_byte_lcd
  8170  003374                     
  8171                           ;lcd.c: 67:  envia_byte_lcd(0,0x06);
  8172  003374  0E06               	movlw	6
  8173  003376  6E03               	movwf	envia_byte_lcd@dado^0,c
  8174  003378  0E00               	movlw	0
  8175  00337A  ECC6  F01B         	call	_envia_byte_lcd
  8176  00337E  0012               	return		;funcret
  8177  003380                     __end_of_inicializa_lcd:
  8178                           	callstack 0
  8179                           
  8180 ;; *************** function _caracter_inicio *****************
  8181 ;; Defined at:
  8182 ;;		line 73 in file "lcd.c"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;  linha           1    wreg     unsigned char 
  8185 ;;  coluna          1    4[COMRAM] unsigned char 
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;  linha           1    5[COMRAM] unsigned char 
  8188 ;;  posicao         1    6[COMRAM] unsigned char 
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  1    wreg      void 
  8191 ;; Registers used:
  8192 ;;		wreg, status,2, status,0, cstack
  8193 ;; Tracked objects:
  8194 ;;		On entry : 0/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8198 ;;      Params:         1       0       0       0       0       0       0       0       0
  8199 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8201 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8202 ;;Total ram usage:        3 bytes
  8203 ;; Hardware stack levels used:    1
  8204 ;; Hardware stack levels required when called:    3
  8205 ;; This function calls:
  8206 ;;		_envia_byte_lcd
  8207 ;; This function is called by:
  8208 ;;		_main
  8209 ;; This function uses a non-reentrant model
  8210 ;;
  8211                           
  8212                           	psect	text35
  8213  0035F8                     __ptext35:
  8214                           	callstack 0
  8215  0035F8                     _caracter_inicio:
  8216                           	callstack 27
  8217                           
  8218                           ;incstack = 0
  8219                           ;caracter_inicio@linha stored from wreg
  8220  0035F8  6E06               	movwf	caracter_inicio@linha^0,c
  8221  0035FA                     
  8222                           ;lcd.c: 73:  void caracter_inicio(char linha,char coluna);lcd.c: 74: {;lcd.c: 75:  char 
      +                          posicao=0;
  8223  0035FA  0E00               	movlw	0
  8224  0035FC  6E07               	movwf	caracter_inicio@posicao^0,c
  8225  0035FE                     
  8226                           ;lcd.c: 76:  if(linha == 1)
  8227  0035FE  0406               	decf	caracter_inicio@linha^0,w,c
  8228  003600  A4D8               	btfss	status,2,c
  8229  003602  EF05  F01B         	goto	u4791
  8230  003606  EF07  F01B         	goto	u4790
  8231  00360A                     u4791:
  8232  00360A  EF09  F01B         	goto	l3835
  8233  00360E                     u4790:
  8234  00360E                     
  8235                           ;lcd.c: 77: {;lcd.c: 78:  posicao=0x80;
  8236  00360E  0E80               	movlw	128
  8237  003610  6E07               	movwf	caracter_inicio@posicao^0,c
  8238  003612                     l3835:
  8239                           
  8240                           ;lcd.c: 80:  if(linha == 2)
  8241  003612  0E02               	movlw	2
  8242  003614  1806               	xorwf	caracter_inicio@linha^0,w,c
  8243  003616  A4D8               	btfss	status,2,c
  8244  003618  EF10  F01B         	goto	u4801
  8245  00361C  EF12  F01B         	goto	u4800
  8246  003620                     u4801:
  8247  003620  EF14  F01B         	goto	l3839
  8248  003624                     u4800:
  8249  003624                     
  8250                           ;lcd.c: 81: {;lcd.c: 82:  posicao=0xc0;
  8251  003624  0EC0               	movlw	192
  8252  003626  6E07               	movwf	caracter_inicio@posicao^0,c
  8253  003628                     l3839:
  8254                           
  8255                           ;lcd.c: 85: posicao=posicao+coluna;
  8256  003628  5007               	movf	caracter_inicio@posicao^0,w,c
  8257  00362A  2405               	addwf	caracter_inicio@coluna^0,w,c
  8258  00362C  6E07               	movwf	caracter_inicio@posicao^0,c
  8259  00362E                     
  8260                           ;lcd.c: 87: envia_byte_lcd(0,posicao);
  8261  00362E  C007  F003         	movff	caracter_inicio@posicao,envia_byte_lcd@dado
  8262  003632  0E00               	movlw	0
  8263  003634  ECC6  F01B         	call	_envia_byte_lcd
  8264  003638  0012               	return		;funcret
  8265  00363A                     __end_of_caracter_inicio:
  8266                           	callstack 0
  8267                           
  8268 ;; *************** function _envia_byte_lcd *****************
  8269 ;; Defined at:
  8270 ;;		line 22 in file "lcd.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;  endereco        1    wreg     unsigned char 
  8273 ;;  dado            1    2[COMRAM] unsigned char 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;  endereco        1    3[COMRAM] unsigned char 
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  1    wreg      void 
  8278 ;; Registers used:
  8279 ;;		wreg, status,2, status,0, cstack
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8285 ;;      Params:         1       0       0       0       0       0       0       0       0
  8286 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8288 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8289 ;;Total ram usage:        2 bytes
  8290 ;; Hardware stack levels used:    1
  8291 ;; Hardware stack levels required when called:    2
  8292 ;; This function calls:
  8293 ;;		_envia_nibble_lcd
  8294 ;; This function is called by:
  8295 ;;		_escreve_lcd
  8296 ;;		_limpa_lcd
  8297 ;;		_inicializa_lcd
  8298 ;;		_caracter_inicio
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           	psect	text36
  8303  00378C                     __ptext36:
  8304                           	callstack 0
  8305  00378C                     _envia_byte_lcd:
  8306                           	callstack 21
  8307                           
  8308                           ;incstack = 0
  8309                           ;envia_byte_lcd@endereco stored from wreg
  8310  00378C  6E04               	movwf	envia_byte_lcd@endereco^0,c
  8311  00378E                     
  8312                           ;lcd.c: 22: void envia_byte_lcd(char endereco,char dado);lcd.c: 23: {;lcd.c: 24:  PORTDb
      +                          its.RD0 = endereco;
  8313  00378E  B004               	btfsc	envia_byte_lcd@endereco^0,0,c
  8314  003790  D002               	bra	u2425
  8315  003792  9083               	bcf	131,0,c	;volatile
  8316  003794  D001               	bra	u2426
  8317  003796                     u2425:
  8318  003796  8083               	bsf	131,0,c	;volatile
  8319  003798                     u2426:
  8320  003798                     
  8321                           ;lcd.c: 25:  _delay((unsigned long)((5)*(4000000/4000000.0)));
  8322  003798  D000               	nop2		;2 cycle nop
  8323  00379A  D000               	nop2		;2 cycle nop
  8324  00379C  F000               	nop	
  8325  00379E                     
  8326                           ;lcd.c: 26:  envia_nibble_lcd(dado>>4);
  8327  00379E  3803               	swapf	envia_byte_lcd@dado^0,w,c
  8328  0037A0  0B0F               	andlw	15
  8329  0037A2  EC3B  F019         	call	_envia_nibble_lcd
  8330  0037A6                     
  8331                           ;lcd.c: 27:  envia_nibble_lcd(dado & 0x0f);
  8332  0037A6  5003               	movf	envia_byte_lcd@dado^0,w,c
  8333  0037A8  0B0F               	andlw	15
  8334  0037AA  EC3B  F019         	call	_envia_nibble_lcd
  8335  0037AE  0012               	return		;funcret
  8336  0037B0                     __end_of_envia_byte_lcd:
  8337                           	callstack 0
  8338                           
  8339 ;; *************** function _envia_nibble_lcd *****************
  8340 ;; Defined at:
  8341 ;;		line 4 in file "lcd.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;  dado            1    wreg     unsigned char 
  8344 ;; Auto vars:     Size  Location     Type
  8345 ;;  dado            1    1[COMRAM] unsigned char 
  8346 ;; Return value:  Size  Location     Type
  8347 ;;                  1    wreg      void 
  8348 ;; Registers used:
  8349 ;;		wreg, status,2, status,0
  8350 ;; Tracked objects:
  8351 ;;		On entry : 0/0
  8352 ;;		On exit  : 0/0
  8353 ;;		Unchanged: 0/0
  8354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8355 ;;      Params:         0       0       0       0       0       0       0       0       0
  8356 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8357 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8358 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8359 ;;Total ram usage:        2 bytes
  8360 ;; Hardware stack levels used:    1
  8361 ;; Hardware stack levels required when called:    1
  8362 ;; This function calls:
  8363 ;;		Nothing
  8364 ;; This function is called by:
  8365 ;;		_envia_byte_lcd
  8366 ;;		_inicializa_lcd
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370                           	psect	text37
  8371  003276                     __ptext37:
  8372                           	callstack 0
  8373  003276                     _envia_nibble_lcd:
  8374                           	callstack 21
  8375                           
  8376                           ;incstack = 0
  8377                           ;envia_nibble_lcd@dado stored from wreg
  8378  003276  6E02               	movwf	envia_nibble_lcd@dado^0,c
  8379  003278                     
  8380                           ;lcd.c: 4: void envia_nibble_lcd(char dado);lcd.c: 5: {;lcd.c: 6:   PORTDbits.RD1 = 1;
  8381  003278  8283               	bsf	131,1,c	;volatile
  8382  00327A                     
  8383                           ;lcd.c: 7:   PORTDbits.RD4 = dado & 0x01;
  8384  00327A  C002  F001         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  8385  00327E  0E01               	movlw	1
  8386  003280  1601               	andwf	??_envia_nibble_lcd^0,f,c
  8387  003282  3A01               	swapf	??_envia_nibble_lcd^0,f,c
  8388  003284  5083               	movf	131,w,c	;volatile
  8389  003286  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  8390  003288  0BEF               	andlw	-17
  8391  00328A  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  8392  00328C  6E83               	movwf	131,c	;volatile
  8393                           
  8394                           ;lcd.c: 8:   PORTDbits.RD5 = (dado >> 1) & 0x01;
  8395  00328E  C002  F001         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  8396  003292  90D8               	bcf	status,0,c
  8397  003294  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  8398  003296  0E01               	movlw	1
  8399  003298  1601               	andwf	??_envia_nibble_lcd^0,f,c
  8400  00329A  3A01               	swapf	??_envia_nibble_lcd^0,f,c
  8401  00329C  4601               	rlncf	??_envia_nibble_lcd^0,f,c
  8402  00329E  5083               	movf	131,w,c	;volatile
  8403  0032A0  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  8404  0032A2  0BDF               	andlw	-33
  8405  0032A4  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  8406  0032A6  6E83               	movwf	131,c	;volatile
  8407                           
  8408                           ;lcd.c: 9:   PORTDbits.RD6 = (dado >> 2) & 0x01;
  8409  0032A8  C002  F001         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  8410  0032AC  90D8               	bcf	status,0,c
  8411  0032AE  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  8412  0032B0  90D8               	bcf	status,0,c
  8413  0032B2  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  8414  0032B4  0E01               	movlw	1
  8415  0032B6  1601               	andwf	??_envia_nibble_lcd^0,f,c
  8416  0032B8  3A01               	swapf	??_envia_nibble_lcd^0,f,c
  8417  0032BA  4601               	rlncf	??_envia_nibble_lcd^0,f,c
  8418  0032BC  4601               	rlncf	??_envia_nibble_lcd^0,f,c
  8419  0032BE  5083               	movf	131,w,c	;volatile
  8420  0032C0  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  8421  0032C2  0BBF               	andlw	-65
  8422  0032C4  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  8423  0032C6  6E83               	movwf	131,c	;volatile
  8424                           
  8425                           ;lcd.c: 10:   PORTDbits.RD7 = (dado >> 3) & 0x01;
  8426  0032C8  C002  F001         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  8427  0032CC  90D8               	bcf	status,0,c
  8428  0032CE  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  8429  0032D0  90D8               	bcf	status,0,c
  8430  0032D2  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  8431  0032D4  90D8               	bcf	status,0,c
  8432  0032D6  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  8433  0032D8  0E01               	movlw	1
  8434  0032DA  1601               	andwf	??_envia_nibble_lcd^0,f,c
  8435  0032DC  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  8436  0032DE  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  8437  0032E0  5083               	movf	131,w,c	;volatile
  8438  0032E2  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  8439  0032E4  0B7F               	andlw	-129
  8440  0032E6  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  8441  0032E8  6E83               	movwf	131,c	;volatile
  8442  0032EA                     
  8443                           ;lcd.c: 13:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  8444  0032EA  0E10               	movlw	16
  8445  0032EC                     u4897:
  8446  0032EC  2EE8               	decfsz	wreg,f,c
  8447  0032EE  D7FE               	bra	u4897
  8448  0032F0  D000               	nop2	
  8449  0032F2                     
  8450                           ;lcd.c: 14:   PORTDbits.RD1 = 0;
  8451  0032F2  9283               	bcf	131,1,c	;volatile
  8452  0032F4                     
  8453                           ;lcd.c: 15:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  8454  0032F4  0E10               	movlw	16
  8455  0032F6                     u4907:
  8456  0032F6  2EE8               	decfsz	wreg,f,c
  8457  0032F8  D7FE               	bra	u4907
  8458  0032FA  D000               	nop2	
  8459  0032FC  0012               	return		;funcret
  8460  0032FE                     __end_of_envia_nibble_lcd:
  8461                           	callstack 0
  8462                           
  8463 ;; *************** function _ISR *****************
  8464 ;; Defined at:
  8465 ;;		line 75 in file "main.c"
  8466 ;; Parameters:    Size  Location     Type
  8467 ;;		None
  8468 ;; Auto vars:     Size  Location     Type
  8469 ;;		None
  8470 ;; Return value:  Size  Location     Type
  8471 ;;                  1    wreg      void 
  8472 ;; Registers used:
  8473 ;;		None
  8474 ;; Tracked objects:
  8475 ;;		On entry : 0/0
  8476 ;;		On exit  : 0/0
  8477 ;;		Unchanged: 0/0
  8478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8479 ;;      Params:         0       0       0       0       0       0       0       0       0
  8480 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8482 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8483 ;;Total ram usage:        0 bytes
  8484 ;; Hardware stack levels used:    1
  8485 ;; This function calls:
  8486 ;;		Nothing
  8487 ;; This function is called by:
  8488 ;;		Interrupt level 2
  8489 ;; This function uses a non-reentrant model
  8490 ;;
  8491                           
  8492                           	psect	intcode
  8493  000008                     __pintcode:
  8494                           	callstack 0
  8495  000008                     _ISR:
  8496                           	callstack 18
  8497                           
  8498                           ;incstack = 0
  8499  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8500  00000A  EDD8  F01B         	call	int_func,f	;refresh shadow registers
  8501                           
  8502                           	psect	intcode_body
  8503  0037B0                     __pintcode_body:
  8504                           	callstack 18
  8505  0037B0                     int_func:
  8506                           	callstack 18
  8507  0037B0  0006               	pop		; remove dummy address from shadow register refresh
  8508  0037B2                     
  8509                           ;main.c: 76:     if(ADIF){
  8510  0037B2  AC9E               	btfss	3998,6,c	;volatile
  8511  0037B4  EFDE  F01B         	goto	i2u482_41
  8512  0037B8  EFE0  F01B         	goto	i2u482_40
  8513  0037BC                     i2u482_41:
  8514  0037BC  EFE5  F01B         	goto	i2l60
  8515  0037C0                     i2u482_40:
  8516  0037C0                     
  8517                           ;main.c: 77:         ADIF = 0;
  8518  0037C0  9C9E               	bcf	3998,6,c	;volatile
  8519                           
  8520                           ;main.c: 78:         resultado = ADRES;
  8521  0037C2  CFC3 F0D9          	movff	4035,_resultado	;volatile
  8522  0037C6  CFC4 F0DA          	movff	4036,_resultado+1	;volatile
  8523  0037CA                     i2l60:
  8524  0037CA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8525  0037CC  0011               	retfie		f
  8526  0037CE                     __end_of_ISR:
  8527                           	callstack 0
  8528                           
  8529                           	psect	rparam
  8530  0000                     
  8531                           	psect	temp
  8532  00005F                     btemp:
  8533                           	callstack 0
  8534  00005F                     	ds	1
  8535  0000                     int$flags	set	btemp
  8536  0000                     wtemp8	set	btemp+1
  8537  0000                     ttemp5	set	btemp+1
  8538  0000                     ttemp6	set	btemp+4
  8539  0000                     ttemp7	set	btemp+8
  8540                           
  8541                           	psect	idloc
  8542                           
  8543                           ;Config register IDLOC0 @ 0x200000
  8544                           ;	unspecified, using default values
  8545  200000                     	org	2097152
  8546  200000  FF                 	db	255
  8547                           
  8548                           ;Config register IDLOC1 @ 0x200001
  8549                           ;	unspecified, using default values
  8550  200001                     	org	2097153
  8551  200001  FF                 	db	255
  8552                           
  8553                           ;Config register IDLOC2 @ 0x200002
  8554                           ;	unspecified, using default values
  8555  200002                     	org	2097154
  8556  200002  FF                 	db	255
  8557                           
  8558                           ;Config register IDLOC3 @ 0x200003
  8559                           ;	unspecified, using default values
  8560  200003                     	org	2097155
  8561  200003  FF                 	db	255
  8562                           
  8563                           ;Config register IDLOC4 @ 0x200004
  8564                           ;	unspecified, using default values
  8565  200004                     	org	2097156
  8566  200004  FF                 	db	255
  8567                           
  8568                           ;Config register IDLOC5 @ 0x200005
  8569                           ;	unspecified, using default values
  8570  200005                     	org	2097157
  8571  200005  FF                 	db	255
  8572                           
  8573                           ;Config register IDLOC6 @ 0x200006
  8574                           ;	unspecified, using default values
  8575  200006                     	org	2097158
  8576  200006  FF                 	db	255
  8577                           
  8578                           ;Config register IDLOC7 @ 0x200007
  8579                           ;	unspecified, using default values
  8580  200007                     	org	2097159
  8581  200007  FF                 	db	255
  8582                           
  8583                           	psect	config
  8584                           
  8585                           ;Config register CONFIG1L @ 0x300000
  8586                           ;	unspecified, using default values
  8587                           ;	PLL Prescaler Selection bits
  8588                           ;	PLLDIV = 0x0, unprogrammed default
  8589                           ;	System Clock Postscaler Selection bits
  8590                           ;	CPUDIV = 0x0, unprogrammed default
  8591                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8592                           ;	USBDIV = 0x0, unprogrammed default
  8593  300000                     	org	3145728
  8594  300000  00                 	db	0
  8595                           
  8596                           ;Config register CONFIG1H @ 0x300001
  8597                           ;	unspecified, using default values
  8598                           ;	Oscillator Selection bits
  8599                           ;	FOSC = 0x5, unprogrammed default
  8600                           ;	Fail-Safe Clock Monitor Enable bit
  8601                           ;	FCMEN = 0x0, unprogrammed default
  8602                           ;	Internal/External Oscillator Switchover bit
  8603                           ;	IESO = 0x0, unprogrammed default
  8604  300001                     	org	3145729
  8605  300001  05                 	db	5
  8606                           
  8607                           ;Config register CONFIG2L @ 0x300002
  8608                           ;	unspecified, using default values
  8609                           ;	Power-up Timer Enable bit
  8610                           ;	PWRT = 0x1, unprogrammed default
  8611                           ;	Brown-out Reset Enable bits
  8612                           ;	BOR = 0x3, unprogrammed default
  8613                           ;	Brown-out Reset Voltage bits
  8614                           ;	BORV = 0x3, unprogrammed default
  8615                           ;	USB Voltage Regulator Enable bit
  8616                           ;	VREGEN = 0x0, unprogrammed default
  8617  300002                     	org	3145730
  8618  300002  1F                 	db	31
  8619                           
  8620                           ;Config register CONFIG2H @ 0x300003
  8621                           ;	unspecified, using default values
  8622                           ;	Watchdog Timer Enable bit
  8623                           ;	WDT = 0x1, unprogrammed default
  8624                           ;	Watchdog Timer Postscale Select bits
  8625                           ;	WDTPS = 0xF, unprogrammed default
  8626  300003                     	org	3145731
  8627  300003  1F                 	db	31
  8628                           
  8629                           ; Padding undefined space
  8630  300004                     	org	3145732
  8631  300004  FF                 	db	255
  8632                           
  8633                           ;Config register CONFIG3H @ 0x300005
  8634                           ;	CCP2 MUX bit
  8635                           ;	CCP2MX = 0x1, unprogrammed default
  8636                           ;	PORTB A/D Enable bit
  8637                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8638                           ;	Low-Power Timer 1 Oscillator Enable bit
  8639                           ;	LPT1OSC = 0x0, unprogrammed default
  8640                           ;	MCLR Pin Enable bit
  8641                           ;	MCLRE = 0x1, unprogrammed default
  8642  300005                     	org	3145733
  8643  300005  81                 	db	129
  8644                           
  8645                           ;Config register CONFIG4L @ 0x300006
  8646                           ;	unspecified, using default values
  8647                           ;	Stack Full/Underflow Reset Enable bit
  8648                           ;	STVREN = 0x1, unprogrammed default
  8649                           ;	Single-Supply ICSP Enable bit
  8650                           ;	LVP = 0x1, unprogrammed default
  8651                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8652                           ;	ICPRT = 0x0, unprogrammed default
  8653                           ;	Extended Instruction Set Enable bit
  8654                           ;	XINST = 0x0, unprogrammed default
  8655                           ;	Background Debugger Enable bit
  8656                           ;	DEBUG = 0x1, unprogrammed default
  8657  300006                     	org	3145734
  8658  300006  85                 	db	133
  8659                           
  8660                           ; Padding undefined space
  8661  300007                     	org	3145735
  8662  300007  FF                 	db	255
  8663                           
  8664                           ;Config register CONFIG5L @ 0x300008
  8665                           ;	unspecified, using default values
  8666                           ;	Code Protection bit
  8667                           ;	CP0 = 0x1, unprogrammed default
  8668                           ;	Code Protection bit
  8669                           ;	CP1 = 0x1, unprogrammed default
  8670                           ;	Code Protection bit
  8671                           ;	CP2 = 0x1, unprogrammed default
  8672                           ;	Code Protection bit
  8673                           ;	CP3 = 0x1, unprogrammed default
  8674  300008                     	org	3145736
  8675  300008  0F                 	db	15
  8676                           
  8677                           ;Config register CONFIG5H @ 0x300009
  8678                           ;	unspecified, using default values
  8679                           ;	Boot Block Code Protection bit
  8680                           ;	CPB = 0x1, unprogrammed default
  8681                           ;	Data EEPROM Code Protection bit
  8682                           ;	CPD = 0x1, unprogrammed default
  8683  300009                     	org	3145737
  8684  300009  C0                 	db	192
  8685                           
  8686                           ;Config register CONFIG6L @ 0x30000A
  8687                           ;	unspecified, using default values
  8688                           ;	Write Protection bit
  8689                           ;	WRT0 = 0x1, unprogrammed default
  8690                           ;	Write Protection bit
  8691                           ;	WRT1 = 0x1, unprogrammed default
  8692                           ;	Write Protection bit
  8693                           ;	WRT2 = 0x1, unprogrammed default
  8694                           ;	Write Protection bit
  8695                           ;	WRT3 = 0x1, unprogrammed default
  8696  30000A                     	org	3145738
  8697  30000A  0F                 	db	15
  8698                           
  8699                           ;Config register CONFIG6H @ 0x30000B
  8700                           ;	unspecified, using default values
  8701                           ;	Configuration Register Write Protection bit
  8702                           ;	WRTC = 0x1, unprogrammed default
  8703                           ;	Boot Block Write Protection bit
  8704                           ;	WRTB = 0x1, unprogrammed default
  8705                           ;	Data EEPROM Write Protection bit
  8706                           ;	WRTD = 0x1, unprogrammed default
  8707  30000B                     	org	3145739
  8708  30000B  E0                 	db	224
  8709                           
  8710                           ;Config register CONFIG7L @ 0x30000C
  8711                           ;	unspecified, using default values
  8712                           ;	Table Read Protection bit
  8713                           ;	EBTR0 = 0x1, unprogrammed default
  8714                           ;	Table Read Protection bit
  8715                           ;	EBTR1 = 0x1, unprogrammed default
  8716                           ;	Table Read Protection bit
  8717                           ;	EBTR2 = 0x1, unprogrammed default
  8718                           ;	Table Read Protection bit
  8719                           ;	EBTR3 = 0x1, unprogrammed default
  8720  30000C                     	org	3145740
  8721  30000C  0F                 	db	15
  8722                           
  8723                           ;Config register CONFIG7H @ 0x30000D
  8724                           ;	Boot Block Table Read Protection bit
  8725                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8726  30000D                     	org	3145741
  8727  30000D  40                 	db	64
  8728                           tosu	equ	0xFFF
  8729                           tosh	equ	0xFFE
  8730                           tosl	equ	0xFFD
  8731                           stkptr	equ	0xFFC
  8732                           pclatu	equ	0xFFB
  8733                           pclath	equ	0xFFA
  8734                           pcl	equ	0xFF9
  8735                           tblptru	equ	0xFF8
  8736                           tblptrh	equ	0xFF7
  8737                           tblptrl	equ	0xFF6
  8738                           tablat	equ	0xFF5
  8739                           prodh	equ	0xFF4
  8740                           prodl	equ	0xFF3
  8741                           indf0	equ	0xFEF
  8742                           postinc0	equ	0xFEE
  8743                           postdec0	equ	0xFED
  8744                           preinc0	equ	0xFEC
  8745                           plusw0	equ	0xFEB
  8746                           fsr0h	equ	0xFEA
  8747                           fsr0l	equ	0xFE9
  8748                           wreg	equ	0xFE8
  8749                           indf1	equ	0xFE7
  8750                           postinc1	equ	0xFE6
  8751                           postdec1	equ	0xFE5
  8752                           preinc1	equ	0xFE4
  8753                           plusw1	equ	0xFE3
  8754                           fsr1h	equ	0xFE2
  8755                           fsr1l	equ	0xFE1
  8756                           bsr	equ	0xFE0
  8757                           indf2	equ	0xFDF
  8758                           postinc2	equ	0xFDE
  8759                           postdec2	equ	0xFDD
  8760                           preinc2	equ	0xFDC
  8761                           plusw2	equ	0xFDB
  8762                           fsr2h	equ	0xFDA
  8763                           fsr2l	equ	0xFD9
  8764                           status	equ	0xFD8

Data Sizes:
    Strings     30
    Constant    0
    Data        0
    BSS         98
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    105     123
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S781_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_escreve_lcd
    _escreve_lcd->_envia_byte_lcd
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _limpa_lcd->_envia_byte_lcd
    _inicializa_lcd->_envia_byte_lcd
    _caracter_inicio->_envia_byte_lcd
    _envia_byte_lcd->_envia_nibble_lcd

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_mostra_resultado
    _mostra_resultado->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   37162
                                             93 COMRAM     1     1      0
                    _caracter_inicio
                     _inicializa_lcd
                          _limpa_lcd
                   _mostra_resultado
 ---------------------------------------------------------------------------------
 (1) _mostra_resultado                                     6     4      2   34826
                                             99 BANK0      6     4      2
                            ___fldiv
                            ___flmul
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6   29644
                                             89 BANK0     10     4      6
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   29508
                                             91 COMRAM     2     2      0
                                             83 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   29136
                                             61 BANK0     22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   23173
                                             84 COMRAM     7     0      7
                                              0 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4493
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1899
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1498
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0     730
                                              5 COMRAM     1     1      0
                        _escreve_lcd
 ---------------------------------------------------------------------------------
 (7) _escreve_lcd                                          1     1      0     708
                                              4 COMRAM     1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2504
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     638
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _limpa_lcd                                            1     1      0     686
                                              4 COMRAM     1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (1) _inicializa_lcd                                       1     1      0     774
                                              4 COMRAM     1     1      0
                     _envia_byte_lcd
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (1) _caracter_inicio                                      3     2      1     876
                                              4 COMRAM     3     2      1
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (8) _envia_byte_lcd                                       2     1      1     686
                                              2 COMRAM     2     1      1
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (9) _envia_nibble_lcd                                     2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _ISR                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _caracter_inicio
     _envia_byte_lcd
       _envia_nibble_lcd
   _inicializa_lcd
     _envia_byte_lcd
       _envia_nibble_lcd
     _envia_nibble_lcd
   _limpa_lcd
     _envia_byte_lcd
       _envia_nibble_lcd
   _mostra_resultado
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
     _printf
       ___xxtofl (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _escreve_lcd
                     _envia_byte_lcd
                       _envia_nibble_lcd
               _fputs
                 _fputc
                   _putch
                     _escreve_lcd
                       _envia_byte_lcd
                         _envia_nibble_lcd
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _escreve_lcd
                 _envia_byte_lcd
                   _envia_nibble_lcd
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     69      7B       5       76.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     129      20        0.0%
DATA                 0      0     129       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Aug 06 08:55:10 2020

             ___fldiv@aexp 0040               ___fldiv@bexp 003F               ___fldiv@sign 0038  
                       l70 32FC                         l54 3274                         l46 33C4  
                       l63 37FE                         l48 33D2                         l73 37AE  
                       l82 337E                         l90 378A                         l76 37F4  
                       l87 3638                         l79 37E6               ___awdiv@sign 0006  
      ___wmul@multiplicand 0003                        l321 2FF4                        l334 30A4  
                      l360 2C96                        l355 2C50                        l364 36A8  
                      l620 15C0                        l349 314E                        l711 202E  
                      l704 1E38                        l721 215E                        l713 20A6  
                      l714 2094                        l618 160C                        l635 1726  
                      l627 18DC                        l619 15FA                        l387 2B92  
                      l708 219C                        l644 17F6                        l660 35B2  
                      l812 2EF4                        l645 17E4                        l814 2F30  
                      l752 2838                        l672 2536                        l832 141C  
                      l745 27A0                        l809 2EB2                        l674 2396  
                      l850 0C3A                        l922 1D72                        l683 23DC  
                      l748 28FC                        l685 2454                        l677 235A  
                      l686 2442                        l759 2894                        l935 3456  
                      l936 345E                        l768 373E                        l929 1C90  
                      l946 2D94                        l876 0FD2                        l975 2A84  
                      l984 2748                        l994 36E0                        l978 2A8C  
                      l987 268C                        _ISR 0008                        _pad 2E6C  
             ___awmod@sign 0006                        wreg 000FE8               ___flmul@aexp 0020  
             ___flmul@bexp 0021               ___flmul@sign 001B               ___flmul@temp 0026  
             ___flmul@prod 0022                       ?_ISR 0001               ___fltol@exp1 000A  
                     l1002 356C                       l1023 31E4                       l1031 35F6  
                     l1008 3670                       l1043 3716                       l1037 351A  
                     l1062 34BE                       l1047 2E6A                       l3001 2162  
                     l1057 34B6                       l3011 218C                       l3003 2172  
                     l3021 2F32                       l3101 30A6                       l3005 2180  
                     l3031 2F5E                       l3023 2F36                       l3111 3146  
                     l3103 30D4                       l3007 2182                       l3015 356E  
                     l3041 2F8C                       l3033 2F66                       l3025 2F44  
                     l3113 314C                       l3105 30E4                       l3121 2BD2  
                     l3009 2188                       l3017 357E                       l3201 2EBE  
                     l3051 2FC6                       l3043 2F94                       l3035 2F6A  
                     l3027 2F4C                       l3107 3112                       l3131 2C3E  
                     l3123 2C00                       l3203 2ED2                       l3061 2FEC  
                     l3053 2FC8                       l3045 2FA2                       l3037 2F72  
                     l3029 2F50                       l3109 3122                       l3133 2C8E  
                     l3125 2C10                       l3117 2B94                       l3141 3688  
                     l3221 2D2A                       l3213 2C98                       l2501 37F8  
                     l3205 2ED6                       l3301 0850                       l3055 2FCE  
                     l3047 2FA8                       l3039 2F84                       l3071 3010  
                     l3135 2C94                       l3127 2C1E                       l3119 2BC2  
                     l3143 3698                       l3231 2D8C                       l3215 2CB8  
                     l2511 319C                       l2503 3150                       l3207 2F04  
                     l3311 08A6                       l3303 0874                       l3049 2FBE  
                     l3057 2FD4                       l3081 3044                       l3073 3014  
                     l3065 2FF6                       l3129 2C30                       l2601 15A8  
                     l2521 1438                       l3161 2AF8                       l3153 2AB8  
                     l3217 2CF6                       l3225 2D36                       l2513 31D2  
                     l2505 3162                       l3209 2F18                       l3401 0C86  
                     l3321 08D4                       l3313 08B8                       l3305 087E  
                     l3059 2FE4                       l3091 307E                       l3083 304C  
                     l3075 3022                       l3067 2FFA                       l3139 3672  
                     l2611 15EC                       l2603 15B8                       l2531 146C  
                     l2523 143A                       l3171 2B28                       l3163 2B06  
                     l3155 2AE2                       l3147 2A8E                       l3227 2D48  
                     l3219 2D1E                       l3251 2558                       l2507 3174  
                     l3235 34C0                       l3243 3496                       l3411 0CE2  
                     l3403 0CBC                       l3331 0948                       l3315 08C4  
                     l3323 08DA                       l3307 0886                       l3085 305A  
                     l3093 3084                       l3077 302A                       l3069 3008  
                     l2701 189C                       l2613 15EE                       l2605 15CE  
                     l2541 149E                       l2525 144A                       l2533 1474  
                     l2517 141E                       l3181 2B52                       l3173 2B32  
                     l3157 2AE4                       l3149 2AA4                       l3261 2640  
                     l3253 25AE                       l2509 317E                       l3237 34D0  
                     l3245 34A8                       l3501 1126                       l3421 0D26  
                     l3413 0CF4                       l3405 0CC4                       l3333 0964  
                     l3325 0900                       l3341 09AE                       l3317 08CC  
                     l3309 0898                       l3095 3094                       l3087 3070  
                     l3079 303C                       l2711 18BC                       l2703 18A0  
                     l2631 1676                       l2623 163E                       l2615 15F8  
                     l2607 15DA                       l2551 14D4                       l2543 14A4  
                     l2535 1484                       l2527 145A                       l2519 142A  
                     l3183 2B62                       l3159 2AF4                       l3271 2728  
                     l3263 267C                       l3255 25C2                       l3191 2E6C  
                     l3239 3460                       l3511 11C4                       l3503 112A  
                     l3431 0D70                       l3423 0D3E                       l3415 0D02  
                     l3407 0CC8                       l3351 0A38                       l3343 09D4  
                     l3335 097C                       l3319 08D0                       l2481 3278  
                     l3281 351C                       l3601 296C                       l3097 309C  
                     l3089 3078                       l2801 22C0                       l2713 18CA  
                     l2705 18AE                       l2633 167A                       l2625 164E  
                     l2617 161A                       l2641 169A                       l2609 15DE  
                     l2561 1510                       l2553 14E4                       l2545 14B2  
                     l2537 148A                       l2529 146A                       l3185 2B72  
                     l3169 2B1E                       l3273 2738                       l3257 25D0  
                     l3265 26B0                       l3249 2538                       l2721 35C0  
                     l3193 2E7C                       l3521 1222                       l3505 1130  
                     l3513 11C8                       l3433 0D84                       l3441 0E7A  
                     l3425 0D50                       l3417 0D06                       l3409 0CD0  
                     l3361 0A9C                       l3353 0A50                       l3337 0986  
                     l3329 0936                       l2483 327A                       l2491 378E  
                     l3283 3520                       l3611 2994                       l3603 2970  
                     l2811 230E                       l2715 18CC                       l2707 18B4  
                     l2643 16C0                       l2651 1716                       l2635 1688  
                     l2627 165C                       l2619 162A                       l2571 152E  
                     l2563 151E                       l2555 14E6                       l2547 14B4  
                     l2539 149C                       l3187 2B82                       l3179 2B46  
                     l3267 26EC                       l2723 35D2                       l2731 36F2  
                     l3195 2E90                       l3531 1260                       l3523 1232  
                     l3515 11E6                       l3507 1188                       l3451 0F46  
                     l3443 0E98                       l3435 0DE8                       l3419 0D18  
                     l3427 0D58                       l3371 0B66                       l3355 0A5A  
                     l3347 0A0A                       l2485 32EA                       l2493 3798  
                     l2741 3766                       l3277 36AA                       l3285 3534  
                     l3613 299C                       l2821 2358                       l2813 231E  
                     l2805 22D4                       l2901 1DD6                       l2709 18B6  
                     l2661 176A                       l2653 173C                       l2645 16F4  
                     l2637 168A                       l2629 166A                       l2581 1542  
                     l2573 1532                       l2565 1522                       l2549 14C4  
                     l2557 14EE                       l3269 2700                       l2725 35D6  
                     l2733 370A                       l3197 2E9E                       l3541 1296  
                     l3533 1270                       l3525 1236                       l3517 1202  
                     l3509 11BC                       l3461 0FBE                       l3453 0F56  
                     l3445 0ECC                       l3437 0E40                       l3429 0D60  
                     l3381 0BE8                       l3373 0B9A                       l3365 0AD2  
                     l3349 0A1C                       l3293 0820                       l2487 32F2  
                     l2495 379E                       l2743 3782                       l3287 3562  
                     l3623 2A44                       l3615 29D0                       l3607 2976  
                     l2831 23A6                       l2823 2364                       l2815 2326  
                     l2807 22EE                       l2751 21B8                       l2911 1E02  
                     l2903 1DDC                       l2671 1794                       l2663 1778  
                     l2655 174C                       l2647 16F6                       l2639 1694  
                     l2591 1556                       l2583 1546                       l2575 1536  
                     l2567 1526                       l2559 14FE                       l2719 35B4  
                     l2727 36E2                       l3199 2EAA                       l3551 12F2  
                     l3543 12A2                       l3535 1278                       l3527 1246  
                     l3519 1214                       l3471 1074                       l3463 0FCA  
                     l3455 0F66                       l3447 0EFE                       l3439 0E74  
                     l3383 0BFA                       l3391 0C46                       l3375 0BA2  
                     l3367 0B06                       l3359 0A82                       l3295 082A  
                     l3711 1C2C                       l3703 1B7E                       l2489 32F4  
                     l2497 37A6                       l3289 3566                       l3625 2A56  
                     l3609 298C                       l2833 23BC                       l2841 23EC  
                     l2825 2382                       l2817 2336                       l2809 22FE  
                     l2761 21EC                       l2753 21BA                       l2921 1E58  
                     l2913 1E12                       l2905 1DE2                       l2681 17C6  
                     l2673 17A4                       l2665 177A                       l2649 1706  
                     l2593 155A                       l2585 154A                       l2577 153A  
                     l2569 152A                       l2729 36EE                       l2737 363A  
                     l3561 133C                       l3545 12A8                       l3553 12F8  
                     l3537 1286                       l3529 1258                       l3481 10BC  
                     l3473 1086                       l3465 0FEE                       l3457 0F9A  
                     l3449 0F14                       l3385 0C0C                       l3369 0B0C  
                     l3377 0BD4                       l3297 083A                       l3641 2DDA  
                     l3633 2D96                       l3721 1CF0                       l3713 1C60  
                     l3705 1BAC                       l3811 3334                       l3803 32FE  
                     l3627 2A68                       l3619 2A06                       l2843 23FA  
                     l2835 23C2                       l2827 2384                       l2819 234A  
                     l2771 221E                       l2755 21CA                       l2763 21F4  
                     l2747 219E                       l2931 1E98                       l2915 1E22  
                     l2907 1DF0                       l2691 1820                       l2683 17DC  
                     l2667 1788                       l2659 1760                       l2675 17A6  
                     l2587 154E                       l2579 153E                       l2595 155E  
                     l2499 37EA                       l3571 136C                       l3563 1348  
                     l3555 130A                       l3547 12CE                       l3539 128E  
                     l3491 10F2                       l3483 10CC                       l3475 1094  
                     l3467 1052                       l3459 0FAA                       l3387 0C14  
                     l3379 0BE4                       l3299 0848                       l3643 2DF2  
                     l3635 2DC0                       l3731 1D2E                       l3723 1CFE  
                     l3715 1CA0                       l3821 336A                       l3813 333C  
                     l3805 3308                       l2853 2464                       l2861 24AC  
                     l2845 23FE                       l2837 23CC                       l2829 2394  
                     l2781 2252                       l2773 2220                       l2765 2204  
                     l2757 21DA                       l2749 21AA                       l2941 1EE2  
                     l2933 1EA4                       l2925 1E6C                       l2917 1E28  
                     l2909 1DF2                       l2693 185A                       l2669 1790  
                     l2677 17B4                       l2597 1562                       l2589 1552  
                     l3581 13C6                       l3565 1350                       l3557 1324  
                     l3549 12EA                       l3493 10F6                       l3485 10D0  
                     l3469 1062                       l3477 109C                       l3397 0C58  
                     l3389 0C2E                       l3645 2E0E                       l3725 1D12  
                     l3709 1C1A                       l3661 1926                       l3653 18DE  
                     ?_pad 0017                       l3831 35FE                       l3823 3374  
                     l3815 3342                       l3807 3318                       l3591 28FE  
                     l2871 2516                       l2863 24C6                       l2855 2470  
                     l2847 240C                       l2839 23DA                       l2791 2298  
                     l2775 2230                       l2783 225A                       l2767 220A  
                     l2759 21EA                       l2951 1F34                       l2943 1EEE  
                     l2935 1EBC                       l2927 1E78                       l2919 1E48  
                     l2687 1806                       l2695 185C                       l2679 17B8  
                     l2599 158C                       l3583 13D6                       l3575 13A0  
                     l3567 1360                       l3559 132A                       l3495 10FC  
                     l3487 10D6                       l3479 10AE                       l3399 0C6A  
                     l3647 2E20                       l3639 2DCC                       l3719 1CCC  
                     l3671 19BE                       l3663 194A                       l3655 1902  
                     l3735 1D3C                       l3743 33FE                       l3751 3718  
                     l3841 362E                       l3833 360E                       l3817 3348  
                     l3809 331E                       l3825 37CE                       l3761 276A  
                     l3593 2912                       l2873 2524                       l2865 24DC  
                     l2857 247E                       l2849 243A                       l2793 229C  
                     l2785 226A                       l2777 2240                       l2769 2210  
                     l2961 1FB2                       l2953 1F44                       l2945 1EFE  
                     l2937 1EC8                       l2929 1E82                       l2697 186C  
                     l2689 1812                       l3585 13DC                       l3577 13B2  
                     l3569 1366                       l3489 10E2                       l3497 1102  
                     l3649 2E48                       l3737 1D60                       l3729 1D20  
                     l3673 19DE                       l3665 1952                       l3681 1A46  
                     l3657 1910                       l3745 3406                       l3753 3722  
                     l3835 3612                       l3819 3360                       l3827 37D8  
                     l3771 27E2                       l3763 27B0                       l3595 2916  
                     l2875 252A                       l2867 24F6                       l2859 24A8  
                     l2787 2280                       l2779 2250                       l2971 202C  
                     l2963 1FE8                       l2955 1F60                       l2947 1F0A  
                     l2939 1ED4                       l2891 1D90                       l2699 187C  
                     l3579 13BE                       l3587 13F8                       l3499 1114  
                     l3691 1AEC                       l3683 1A68                       l3675 19EC  
                     l3667 1960                       l3659 1922                       l3747 3414  
                     l3843 31E6                       l3851 3396                       l3837 3624  
                     l3829 35FA                       l3781 286A                       l3773 27EE  
                     l3765 27C6                       l3757 274C                       l3597 291A  
                     l2877 252C                       l2869 2512                       l2789 2290  
                     l2797 22B0                       l2981 208C                       l2973 203E  
                     l2965 1FF6                       l2957 1F6C                       l2949 1F1A  
                     l2893 1DA0                       l2885 1D74                       l3693 1AFE  
                     l3685 1A78                       l3669 1984                       l3749 343A  
                     l3845 3256                       l3861 33AA                       l3853 33A0  
                     l3839 3628                       l3791 28A8                       l3783 2876  
                     l3775 2820                       l3759 275C                       l3599 2936  
                     l2799 22C0                       l2991 20FA                       l2975 204C  
                     l2967 2014                       l2959 1F88                       l2895 1DB0  
                     l2887 1D80                       l3695 1B14                       l3687 1AAA  
                     l3679 1A34                       l3863 33B8                       l3855 33A2  
                     l3847 3380                       l3793 28CC                       l3785 2884  
                     l3777 2822                       l3769 27DA                       l2985 20B6  
                     l2993 20FE                       l2977 2050                       l2969 201E  
                     l2897 1DC0                       l2889 1D8E                       l3697 1B22  
                     l3689 1ABA                       l3865 33C2                       l3857 33A4  
                     l3849 338C                       l3795 28DC                       l3787 28A2  
                     l3779 282E                       l2995 2118                       l2987 20C2  
                     l2979 205E                       l2899 1DC6                       l3699 1B52  
                     l3867 33DA                       l3859 33A6                       l3797 28EA  
                     l3789 28A4                       l2997 212C                       l2989 20D0  
                     l3869 33E6                       l3799 28EC                       l3895 29BA  
                     l2999 2146                       _ADIF 007CF6                       _ADON 007E10  
                     STR_1 0801                       STR_2 080C                       STR_3 0814  
                     STR_6 0810                       STR_7 0818                       _GIEH 007F97  
                     _GIEL 007F96                       u3000 2382                       u3001 237E  
                     u3010 23A6                       u3011 23A2                       u3100 24C6  
                     u3020 23BC                       u3101 24C2                       u3021 23B8  
                     u3110 24F6                       u3030 23DA                       u3111 24F2  
                     u3031 23D6                       u3120 2524                       u3040 23FA  
                     u3200 1E58                       u4000 0A06                       u3121 2520  
                     u3041 23F6                       u3201 1E54                       u3050 240C  
                     u3210 1FD2                       u3130 1D8E                       u4010 0A1C  
                     u3051 2408                       u3131 1D8A                       u4011 0A18  
                     u3060 243A                       u3300 2146                       u3220 202C  
                     u3140 1DA0                       u2500 149C                       u4100 0C86  
                     u4020 0ACE                       u3061 2436                       u3301 2142  
                     u3221 2028                       u3141 1D9C                       u2501 1498  
                     u4101 0C82                       u4021 0ACA                       u3070 2450  
                     u3310 2180                       u3230 204C                       u3150 1DB0  
                     u2510 14B2                       u2430 3162                       u4110 0CBC  
                     u4030 0B62                       u3071 244C                       u3311 217C  
                     u3231 2048                       u3215 1FC8                       u3151 1DAC  
                     u2511 14AE                       u2431 315E                       u4111 0CB8  
                     u4031 0B5E                       u3320 2F44                       u3400 303C  
                     u3080 2464                       u3240 205E                       u3160 1DF0  
                     u2600 15EC                       u2520 14C4                       u2440 3174  
                     u4200 0F46                       u4120 0CE2                       u4040 0BD4  
                     u2425 3796                       u3321 2F40                       u3401 3038  
                     u3081 2460                       u3241 205A                       u3161 1DEC  
                     u2601 15E8                       u2521 14C0                       u2441 3170  
                     u4201 0F42                       u4121 0CDE                       u4041 0BD0  
                     u2426 3798                       u3330 2F5E                       u3410 305A  
                     u3090 247E                       u3250 208C                       u3170 1E02  
                     u2610 160C                       u2530 14D4                       u2450 319C  
                     u4210 0F56                       u4130 0CF4                       u4050 0BFA  
                     u3331 2F5A                       u3411 3056                       u3091 247A  
                     u3251 2088                       u3171 1DFE                       u2611 1608  
                     u2531 14D0                       u2451 3198                       u4211 0F52  
                     u4131 0CF0                       u4051 0BF6                       u3340 2F84  
                     u3420 3070                       u3500 2C3E                       u3260 20A2  
                     u3180 1E12                       u2700 174C                       u2620 161A  
                     u2540 1510                       u2460 31D2                       u4300 11E6  
                     u4220 0FBE                       u4140 0D02                       u4060 0C0C  
                     u3341 2F80                       u3421 306C                       u3501 2C3A  
                     u3261 209E                       u3181 1E0E                       u2701 1748  
                     u2621 1616                       u2541 150C                       u2461 31CE  
                     u4301 11E2                       u4221 0FBA                       u4141 0CFE  
                     u4061 0C08                       u3350 2FA2                       u3430 3094  
                     u3510 2C8E                       u3270 20B6                       u3190 1E48  
                     u2710 1778                       u2630 162A                       u2550 151E  
                     u2470 1438                       u4310 1202                       u4230 1062  
                     u4150 0D18                       u4070 0C2E                       u3351 2F9E  
                     u3431 3090                       u3511 2C8A                       u3271 20B2  
                     u3191 1E44                       u2711 1774                       u2631 1626  
                     u2551 151A                       u2471 1434                       u4311 11FE  
                     u4231 105E                       u4151 0D14                       u4071 0C2A  
                     u3360 2FBE                       u3440 30D4                       u3280 20D0  
                     u3520 3688                       u2800 185A                       u2720 1788  
                     u2640 165C                       u2560 158C                       u2480 144A  
                     u3600 2E7C                       u4400 139C                       u4320 1214  
                     u4240 1074                       u4160 0D26                       u4080 0C54  
                     u3361 2FBA                       u3441 30D0                       u3281 20CC  
                     u3521 3684                       u2801 1856                       u2721 1784  
                     u2641 1658                       u2561 1588                       u2481 1446  
                     u3601 2E78                       u4321 1210                       u4241 1070  
                     u4161 0D22                       u4081 0C50                       u3370 2FE4  
                     u3450 3112                       u3290 2118                       u2810 186C  
                     u2730 17A4                       u2650 166A                       u2570 15A4  
                     u2490 145A                       u3530 2AA4                       u3610 2E9E  
                     u4410 13B2                       u4330 1222                       u4250 1086  
                     u4170 0D50                       u4090 0C6A                       u3371 2FE0  
                     u3451 310E                       u3291 2114                       u2811 1868  
                     u2731 17A0                       u2651 1666                       u2571 159E  
                     u2491 1456                       u3531 2AA0                       u3611 2E9A  
                     u4411 13AE                       u4331 121E                       u4251 1082  
                     u4171 0D4C                       u4091 0C66                       u4420 2936  
                     u3380 3008                       u2900 21B8                       u3460 3146  
                     u2820 187C                       u2740 17B4                       u2660 1688  
                     u2580 15A6                       u3540 2AD8                       u3700 2D84  
                     u3620 2EF4                       u4340 1258                       u4260 1094  
                     u4180 0E98                       u4500 2DF2                       u4421 2932  
                     u3381 3004                       u2901 21B4                       u3461 3142  
                     u2821 1878                       u2741 17B0                       u2661 1684  
                     u3621 2EF0                       u4341 1254                       u4261 1090  
                     u4181 0E94                       u4501 2DEE                       u4430 296C  
                     u3390 3022                       u2910 21CA                       u3470 2BC2  
                     u2830 189C                       u2750 17C6                       u2670 16C0  
                     u2590 15CE                       u3550 2B06                       u3630 2F04  
                     u3710 3508                       u4350 1286                       u4270 10AE  
                     u4190 0EFE                       u4510 2E0E                       u4431 2968  
                     u3391 301E                       u2911 21C6                       u3471 2BBE  
                     u2831 1898                       u2751 17C2                       u2671 16BC  
                     u2591 15CA                       u3551 2B02                       u3631 2F00  
                     u4351 1282                       u4271 10AA                       u4191 0EFA  
                     u4511 2E0A                       u4440 2988                       u2920 21DA  
                     u3480 2C00                       u2840 18AE                       u2760 17DC  
                     u2680 1706                       u3560 2B1A                       u3640 2CD8  
                     u3800 263C                       u3720 351A                       u4360 130A  
                     u4280 10BC                       u4520 2E20                       u4600 1A78  
                     u4441 2984                       u2921 21D6                       u3481 2BFC  
                     u2841 18AA                       u2761 17D8                       u2681 1702  
                     u3561 2B16                       u3545 2ACE                       u3801 2638  
                     u3721 3516                       u4361 1306                       u4281 10B8  
                     u4521 2E1C                       u4601 1A74                       u4450 2A3E  
                     u2930 221E                       u3490 2C1E                       u2850 18CA  
                     u2770 17F2                       u2690 173C                       u3570 2B42  
                     u3650 2CF6                       u3810 2660                       u3730 3490  
                     u4370 1324                       u4290 1114                       u4530 2E48  
                     u4610 1ABA                       u4451 2A38                       u2931 221A  
                     u3491 2C1A                       u2851 18C6                       u2771 17EE  
                     u2691 1738                       u3571 2B3E                       u3651 2CF2  
                     u3731 348A                       u4371 1320                       u4291 1110  
                     u4531 2E44                       u4611 1AB6                       u4700 276A  
                     u4460 2A40                       u2940 2230                       u2780 1806  
                     u3580 2B62                       u3660 2D1E                       u3820 267C  
                     u2860 35F6                       u3740 3492                       u4380 133C  
                     u3900 0848                       u4620 1AFE                       u4540 1902  
                     u4701 2766                       u2941 222C                       u2781 1802  
                     u3581 2B5E                       u3661 2D1A                       u3645 2CCE  
                     u3821 2678                       u2861 35F2                       u3717 34FE  
                     u4381 1338                       u3901 0844                       u4621 1AFA  
                     u4541 18FE                       u4710 27C6                       u4470 2A56  
                     u2950 2240                       u2790 1820                       u3590 2B72  
                     u3670 2D48                       u3830 26D0                       u2870 370A  
                     u3750 34A8                       u4390 139A                       u3910 0898  
                     u4630 1BAC                       u4550 194A                       u4711 27C2  
                     u4471 2A52                       u2951 223C                       u2791 181C  
                     u3591 2B6E                       u3671 2D44                       u3815 2656  
                     u2871 3706                       u3751 34A4                       u4391 1394  
                     u3911 0894                       u4631 1BA8                       u4551 1946  
                     u4800 3624                       u4720 281C                       u4480 2A68  
                     u2960 2280                       u3840 26EC                       u3760 2580  
                     u2880 366A                       u3920 08A6                       u4640 1C14  
                     u4560 1984                       u4801 3620                       u4721 2818  
                     u4481 2A64                       u2961 227C                       u3841 26E8  
                     u2881 3664                       u3921 08A2                       u4641 1C0E  
                     u4561 1980                       u4730 2866                       u2970 22C0  
                     u3690 2D82                       u3850 2728                       u3770 25AE  
                     u2890 366C                       u3930 08B8                       u4490 2DC0  
                     u4650 1C16                       u4570 1A2E                       u4810 33D2  
                     u4731 2862                       u2971 22BC                       u3691 2D7C  
                     u3851 2724                       u3835 26C6                       u3771 25AA  
                     u3931 08B4                       u4491 2DBC                       u4571 1A28  
                     u4811 33CE                       u4740 2884                       u3860 36DA  
                     u2980 2336                       u3780 25D0                       u3940 0900  
                     u4660 1C2C                       u4580 1A30                       u4741 2880  
                     u3861 36D4                       u2981 2332                       u3685 2D5A  
                     u3781 25CC                       u3765 2576                       u3941 08FC  
                     u4661 1C28                       u4750 2894                       u3870 36DC  
                     u2990 2358                       u3950 0930                       u4670 1CF0  
                     u4590 1A46                       u4751 2890                       u2991 2354  
                     u3951 092A                       u4671 1CEC                       u4591 1A42  
                     u4760 28A2                       u3880 3534                       u3960 0932  
                     u4680 3456                       u4761 289E                       u3881 3530  
                     u4681 3452                       u4770 28DC                       u4690 275C  
                     u3890 3562                       u3970 0948                       u4907 32F6  
                     u4771 28D8                       u4691 2758                       u3891 355E  
                     u3795 25E4                       u3971 0944                       i2l60 37CA  
                     u4780 28EA                       u3796 25EE                       u3980 09D4  
                     u4781 28E6                       u3797 25FE                       u3981 09D0  
                     u4837 33EC                       u4790 360E                       u3990 0A04  
                     u4791 360A                       u4847 37DE                       u3991 09FE  
                     u4857 330E                       u4867 3324                       u4877 3336  
                     u4887 3358                       u4897 32EC               ?_escreve_lcd 0001  
   envia_byte_lcd@endereco 0004                       _dbuf 0100                       _atoi 28FE  
                     _main 3380                       _prec 00D5                       _nout 00D1  
                     pad@i 001E                       pad@p 001B                       fsr1h 000FE2  
                     fsr2h 000FDA                       indf1 000FE7                       indf2 000FDF  
                     fsr1l 000FE1                       pad@w 0020                       fsr2l 000FD9  
                     btemp 005F              ___fpclassifyf 2C98                       prodh 000FF4  
                     prodl 000FF3                       start 000E            ___fldiv@new_exp 0039  
             _tolower$1050 000D    __end_of_caracter_inicio 363A               ___param_bank 000000  
                    ??_ISR 0001                      ??_pad 001D              ___fltol@sign1 0009  
                    ?_atoi 0008            __end_of___fladd 18DE                      ?_main 0001  
          __end_of___fldiv 2538            __end_of___awdiv 2FF6            __end_of___flneg 36AA  
                    _ADRES 000FC3                      STR_10 081C                      STR_12 081C  
          __end_of___awmod 30A6            __end_of___flmul 219E            __end_of___flsub 35B4  
          __end_of___fltol 2B94            ___awdiv@divisor 0003            ___awdiv@counter 0005  
             vfpfcnvrt@fmt 009F                      _PORTD 000F83                      _TRISB 000F93  
                    _TRISD 000F95    __size_of_envia_byte_lcd 0024                      _flags 00D7  
                    _fputc 3150                      _fputs 35B4            __end_of_isdigit 36E2  
                    atoi@n 0015                      pad@fp 0017                      atoi@s 0008  
                    _width 00D3                      _putch 37F6            __end_of_isspace 356E  
          __end_of_isupper 3672                      tablat 000FF5                      ttemp5 0060  
                    ttemp6 0063                      ttemp7 0067                      status 000FD8  
                    wtemp8 0060             ?___fpclassifyf 0001            __end_of_tolower 34C0  
          __end_of_strncmp 2E6C            __initialization 3740               __end_of_atoi 2A8E  
             __end_of_main 33FE                     ??_atoi 000A                     ??_main 005E  
            __activetblptr 000002                     ?_fputc 0007                     ?_fputs 0010  
         ___awdiv@dividend 0001                     ?_putch 0001                     i2l3871 37B2  
                   i2l3873 37C0    __size_of_inicializa_lcd 0082           __end_of___xxtofl 28FE  
         _envia_nibble_lcd 3276          ?_mostra_resultado 00C3               vfprintf@cfmt 005C  
         ?_caracter_inicio 0005                     ___flge 2B94                     ___fleq 30A6  
                ??___fladd 0009                     ___wmul 3766                  ??___fldiv 0030  
                ??___awdiv 0005                  ??___flneg 0005                  ??___awmod 0005  
                ??___flmul 0017                  ??___flsub 0030                  ??___fltol 0005  
       ??_mostra_resultado 005E                     _efgtoa 0820                     _floorf 2538  
                   clear_0 3746                     clear_1 3752           ___awdiv@quotient 0007  
          ___awmod@divisor 0003            ___awmod@counter 0005                     _printf 3718  
                   pad@buf 0019                     _strcpy 34C0                     _strlen 36E2  
                   fputc@c 0007                     fputs@c 0014                     fputs@i 0015  
                   fputs@s 0010                  ??_isdigit 0003            ___fpclassifyf@e 0009  
          ___fpclassifyf@u 000B            ___fpclassifyf@x 0001               __mediumconst 0000  
                ??_isspace 0003                     tblptrh 000FF7                  ??_isupper 0003  
                   tblptrl 000FF6                     tblptru 000FF8           __end_of_vfprintf 3460  
                ??_tolower 0009                  ??_strncmp 0007                 ___flge@ff1 0028  
               ___flge@ff2 002C            ??___fpclassifyf 0005               ___xxtofl@arg 000B  
             ___xxtofl@exp 000A               ___xxtofl@val 0001                 ___fleq@ff1 0001  
               ___fleq@ff2 0005                 __accesstop 0060    __end_of__initialization 3758  
       envia_byte_lcd@dado 0003                 ___flneg@f1 0001       __size_of_escreve_lcd 000E  
            ___rparam_used 000001                 ___fltol@f1 0001      _mostra_resultado$1250 00C5  
             escreve_lcd@c 0005             __pcstackCOMRAM 0001              __end_of_fputc 31E6  
            __end_of_fputs 35F8              __end_of_putch 3800             _envia_byte_lcd 378C  
                  ??_fputc 000B                    ??_fputs 0014                    ??_putch 0006  
               __pbssBANK0 00C9                 __pbssBANK1 0100         __size_of_limpa_lcd 001A  
               _efgtoa$903 006D                 _efgtoa$907 006F                 _efgtoa$908 0071  
               _efgtoa$909 0073                 _efgtoa$897 0069                 _efgtoa$898 006B  
                  ?___flge 0028                    ?___fleq 0001                    ?___wmul 0001  
                  ?_efgtoa 0055                    ?_floorf 0041                    ?_printf 00B9  
                  ?_strcpy 0001                    ?_strlen 0001     __end_of_envia_byte_lcd 37B0  
                ?___xxtofl 0001         __size_of_vfpfcnvrt 0496             _inicializa_lcd 32FE  
                  __Hparam 0000       caracter_inicio@linha 0006                    __Lparam 0000  
          __size_of___flge 0104            __size_of___fleq 00AA                    ___fladd 141E  
                  ___fldiv 219E                    ___awdiv 2F32                    ___flneg 3672  
                  ___awmod 2FF6                    ___flmul 1D74                    ___flsub 356E  
                  ___fltol 2A8E            __size_of___wmul 0026                  ?_vfprintf 00B3  
             __psmallconst 0800            __size_of_efgtoa 0BFE            __size_of_floorf 0212  
                  __pcinit 3740                    __ramtop 0800                    __ptext0 3380  
                  __ptext1 31E6                    __ptext2 3718                    __ptext3 33FE  
                  __ptext4 18DE                    __ptext5 2D96                    __ptext6 0820  
                  __ptext7 3460                    __ptext8 363A                    __ptext9 34C0  
          __size_of_printf 0028            __size_of_strcpy 005C            __size_of_strlen 0036  
             __size_of_ISR 37C6            ?_envia_byte_lcd 0003               __size_of_pad 00C6  
                  _isdigit 36AA                 ??___xxtofl 0005           ___awmod@dividend 0001  
        __end_of_limpa_lcd 37E8                    _isspace 351C                    _isupper 363A  
                  efgtoa@c 005B                    efgtoa@d 007D                    efgtoa@e 0095  
                  efgtoa@f 0057                    efgtoa@g 0091                    efgtoa@h 0087  
                  efgtoa@i 008F                    efgtoa@l 008B                    efgtoa@m 0079  
                  efgtoa@n 0097                    efgtoa@p 0081                    efgtoa@t 0075  
                  efgtoa@u 0099                    efgtoa@w 0084   __end_of_envia_nibble_lcd 32FE  
                  atoi@neg 000E                    _tolower 3460     __end_of_inicializa_lcd 3380  
                  _strncmp 2D96             __pintcode_body 37B0       end_of_initialization 3758  
                  floorf@e 004F                    floorf@m 004B                    floorf@u 0051  
                  floorf@x 0041                    fputc@fp 0009              __Lmediumconst 0000  
                  int_func 37B0                    fputs@fp 0012          __end_of_vfpfcnvrt 1D74  
               efgtoa@mode 0086                 efgtoa@sign 007F                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
               ??_vfprintf 005C                    strcpy@d 0009                    strlen@a 0003  
                  strcpy@s 0007                    strlen@s 0001                  _PORTDbits 000F83  
              ___fladd@grs 0010  __size_of_mostra_resultado 0090              ___xxtofl@sign 0009  
              ___fldiv@grs 003B                ___fldiv@rem 0034            ?_inicializa_lcd 0001  
              ___flmul@grs 001C             __end_of___flge 2C98             __end_of___fleq 3150  
              vfpfcnvrt@ap 00A1                vfpfcnvrt@ct 00AF                vfpfcnvrt@fp 009D  
           __end_of___wmul 378C             __end_of_efgtoa 141E             __end_of_floorf 274A  
               floorf@F524 00C9   __size_of_caracter_inicio 0042             __end_of_printf 3740  
           __end_of_strcpy 351C             __end_of_strlen 3718        start_initialization 3740  
              __end_of_ISR 37CE                __end_of_pad 2F32              ??_escreve_lcd 0005  
    __end_of___fpclassifyf 2D96     caracter_inicio@posicao 0007                vfprintf@fmt 00B5  
                 ??___flge 0030                   ??___fleq 0009                   ??___wmul 0005  
                 ??_efgtoa 0060                   ??_floorf 0045                   ??_printf 005E  
                 ??_strcpy 0005                   ??_strlen 0003                  ___fladd@a 0005  
                ___fladd@b 0001                  ___fldiv@a 002C                  ___fldiv@b 0028  
                ___flmul@a 0013                  ___flmul@b 000F                  ___flsub@a 002C  
                ___flsub@b 0028              __pcstackBANK0 0060          __size_of___xxtofl 01B4  
      __end_of_escreve_lcd 37F6                  __pintcode 0008                   ?___fladd 0001  
                 ?___fldiv 0028                   ?___awdiv 0001                   ?___flneg 0001  
                 ?___awmod 0001                   ?___flmul 000F                   ?___flsub 0028  
                 ?___fltol 0001           ??_envia_byte_lcd 0004          __size_of_vfprintf 0062  
              __smallconst 0800                   ?_isdigit 0001           _mostra_resultado 31E6  
                 ?_isspace 0001                   ?_isupper 0001          ?_envia_nibble_lcd 0001  
        ??_caracter_inicio 0006                   ?_tolower 0007             __size_of_fputc 0096  
           __size_of_fputs 0044                   ?_strncmp 0001                  _limpa_lcd 37CE  
           __size_of_putch 000A         ??_envia_nibble_lcd 0001             ___wmul@product 0005  
                 _PIE1bits 000F9D                   i2u482_40 37C0                   i2u482_41 37BC  
                _resultado 00D9                  _vfpfcnvrt 18DE                 _ADCON0bits 000FC2  
               _ADCON1bits 000FC1                 _ADCON2bits 000FC0          ___wmul@multiplier 0001  
         ??_inicializa_lcd 0005                 vfpfcnvrt@c 00B2                 vfpfcnvrt@f 00AB  
               ?_limpa_lcd 0001                _escreve_lcd 37E8      caracter_inicio@coluna 0005  
                 __Hrparam 0000                 vfprintf@ap 00B7                   __Lrparam 0000  
               vfprintf@fp 00B3           __size_of___fladd 04C0           __size_of___fldiv 039A  
         __size_of___awdiv 00C4           __size_of___flneg 0038           __size_of___awmod 00B0  
         __size_of___flmul 042A           __size_of___flsub 0046           __size_of___fltol 0106  
               ?_vfpfcnvrt 009D         ___fpclassifyf@F463 00CD                   ___xxtofl 274A  
                 _atoi$961 0010                   _atoi$962 0014                   _atoi$963 0012  
         __size_of_isdigit 0038           __size_of_isspace 0052                   __ptext10 2E6C  
                 __ptext11 36E2                   __ptext20 141E                   __ptext12 35B4  
                 __ptext21 3672                   __ptext13 3150                   __ptext30 36AA  
                 __ptext22 1D74                   __ptext14 37F6                   __ptext31 3766  
                 __ptext23 2B94                   __ptext15 37E8                   __ptext32 274A  
                 __ptext24 30A6                   __ptext16 2538                   __ptext33 37CE  
                 __ptext25 219E                   __ptext17 2C98                   __ptext34 32FE  
                 __ptext26 2FF6                   __ptext18 2A8E                   __ptext35 35F8  
                 __ptext27 2F32                   __ptext19 356E                   __ptext36 378C  
                 __ptext28 28FE                   __ptext37 3276                   __ptext29 351C  
         __size_of_isupper 0038           __size_of_tolower 0060                 strcpy@dest 0001  
         __size_of_strncmp 00D6              __size_of_atoi 0190              __size_of_main 007E  
                 efgtoa@fp 0055                   efgtoa@ne 007B                   efgtoa@pp 0077  
                 efgtoa@ou 0065                   int$flags 005F                   _vfprintf 33FE  
                printf@fmt 00B9                _isspace$992 0007                  putch@data 0006  
                 isdigit@c 0001  mostra_resultado@resultado 00C3                ??_limpa_lcd 0005  
                 intlevel2 0000                   isspace@c 0001                  strcpy@src 0003  
                 isupper@c 0001                  strncmp@_l 0001                  strncmp@_r 0003  
 __end_of_mostra_resultado 3276                efgtoa@nmode 0083                   printf@ap 00C1  
              ??_vfpfcnvrt 00A3              _vfpfcnvrt$923 00A7              _vfpfcnvrt$927 00A9  
          _caracter_inicio 35F8                   tolower@c 0007     __size_of___fpclassifyf 00FE  
     envia_nibble_lcd@dado 0002                   strncmp@l 0008                   strncmp@n 0005  
                 strncmp@r 000A              ___fladd@signs 000D               ___fladd@aexp 000E  
             ___fladd@bexp 000F  __size_of_envia_nibble_lcd 0088  
